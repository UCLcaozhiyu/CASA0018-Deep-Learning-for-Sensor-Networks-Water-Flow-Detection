/*
 * Copyright (c) 2025 EdgeImpulse Inc.
 *
 * Generated by Edge Impulse and licensed under the applicable Edge Impulse
 * Terms of Service. Community and Professional Terms of Service
 * (https://edgeimpulse.com/legal/terms-of-service) or Enterprise Terms of
 * Service (https://edgeimpulse.com/legal/enterprise-terms-of-service),
 * according to your product plan subscription (the “License”).
 *
 * This software, documentation and other associated files (collectively referred
 * to as the “Software”) is a single SDK variation generated by the Edge Impulse
 * platform and requires an active paid Edge Impulse subscription to use this
 * Software for any purpose.
 *
 * You may NOT use this Software unless you have an active Edge Impulse subscription
 * that meets the eligibility requirements for the applicable License, subject to
 * your full and continued compliance with the terms and conditions of the License,
 * including without limitation any usage restrictions under the applicable License.
 *
 * If you do not have an active Edge Impulse product plan subscription, or if use
 * of this Software exceeds the usage limitations of your Edge Impulse product plan
 * subscription, you are not permitted to use this Software and must immediately
 * delete and erase all copies of this Software within your control or possession.
 * Edge Impulse reserves all rights and remedies available to enforce its rights.
 *
 * Unless required by applicable law or agreed to in writing, the Software is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing
 * permissions, disclaimers and limitations under the License.
 */
// Generated on: 22.04.2025 21:41:21

#include <stdio.h>
#include <stdlib.h>
#include "edge-impulse-sdk/tensorflow/lite/c/builtin_op_data.h"
#include "edge-impulse-sdk/tensorflow/lite/c/common.h"
#include "edge-impulse-sdk/tensorflow/lite/micro/micro_mutable_op_resolver.h"
#include "edge-impulse-sdk/porting/ei_classifier_porting.h"

#if EI_CLASSIFIER_PRINT_STATE
#if defined(__cplusplus) && EI_C_LINKAGE == 1
extern "C" {
    extern void ei_printf(const char *format, ...);
}
#else
extern void ei_printf(const char *format, ...);
#endif
#endif

#define STRINGIZE(x) #x
#define STRINGIZE_VALUE_OF(x) STRINGIZE(x)

#if defined (__GNUC__)  /* GNU compiler */
#define ALIGN(X) __attribute__((aligned(X)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (_MSC_VER)
#define ALIGN(X) __declspec(align(X))
#elif defined (__TASKING__) /* TASKING Compiler */
#define ALIGN(X) __align(X)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ARMCC_VERSION) /* Arm Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__ICCARM__) /* IAR Compiler */
#define ALIGN(x) __attribute__((aligned(x)))
#define DEFINE_SECTION(x) __attribute__((section(x)))
#elif defined (__clang__) /* LLVM/Clang Compiler */
#define ALIGN(X) __ALIGNED(x)
#define DEFINE_SECTION(x) __attribute__((section(x)))
#endif

#if defined(EI_MODEL_SECTION) && (defined(__GNUC__) || defined(__clang__))
#define MODEL_SECTION(X) __attribute__((section(STRINGIZE_VALUE_OF(X))))
#else
#define MODEL_SECTION(X)
#endif

#ifndef EI_MAX_SCRATCH_BUFFER_COUNT
#ifndef CONFIG_IDF_TARGET_ESP32S3
#define EI_MAX_SCRATCH_BUFFER_COUNT 6
#else
#define EI_MAX_SCRATCH_BUFFER_COUNT 12
#endif // CONFIG_IDF_TARGET_ESP32S3
#endif // EI_MAX_SCRATCH_BUFFER_COUNT

#ifndef EI_MAX_OVERFLOW_BUFFER_COUNT
#define EI_MAX_OVERFLOW_BUFFER_COUNT 10
#endif // EI_MAX_OVERFLOW_BUFFER_COUNT

using namespace tflite;
using namespace tflite::ops;
using namespace tflite::ops::micro;

namespace {

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX) || defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
constexpr int kTensorArenaSize = 18848;
#else
constexpr int kTensorArenaSize = 17824;
#endif

#if defined(EI_CLASSIFIER_ALLOCATION_STATIC)
#if defined (EI_TENSOR_ARENA_LOCATION)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) DEFINE_SECTION(STRINGIZE_VALUE_OF(EI_TENSOR_ARENA_LOCATION));
#else
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#endif
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX)
#pragma Bss(".tensor_arena")
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16);
#pragma Bss()
#elif defined(EI_CLASSIFIER_ALLOCATION_STATIC_HIMAX_GNU)
uint8_t tensor_arena[kTensorArenaSize] ALIGN(16) __attribute__((section(".tensor_arena")));
#else
#define EI_CLASSIFIER_ALLOCATION_HEAP 1
uint8_t* tensor_arena = NULL;
#endif

static uint8_t* tensor_boundary;
static uint8_t* current_location;

template <int SZ, class T> struct TfArray {
  int sz; T elem[SZ];
};

enum used_operators_e {
  OP_RESHAPE, OP_CONV_2D, OP_MAX_POOL_2D, OP_FULLY_CONNECTED, OP_SOFTMAX,  OP_LAST
};

struct TensorInfo_t { // subset of TfLiteTensor used for initialization from constant memory
  TfLiteAllocationType allocation_type;
  TfLiteType type;
  void* data;
  TfLiteIntArray* dims;
  size_t bytes;
  TfLiteQuantization quantization;
};

typedef struct {
  TfLiteTensor tensor;
  int16_t index;
} TfLiteTensorWithIndex;

typedef struct {
  TfLiteEvalTensor tensor;
  int16_t index;
} TfLiteEvalTensorWithIndex;

TfLiteContext ctx{};
static const int MAX_TFL_TENSOR_COUNT = 4;
static TfLiteTensorWithIndex tflTensors[MAX_TFL_TENSOR_COUNT];
static const int MAX_TFL_EVAL_COUNT = 4;
static TfLiteEvalTensorWithIndex tflEvalTensors[MAX_TFL_EVAL_COUNT];
TfLiteRegistration registrations[OP_LAST];

namespace g0 {
const TfArray<2, int> tensor_dimension0 = { 2, { 1,7760 } };
const TfArray<1, float> quant0_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant0_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant0 = { (TfLiteFloatArray*)&quant0_scale, (TfLiteIntArray*)&quant0_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data1[4] = { 1, 1, 97, 80, };
const TfArray<1, int> tensor_dimension1 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data2[4] = { 1, 97, 1, 8, };
const TfArray<1, int> tensor_dimension2 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data3[4] = { 1, 1, 49, 8, };
const TfArray<1, int> tensor_dimension3 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data4[4] = { 1, 49, 1, 16, };
const TfArray<1, int> tensor_dimension4 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data5[4] = { 1, 1, 25, 16, };
const TfArray<1, int> tensor_dimension5 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data6[4] = { 1, 25, 1, 32, };
const TfArray<1, int> tensor_dimension6 = { 1, { 4 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data7[2] = { -1, 416, };
const TfArray<1, int> tensor_dimension7 = { 1, { 2 } };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(8) int32_t tensor_data8[2] = { -1596, 1596, };
const TfArray<1, int> tensor_dimension8 = { 1, { 2 } };
const TfArray<1, float> quant8_scale = { 1, { 0.00032045764965005219, } };
const TfArray<1, int> quant8_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant8 = { (TfLiteFloatArray*)&quant8_scale, (TfLiteIntArray*)&quant8_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data9[2*64] = { 
  -37, -40, 41, -41, 11, 1, -79, -42, -12, -70, 91, 7, 10, 12, -15, 35, 50, -49, 17, 6, -42, 50, 10, -28, -54, -80, 48, 70, 38, -24, -4, -52, -73, -53, -98, 20, 9, 81, 5, 58, 63, 77, 85, 99, -2, 7, -59, 49, -48, 45, -11, -21, 50, 40, 36, 6, 13, -20, -19, 19, 51, 31, -24, 88, 
  -55, -48, 59, -58, -13, 4, 44, 13, -65, -66, -21, 50, -25, 17, -31, 53, -26, -42, -64, -20, 127, -41, 47, -26, -31, -26, -28, 21, 54, -12, 52, -51, 8, -64, -47, -37, -26, -29, 14, 31, -60, -15, 0, 32, 75, -69, -56, -19, -16, -57, -16, 49, 60, 38, 75, 19, -31, 44, 29, 23, 2, -42, 50, 33, 
};
const TfArray<2, int> tensor_dimension9 = { 2, { 2,64 } };
const TfArray<1, float> quant9_scale = { 1, { 0.0035844342783093452, } };
const TfArray<1, int> quant9_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant9 = { (TfLiteFloatArray*)&quant9_scale, (TfLiteIntArray*)&quant9_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data10[64] = { -1198, -444, -329, -134, -913, -731, 677, 1608, -1071, -369, -405, 29, -394, -367, -476, -249, -53, -1022, 80, -388, 2907, -857, -571, -189, -907, 205, -787, -1405, -620, -527, -570, -756, 165, -391, -412, 36, -479, 528, -342, -36, 333, -666, -883, -925, 993, -614, -395, -2132, -325, -414, -469, -110, -550, -356, -240, -1557, -422, -791, -189, -107, -564, -325, 1031, 205, };
const TfArray<1, int> tensor_dimension10 = { 1, { 64 } };
const TfArray<1, float> quant10_scale = { 1, { 0.00018717933562584221, } };
const TfArray<1, int> quant10_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant10 = { (TfLiteFloatArray*)&quant10_scale, (TfLiteIntArray*)&quant10_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data11[64*416] = { 
  -9, -21, 7, 17, -8, -1, 3, -38, 14, -12, -4, 1, 48, -5, -30, -15, 19, -3, -8, 45, -15, -12, 13, -47, 23, -14, -20, 12, -12, 4, -1, 9, 6, -34, -9, -5, -17, 22, 1, -42, -11, -18, 3, -15, -38, -17, -2, -5, -22, 7, 4, 4, 0, 3, 21, -5, 1, -3, -1, -13, -36, -1, -6, 7, 6, -16, -9, -6, -39, 13, -12, -30, -10, 1, 7, 3, -29, -28, 3, 12, -9, -6, 10, -11, 4, 0, -9, 1, -5, -5, -1, -14, -14, 7, 6, 7, 7, 15, 21, 14, -23, -34, -14, -26, 6, -11, -11, 3, -11, -1, 12, -18, -20, 7, 5, -23, 0, 1, -38, 18, -35, 9, -11, -27, 9, 40, -1, 7, 1, -26, 7, 4, -6, -22, -3, -23, -18, -15, -26, -15, 45, -1, -11, -23, -41, -2, -2, -13, 2, 0, -5, 4, -12, -2, 3, 11, 3, -25, -2, -8, 5, -10, 3, 7, -1, -30, -2, -25, 14, -16, 3, 3, 54, -3, 11, 5, -27, -4, -5, -9, 5, -10, -2, 2, -4, 3, -2, -6, 19, 23, -6, 17, 0, -19, 33, -2, -14, -6, -1, 2, -22, -8, -8, 7, 3, -19, -9, -28, -1, 4, -7, 24, -14, -15, 1, 3, -16, 6, -4, -17, -35, 2, -2, 16, 3, -32, -2, 0, 29, -18, -12, -1, -7, -6, -29, 11, 18, -41, 10, -50, -8, -1, -13, 32, -13, -5, 11, 0, 18, -13, -7, 11, -30, -28, -8, 5, -4, -16, -14, 6, 43, -12, 8, -3, -23, -16, -17, 11, -32, -18, 12, -21, 42, -13, -12, 7, -16, 6, 3, -9, 1, -11, -14, 14, -49, -11, 9, 7, -8, -14, -6, -6, 5, 15, -7, -21, -4, 0, -1, 2, 19, -29, -20, 15, 15, -4, -14, -6, -18, -4, -8, -1, -36, -9, -3, 32, -19, -31, -10, -8, -11, -1, -21, -7, -30, 16, 1, -30, -9, 26, 3, 0, 6, 18, -5, 33, 26, 8, 6, -15, 4, -5, -22, 15, -3, -11, -15, 13, -29, -4, -9, -4, 0, -18, 0, -1, -12, -14, 6, -34, -18, 7, -15, -2, -12, -35, -13, -3, 27, -6, 10, 24, -1, -14, -3, 2, -32, -7, 10, 16, -11, -4, -10, 6, 10, -43, -12, -11, -18, -4, -2, -14, 13, -7, -13, -5, 9, -30, -4, 15, -31, 3, -18, -1, -18, 10, 11, -7, -10, -3, -20, 3, -9, -8, 6, -9, 
  -2, -11, -5, -4, -8, -4, -14, -9, -20, -15, -5, 0, 0, 2, 16, -18, -12, -4, 0, -11, -4, 9, 8, 1, 1, -3, -1, -19, 1, 5, 5, -6, 10, -10, 8, -8, -17, 4, 8, -4, -1, -4, 0, -5, -13, -3, 5, 3, -18, 5, -3, -15, 1, 1, -2, 5, 7, -9, 2, -29, -6, -8, -6, 4, -6, 13, -14, -5, -14, 5, 7, 1, 2, -8, -2, 11, 2, -8, -3, -9, 11, -7, 4, -8, 1, 5, -8, -8, 9, -11, 5, -6, -4, 7, 8, -12, 3, 1, -9, 9, -2, -4, -2, 12, 5, -3, -8, 0, 10, -5, 8, -5, -19, 12, 7, -14, -7, -11, 11, 1, 0, -5, -9, -14, 3, -16, -5, 5, -6, 3, -4, 9, -21, 4, 9, -11, -11, -8, -6, 8, -20, -8, 35, 5, -10, -8, -4, -6, 2, 14, 9, -1, 4, -8, 4, -29, 5, 10, -4, -4, 3, 13, -13, 8, -34, -1, -7, -1, 0, -4, 4, 2, 2, 4, 0, 10, -7, -4, -6, -26, 5, -9, -8, -19, -16, 4, -4, -35, -6, -7, 1, -5, -6, 4, -8, -3, -6, 5, 4, -18, -5, -12, -12, -2, -7, -8, 33, -3, -3, -7, 4, -5, -1, 4, 8, 7, -11, -11, 9, -26, -10, -1, 8, -17, 12, -8, 9, -1, -15, -6, 3, -9, -16, -5, 1, 0, -22, -3, 19, 11, -22, -2, -3, -13, -1, 2, -9, 0, -12, 10, 9, -21, -3, -3, -1, 4, -14, -9, 8, -4, 4, -3, 9, -8, 3, -5, -9, -1, -12, -7, -2, 18, -1, -8, 11, -16, 1, -6, -10, -14, 5, -9, 10, -16, -1, 9, 6, 3, -8, 4, 7, -11, -4, -16, 7, 3, -10, -22, 3, -7, -18, 2, -3, 25, -7, -9, -9, -23, 0, -10, 13, -12, -12, -8, -6, -5, 4, -16, 6, -6, -6, 2, 5, -9, -3, 0, 3, -8, 4, -9, -2, 7, -17, -3, -1, -7, -16, 9, 9, 2, 2, 2, 1, -14, -12, -22, -10, -14, -7, 5, -2, -11, 9, 10, -10, 7, -10, -4, 7, -2, 0, 13, 12, 8, -18, 2, 3, 1, 0, 9, 8, -18, 14, 6, 7, -3, 2, -3, 1, -28, -8, -8, -4, -19, 7, 2, 9, -5, -10, -17, 3, 7, 6, 12, 8, -3, -3, -2, -8, -8, -11, -2, 14, -29, 13, 2, 5, -7, 7, -18, 7, -16, 13, 3, -6, 1, 
  8, 6, 19, -11, -46, 4, 19, -1, -38, -2, 3, 4, -5, 1, 29, 44, -52, -7, -11, 2, -10, 28, 57, -16, -11, 5, -10, -21, 22, 41, 6, -10, 0, -18, -3, -10, -80, 7, -1, 10, -5, 39, 36, 1, 5, 22, 21, 47, -82, -6, -8, -40, 11, 17, 49, -15, 18, 10, 2, -23, 68, 51, 1, -1, 8, 15, 12, 0, -72, 16, 4, -21, -35, -31, 42, 3, 21, 29, 6, 51, -92, -2, -6, -7, 1, 35, -11, 23, 5, 25, 5, -45, 28, 10, 2, -11, -5, 2, 3, 0, -62, -11, 9, -5, -27, 9, 55, -6, 13, -15, 28, 55, -3, -11, 6, -52, -3, -8, -14, 6, 9, -2, 16, -40, 40, -19, -13, 8, 8, -15, -1, 5, -54, -1, -10, 5, -21, 17, 3, -5, 50, 5, 45, 10, -61, 7, -3, -49, 0, 30, 21, 7, -27, -2, -8, 13, 25, 51, 19, -8, -11, 29, -12, 4, -26, -5, 1, -41, -34, -8, -20, 5, 30, -7, 2, 43, -73, 5, -7, -45, 16, 11, 41, -12, 12, -6, -6, -1, 27, -27, -12, -7, 3, -30, 1, 4, -42, -4, -6, -9, -32, -11, 70, -2, -51, -6, -5, 52, -78, 4, -18, -14, -45, -1, -4, 13, 16, -22, 7, -58, 26, 48, -9, 5, -4, -11, -8, 3, -24, -7, 6, -25, -31, -13, -29, 4, 4, -34, 8, 37, -27, 4, -1, -14, -1, 22, -2, -4, -13, 7, -9, 17, 7, 7, 4, 4, 8, 60, 9, -7, -25, -29, -11, 4, -13, 26, -3, 1, 40, 48, -1, 68, -43, -10, 0, -54, 3, 36, 20, 17, -9, 5, -6, 13, -2, -26, 7, 1, 9, -16, -4, 2, -15, -27, 17, 17, -10, -2, 59, 5, -18, -17, 3, 6, 17, -4, -12, -23, 8, 9, -6, -1, -10, -6, 5, -12, -21, 49, -7, -2, -7, -31, 7, -14, -68, -32, 24, 23, -38, 11, 21, 0, -29, -27, 22, 3, -45, -1, -4, -43, 0, 64, -3, -19, -9, -18, -14, -16, 21, -10, -27, -2, -8, 5, 3, -5, -63, -34, 24, -9, -48, 20, 61, -7, -34, -5, 8, 26, 3, -1, -4, -55, -18, 27, -2, -8, 4, 18, -31, -76, 4, -18, 1, -9, 0, -14, 14, -8, -11, -10, 17, 39, -1, -13, 12, -1, -30, -2, 4, -5, 18, -6, -12, -76, -8, 2, -24, -7, 11, 1, -11, -31, 64, -17, 24, -3, 
  -4, 10, 15, 12, -33, -17, -8, -1, -31, -2, 5, -10, -25, -5, 19, 9, -16, 16, -3, 10, 17, 16, 3, 7, -19, -2, 14, -1, -8, 19, 5, -18, -6, -8, 9, 8, -21, -4, 0, -16, -20, 0, 7, -12, -37, -1, -13, -2, -29, 23, 30, -20, -10, 34, -6, 7, -12, -1, 10, -26, 0, -6, 5, 8, 10, 16, 0, 33, -2, -26, 9, -10, -29, -6, -2, 6, -29, -13, -7, 9, -16, 19, -13, 16, -2, 1, 18, -4, 14, -4, 11, -24, -5, -22, -2, 8, -8, -34, -19, 6, -21, -32, -12, -11, -23, -8, -11, -15, -17, -15, -13, -3, -26, 19, -18, -7, -6, 14, 17, 13, 5, -22, -18, -10, -11, -5, 19, 61, -5, 5, 52, -3, -16, -9, -16, -14, -46, -3, 13, 5, -7, -13, -6, 13, -24, 9, -18, 25, 10, -2, 16, 1, -31, -8, 31, -25, -3, -2, -3, 5, 8, 10, 10, 16, -41, -23, 3, -10, -45, 0, 29, 1, -58, 7, 15, 7, -25, -14, -7, 2, 1, 20, -16, 9, -34, -2, 0, -35, -16, 13, 4, 58, -1, 13, 6, 16, -20, -2, -2, -14, -37, -9, 14, -6, -44, -2, 5, -3, -26, 15, 10, -2, -3, -15, -12, 7, -32, -10, 13, -33, 4, 6, 10, -1, -4, 10, -21, 26, -28, -32, -9, -18, -39, -21, -18, -2, -29, 0, 12, 1, -31, 3, 4, -4, 9, 1, -6, -8, -12, -5, 10, -15, -2, -14, -7, 29, -7, 11, -8, 21, -20, -15, 22, -2, -11, -17, -20, -3, -32, -2, -2, -27, -25, 0, 2, -4, -5, -13, 0, 11, -14, -9, -8, -5, 3, -12, -12, 26, 11, -6, -8, 8, -13, -9, 1, -17, -28, -17, -9, 11, -19, 5, 34, -2, -20, 16, 7, 0, -18, 5, -1, -1, -14, -4, 2, -42, -10, -20, -3, 33, -7, -15, -21, 6, -7, -7, -6, -2, -17, -10, -4, -5, -11, -8, 2, -9, -10, 20, -12, 14, -13, 5, -4, -16, -8, 0, 10, -14, -1, 10, 20, 21, 4, 2, 8, 23, -14, -19, -16, -20, 1, -2, -2, 9, -13, -21, 32, -7, -1, 25, 4, -11, 0, 18, 9, -21, -14, -4, -3, -24, -16, -3, -3, 21, -1, -22, 1, 14, -20, -18, 1, -11, 14, -1, -10, 12, -4, 16, 0, 14, 1, 30, 20, 4, 18, 11, 12, -3, -31, 3, -1, -2, -4, 18, 12, 24, 
  -10, 2, -6, -12, -12, -13, -10, -4, 7, -20, 5, -5, 27, 2, 18, -40, 40, 10, -17, 24, -2, 3, -6, -16, 13, -6, -14, 0, -16, -15, 5, 15, -4, -10, 5, -21, 21, -3, -20, -30, -5, -10, -10, 11, 21, -10, 8, -40, 4, -12, -1, 3, 0, -8, 7, -11, 16, -2, -4, -5, -14, 7, -16, 7, -12, 5, 3, -1, -20, -8, 3, -10, -12, -23, 8, -6, 9, 10, 3, 6, -7, 1, 11, 6, 7, 5, -7, -11, -14, 13, -16, -11, 5, -8, 2, 6, -3, -2, 17, 3, 7, 4, -1, 18, -6, 12, 12, 9, -4, 2, 26, 6, -4, 8, -16, -6, -5, 8, -7, -12, 2, 11, 6, 12, -6, -8, -8, 12, -7, -11, 3, -3, -9, -8, -4, 2, -14, 12, -8, -14, -20, -6, -1, 31, -11, -10, -8, -7, 0, 8, -3, 1, -9, 11, -10, 10, -10, 1, -10, 26, -9, -11, -3, -3, 11, -7, -6, 7, 11, 11, -16, -3, -31, -12, -3, 15, -14, -7, 2, -12, 0, -2, -1, -10, -18, 24, 5, 8, -20, -26, 1, 24, 2, -18, -5, -22, 3, -6, -11, 26, -7, -13, 5, -12, -9, -9, 9, -15, 4, -11, 7, -16, -4, 11, -10, 1, 0, 11, 7, 14, 0, -15, 12, 6, 6, 18, 4, -14, -18, 21, 10, 27, -18, -23, 1, -3, 18, 5, 16, -2, -1, -3, 0, 0, -4, 18, 7, -14, -18, 9, -15, 7, 24, 8, -21, 7, -4, 3, 17, -5, -20, 12, -1, 14, -12, 6, 3, -11, 5, -9, 10, 13, 11, -13, -9, -8, 33, 14, 9, 7, -3, -2, -7, 8, 11, -22, -21, -2, -10, -11, -3, 3, 16, 12, -15, -18, -15, -5, 13, -9, 17, -5, 19, -30, -6, -9, 7, 5, 8, -3, 2, 8, 12, 12, 2, 22, -1, 2, -7, -11, -7, -24, 0, 0, 12, -3, -6, 0, 3, -17, -20, -2, 13, 2, 17, -16, 11, -7, 5, 11, -9, -19, 13, 8, -19, 6, 8, 18, -11, -11, -6, -14, 9, -7, 4, -22, 1, -6, -9, 19, -4, -23, 1, 3, -4, -19, -7, -17, 4, -6, -4, -1, -5, -10, 7, -7, 12, -23, 1, 30, -2, -4, -10, -8, -2, 14, -5, -28, -9, 20, -1, 24, 10, -1, -5, -14, -12, -6, 3, 4, -8, -2, -9, -12, -13, 1, -1, 6, -4, -1, 2, 11, 28, 13, -12, -9, 
  -18, 1, -7, -10, -22, 5, -13, 14, -13, -8, 11, -3, -18, -13, -4, 2, -14, 7, 18, -25, 3, 9, 11, -18, 6, -5, 8, -21, 7, -9, 12, -39, -16, -15, 7, 6, -17, 2, 14, -10, -9, 0, -17, -13, -20, -1, -2, 16, -16, -13, 12, -7, -1, 11, -9, 8, 0, -12, 5, -4, -8, -10, 4, -18, -3, -5, -11, 15, -23, -16, -28, -7, -7, -8, -8, 0, 1, -9, 14, -6, -17, -1, -2, 0, 0, 20, 14, -2, -5, 5, 0, 1, -15, 2, 5, -9, -15, 1, -8, 9, 2, -19, -15, 7, -9, -1, 3, 8, -15, 10, -12, 9, -29, 3, -13, -29, -10, 17, 5, -3, 4, -14, -16, -12, 2, -23, 3, -24, -9, -17, 23, -11, 0, 4, -11, -19, -16, -6, -8, 1, 6, -3, 24, -17, -26, -7, -9, 2, 2, -5, 11, -2, -3, 5, -5, 14, -16, 8, 3, -47, 2, -14, 11, 8, -23, -5, -25, -14, -19, 5, -10, 9, -30, -10, -2, 2, -19, 4, -15, -2, 13, -8, -14, -10, 7, 3, -15, -20, 3, 2, 4, -25, -9, -6, -1, 12, -17, -20, -6, -19, -2, 1, 2, -5, -19, -2, -6, -12, -12, -10, -17, -11, 3, 14, -2, -8, -7, 28, -6, -22, -25, 4, -5, -38, -14, 1, 10, 5, -9, 0, 0, -27, 2, -11, -4, -5, 2, -1, -3, 2, -19, -8, -14, -25, 11, 22, -17, -15, -8, -2, 1, -16, -5, -6, 9, -36, 4, -13, -6, 11, -10, -15, -13, 0, -18, -2, -4, -4, -14, -8, -12, -1, 6, -1, -5, -2, 12, -20, 15, -8, -9, 17, -5, 7, 17, 8, 10, -21, -4, -22, 9, -16, -17, -17, -22, -14, -15, -13, -20, -1, -14, 1, 28, -12, -28, 7, 0, -11, 1, 6, -4, -6, -2, 11, -14, 3, -6, 9, -7, -7, 3, -31, -12, -23, -1, -14, -6, -13, -11, 1, -17, 0, -26, 1, 41, -21, -4, -1, 1, -6, 14, 1, 12, -10, 4, -9, -6, -5, -2, 15, 9, -8, -8, 1, -1, -5, -23, -16, -7, -6, -16, 12, -22, 8, 22, -14, -2, -1, 1, 1, -6, -8, -10, 10, 10, -2, -4, 17, -3, 23, -3, -9, -6, -28, -3, 2, -1, 18, -4, -4, 2, -30, -1, 3, -19, -9, 10, -1, -7, 22, -5, 2, 12, -3, 4, 17, 1, -12, -10, -12, 10, 17, 8, 5, -4, -16, 
  -2, -9, 0, -8, -18, -3, 13, 12, -1, 33, 1, 7, 38, -15, 7, 34, -23, 3, -10, 11, 8, 15, 15, -5, -22, -15, -8, -5, -3, 7, -16, -25, -4, 8, -2, -7, -34, 4, 5, -23, -6, 63, 7, 11, -25, -1, -5, 43, -45, -8, 12, -36, 19, 23, -11, 9, -14, -9, -2, -54, -9, 2, -2, 3, 9, -4, 1, 6, -22, 3, -9, -13, -3, 48, -16, -5, 9, 0, 5, 9, -24, -9, 0, -22, -3, 21, 13, 0, -3, -4, 6, -42, 15, 1, -9, 2, 3, 7, 3, -6, -42, -15, -15, -15, -15, 27, 11, 8, -38, -1, 2, 17, -9, -1, -10, -21, 6, 8, 3, 12, 8, -11, -15, -15, -12, 2, -12, 12, 10, 1, 5, -25, -35, -8, 0, -1, -11, 32, -1, -2, -13, -7, 27, 26, -9, -1, -19, 6, -2, 8, -2, 8, -7, 0, 26, -28, 9, 36, 9, 4, 2, -3, 5, -6, -12, -4, -4, -7, -7, 46, 19, -2, -56, -1, 5, 21, -7, 2, -7, -39, -21, 3, 1, -6, -21, 13, -13, -12, -4, 4, -6, -6, 2, -5, -2, -6, -6, 1, 0, -7, -7, 31, 1, 7, -36, 2, -12, 36, 8, 5, 14, -6, 10, 6, 13, 9, -7, 3, -3, -12, -10, 7, -4, -9, 8, 9, 13, 13, -15, 2, 3, -2, -6, 31, 14, 1, 21, -13, -2, 27, -15, 5, 0, -29, 15, 7, -4, -15, -24, -1, 9, 0, -9, -16, -17, -16, 2, -18, -12, 8, 0, -4, 5, 28, 2, 54, 4, -3, 7, -1, -5, 13, 0, 9, -6, -7, -3, -24, 1, 2, -17, -9, 7, 21, 0, 6, -8, -24, 2, -25, -5, 5, 9, 12, -12, 8, -7, 8, -4, 9, -2, 11, 1, 10, -10, 10, -8, -5, 5, 5, -1, -13, -16, 2, 5, 3, -15, 2, 4, -5, -10, -32, -4, -7, -28, -3, -10, 9, 4, 32, 1, 0, 4, -14, 12, 3, -38, 15, -5, 11, -4, -5, -3, -6, 0, -4, -26, 13, -14, 16, -6, -11, -6, 4, -10, 13, -11, -4, -18, 5, -5, 49, -27, -7, -25, 1, 13, 2, -38, -3, 7, -7, -9, 15, -8, -7, -10, -12, -8, 18, -7, 3, 8, -17, -7, -1, -10, 15, 2, -9, 8, 6, -3, 7, -17, -14, 23, 0, 9, 5, -20, 23, 14, 3, 6, 24, 3, -10, -6, 15, -1, 19, -9, 6, 9, 11, 
  4, 13, 17, 9, -36, -10, 5, 29, -52, 25, -17, 3, -53, -15, 35, 40, 4, 6, 0, -48, -1, 14, 1, 20, -21, 25, -26, -41, 15, 26, -8, -31, -10, -1, 9, -3, -49, 12, -7, 48, -14, 24, 26, 10, -79, 26, -24, 39, 14, 22, 28, -69, 9, 13, 0, 8, -14, 0, 12, -80, 40, 30, 11, 5, -3, -3, 8, 7, -21, 2, 7, 45, -26, 26, -6, -4, -85, 20, 7, 31, -3, 12, 1, -36, -2, -4, -1, -1, -5, 24, -4, -55, 34, -4, 2, 19, 16, 3, 3, -3, -1, 12, 4, 58, -5, 21, 2, 3, -62, 37, 14, 18, 1, 7, -13, -42, -2, 16, 12, -1, 26, 19, -3, -31, 7, -20, 2, 3, -6, -6, 16, 21, -29, 19, -1, 31, -19, 6, 8, 10, -3, 0, 47, 32, 13, 6, 6, -10, -6, -10, -2, 1, -4, 7, 6, -2, 18, 28, 14, 9, -3, -8, 2, 2, -41, 1, -6, 47, -38, 51, 10, -7, -63, 19, -11, 39, 10, -5, -12, -46, -3, 0, 1, -4, -12, 22, -14, -48, 16, 16, -1, 6, 13, 11, 7, 13, 12, 8, 4, 22, -16, 18, 11, 15, -69, 15, 15, 14, 25, -2, -6, -28, -3, 14, 17, 17, -21, -2, -1, -34, 3, 11, 9, -5, 1, 9, -5, 9, 3, 4, -2, 13, 5, 21, -9, -9, -7, 10, 14, 69, -2, 6, 10, -2, 2, 3, -4, 9, -22, 9, 0, -1, -2, -18, -13, -5, -8, 3, -12, 4, -38, 8, 5, 33, -18, 42, 9, -1, 3, -9, 10, 24, 21, -6, -1, -11, 15, -3, -9, 28, -14, 20, 21, -43, 7, 10, -7, -11, -5, -15, 0, 15, -5, -1, 14, 27, -20, 5, -4, -3, -61, 36, 22, 16, 15, -1, 12, -40, -1, 0, -6, 16, -27, -11, -2, -17, -3, 5, 11, -8, 6, -21, -17, -11, -28, -1, -9, 36, -20, 6, -7, -5, -42, -21, 24, 0, 13, 8, 5, -20, -19, 1, -4, 5, -4, 11, -14, -68, 0, 11, -11, -15, 4, 25, 4, 15, -14, -5, -10, 41, -36, 41, 20, -10, -68, -7, 15, 41, -15, -19, -11, -35, -3, -6, -13, 3, -32, 23, -30, -61, -7, -3, 16, -6, 12, -1, 33, 14, 14, 10, 0, 17, 22, 49, 12, 16, 18, 18, -7, 51, 7, -1, 29, -19, 2, 5, 7, -1, -31, 42, 41, -17, 24, 19, 26, 5, 
  -8, 7, 48, -12, -26, 17, 19, -26, -51, 18, -5, -20, -32, 44, -20, 1, -4, -14, 3, -40, 4, -5, -21, 23, 9, 1, -6, -40, 25, -13, -12, 30, -27, 30, 36, -8, 18, -1, -1, -47, -32, -20, -20, -23, -8, 25, 21, -20, -49, 6, -1, -44, 5, 6, 0, -44, -9, 7, 55, -40, 1, -2, 18, 22, -14, 4, 14, -7, -6, -19, -17, -5, -14, 14, 16, 5, -35, -7, -19, 2, -17, 25, -3, -14, -42, -15, -23, -6, -26, -4, -17, -50, -37, 5, 18, -5, 2, 19, -3, 23, 0, 0, 14, -1, -46, -5, 23, 2, -49, 16, -5, 33, -43, 3, -20, -25, -27, -11, -14, 6, -24, -23, 6, -15, 36, -8, 30, 44, -6, 48, -12, -3, 26, -18, -5, 4, 1, -6, 26, -22, -15, 26, 2, -34, -25, -17, -15, -28, 22, 1, -14, -12, -45, 6, 38, -21, -20, -8, -12, -2, 7, -28, -42, -7, 30, -53, -51, 10, -3, -16, -48, -12, 23, -41, 21, -44, 16, 48, -21, 21, -60, -29, 24, -10, -11, -27, 36, 45, -30, -15, 22, 48, -9, -20, -37, -25, 14, -11, -30, -29, -15, -44, -33, 7, -12, -21, -28, -30, -6, -24, -27, -8, -20, -31, -8, -48, -17, 25, -24, 21, -34, -44, 20, 47, -2, -43, -20, 1, 33, -39, -24, -26, -13, -34, 3, 13, 15, -11, -20, -36, -2, 22, 6, 17, 15, -18, -14, -20, 20, -17, -20, 18, 6, -24, -14, -5, 3, 2, 40, -14, 66, -72, -20, -24, -11, -29, -23, 15, 38, -9, -14, -43, 85, -15, -26, 21, -16, -26, 6, -8, 11, 3, -39, 63, -36, -33, 0, -25, 4, -18, -58, -7, 73, -17, -7, -40, 54, 23, -3, -19, 23, -53, 6, 7, 47, 36, -12, 51, -38, -13, 63, 20, 38, -19, -17, 53, 15, 1, -21, 17, -4, 29, 5, -9, -10, -9, -12, -6, -14, -24, 55, 11, -38, 79, -25, 29, 36, -7, 19, -14, 31, 53, 13, 14, -31, -19, -22, 17, 18, -17, 12, 52, -7, 4, -6, 2, 26, 2, -31, -14, 29, -11, 0, 20, -2, 1, -23, -6, -1, 32, -28, -5, 0, 15, 53, 10, -12, -2, 44, 33, -1, 38, 3, 9, 6, -24, -44, -4, 33, 1, -17, -11, 14, 17, -27, 13, 19, -29, -18, 50, 34, 18, -14, 26, -54, 28, -2, -4, 2, -21, 19, 26, -2, 11, -29, 4, 
  3, 8, 10, 25, -21, -25, 4, 26, -38, 0, 2, -1, -55, -21, -9, -2, -16, 14, 2, -37, 24, 7, -8, 15, -61, 16, 14, -24, 8, 37, 14, -24, -3, 22, 4, 6, -47, -43, -7, 35, -14, 7, 31, 13, -97, 6, -4, -2, -64, 18, 19, -59, 28, -4, -6, 12, -13, 8, 32, -67, 2, 46, 13, -10, 13, 5, 7, 14, -45, -21, 4, 35, -19, -3, 22, 19, -60, -12, -14, 5, -25, 27, 3, -20, -6, 8, -1, -1, 1, -6, 0, -58, 21, 25, 4, -22, 4, -9, 17, 5, -25, -7, 8, 45, -19, 3, -6, -21, -24, -18, 0, -17, -45, 9, -2, -18, 22, 19, 6, 10, 8, -13, -26, -21, -22, 7, 3, 36, -2, 3, 18, 24, -25, -30, -19, 36, -7, 3, 10, 6, -17, -28, 10, -7, -12, 0, 0, 17, 1, -6, -7, 12, -4, -9, -10, -36, 11, 30, 5, 25, -1, 14, 14, 17, -51, -14, 13, 59, -34, 5, 8, -13, -54, -14, -8, -1, -49, -26, 24, -23, 8, 4, -16, 11, -18, -16, -3, -62, 1, 14, 15, 16, -12, 11, 15, 13, -28, -33, 7, 28, -3, 10, 17, 27, -27, -5, -15, -25, 6, 47, 21, -20, 9, 7, -9, 20, -14, 8, -3, -24, 4, 13, -3, 3, 4, 4, 10, 7, -30, -24, 12, 31, 5, 10, 8, 8, -49, -28, 6, -16, -27, -7, 6, -48, 14, 14, 3, 16, -4, -7, 3, -51, -5, 14, 10, -5, -8, 13, 1, -1, -32, -16, 0, 21, -12, 5, 6, 1, -28, -7, -28, -12, -40, -11, 12, -5, 10, -9, -21, 13, -2, 0, 31, -52, -13, 44, 7, -6, -3, -11, 10, -7, -6, -22, -18, 48, -15, 5, -17, 0, -59, -21, 9, -16, -25, -1, 4, -25, 6, -10, -16, 21, -15, -7, 7, -27, -15, 1, 12, 3, 10, -31, -23, 1, -21, -18, 7, 30, -11, -16, -19, -1, -46, -44, 13, 9, -12, -8, 9, -11, -32, -4, -21, 4, 4, 7, -6, 1, -13, -9, 24, 11, -6, 6, -15, 11, -34, -24, -25, 46, -42, 7, -30, 4, -69, -13, -7, -34, -42, 14, -10, -26, -1, 23, -22, -23, -23, 3, -6, -53, -19, 28, 10, -34, 10, 11, 3, 10, -22, -14, -14, 40, -15, 19, 0, 7, -12, -17, 7, -5, -60, 2, 10, -41, 28, 19, -11, -8, -27, 15, 25, -24, -8, 42, 10, 15, 
  3, -11, -5, 17, 14, -29, -8, 13, 63, -38, -26, -1, 59, -35, -17, -50, 61, -1, 2, 74, 0, -3, -12, -17, 80, -35, -21, 4, -40, -30, 0, -2, -3, 6, -9, 8, -5, 3, 1, -39, 1, -28, -22, 4, 18, -29, 18, -11, 35, 5, 3, 15, -8, -5, 19, 3, -7, 1, -1, 6, -17, -13, -7, -13, -9, 1, -14, 11, 59, 4, -3, -34, -25, -6, -3, -4, -28, -31, 27, -16, -15, 1, 8, 7, 8, 7, -8, 15, 14, -4, 7, -4, -19, -9, 0, 2, 8, -8, 7, 15, -39, 8, 5, -19, -25, 13, 27, -7, 5, -6, -2, -19, -40, 3, -9, -43, -1, 18, -17, 10, -13, 16, 15, -51, 21, 45, 4, 17, 4, -3, 13, -7, -9, -22, -6, 2, 12, 11, 3, 3, -6, 12, 9, 16, -10, -20, -3, -9, 27, -11, -12, -6, -1, 20, 3, -13, -13, 36, -9, 10, -3, -39, 22, -9, 52, -2, -22, -11, 43, 11, -25, -12, 14, 9, -2, 8, -14, -9, 3, 14, 21, 11, -2, 16, 24, -7, 27, 17, -11, 0, -4, 21, -12, -29, 35, -2, 18, -17, -21, 9, 0, -21, -12, -11, 47, -24, 9, 27, -1, -13, -2, 26, 25, -6, -4, -9, 19, 3, 54, 15, -53, -7, -3, 1, -2, -56, -20, -14, -10, 7, 6, -3, -15, -33, -21, -8, 50, -15, 1, -19, 20, 4, 0, 36, -10, -21, -20, 0, 10, 21, -1, 4, 4, -26, -7, -6, -9, -7, -8, 10, 28, -11, -8, -42, -4, -20, -2, 1, 5, 10, 14, -13, -21, -4, 8, 37, 8, -23, 35, -18, 19, -13, -37, -8, -29, 8, 1, 15, -11, 17, 12, -6, -13, -18, -12, -51, 12, -13, 17, -2, -12, -19, 19, -61, -17, 4, -17, 26, 26, -4, -13, 19, -43, 0, 9, 16, -11, -21, 2, 1, -2, 51, 19, -12, 14, -36, 7, -13, -6, -47, -12, -8, -19, -13, 6, -22, -8, -12, -7, 18, 23, -7, -27, -3, -11, -22, 18, 21, -43, -15, 0, 6, 4, -50, -10, 5, 14, -58, -6, 5, 38, -56, -52, -11, 26, -61, -6, -50, 21, 3, -2, 14, 18, 9, 4, 0, 11, 12, -7, 27, -66, -33, -21, 2, 0, -26, -54, -11, 11, -35, -7, -13, 2, -41, -14, 0, 15, -68, -11, -30, 8, -1, -12, 14, -21, 4, -19, 22, -16, -13, -16, 46, -48, -26, -11, -11, 
  17, -22, 3, 11, -20, -8, -20, 36, 3, -6, -18, -2, -31, -16, 3, -11, -41, 11, 12, 2, -9, 19, -2, -5, -23, -1, -4, -10, -22, -8, -13, -2, 0, 7, -9, 13, -20, -7, -2, 40, -14, 30, 19, 1, -32, 22, -11, 77, -45, 13, -4, -13, 34, 19, 7, -3, 7, 3, 14, -46, 8, 13, -6, -14, 13, -17, 12, 5, -28, -13, 11, 42, -33, -2, -7, 2, -55, -5, 2, 0, -42, 20, 21, -42, 4, 6, -15, 0, -8, -5, 22, -57, 6, -9, -3, 6, -9, 3, -7, 7, -45, -28, -11, 22, -13, -6, -5, -1, -42, -4, -14, 11, -25, -9, -4, -22, 18, 1, 7, -6, 3, -10, 13, -6, -11, 7, -4, 30, 9, 10, 20, -4, -28, -23, -14, 36, -49, -9, 1, 32, -45, -18, 6, 4, -31, -8, -18, -6, 14, 9, -17, -16, -19, -15, 15, -41, -26, 10, -3, 22, 16, 11, -15, 11, -26, -15, 8, 49, -36, 0, -6, 0, -41, -3, 13, 22, -27, -21, -7, 14, 2, 12, -9, -14, -21, 17, 5, -27, -9, 23, -7, -8, -8, 2, -8, 3, -20, -17, 6, 24, -23, -5, -10, 17, 7, -11, 30, -12, -18, 18, 3, 24, -10, -7, 0, 12, -16, -7, 7, 8, -6, -3, 4, 10, -11, 20, 11, 21, -19, -18, -16, 54, -19, -6, 4, 10, -21, -17, 17, 10, -25, -16, -11, -17, 3, 5, -4, 19, -6, 14, -4, -14, -11, -7, -15, 22, -8, -5, -10, 24, -12, -14, -9, 24, -8, 0, 2, -11, 14, -15, -22, 7, -19, -6, -3, 9, -11, 1, -14, -6, 23, -4, 17, 1, -2, 27, -9, 13, 10, -10, 5, 8, -6, -22, -13, 66, -22, -37, -19, 17, 3, -10, 23, 5, -6, 3, -4, 7, 27, -14, -6, -16, -29, -12, 6, -38, -7, -8, 9, 19, 6, -19, -17, -11, -8, -22, -10, 49, 13, -11, -14, 10, 19, -11, 2, 5, -21, 12, -13, 38, -22, -15, -10, -10, 1, 0, 4, -9, -27, 33, -4, 3, 7, 14, -4, 12, 4, -27, -8, 39, -11, 10, -7, 0, -26, -6, 6, 18, -24, 0, -3, 40, -15, 8, 0, -8, -5, -2, -11, -45, -17, 25, -13, -2, 9, 4, 9, 21, -12, -1, -11, 40, -1, 4, 2, -16, 11, 4, -8, 12, -21, 11, 22, 13, 76, 17, -13, -7, -2, -9, 41, -19, 6, 25, 29, 16, 
  4, -6, 14, -22, -14, 2, 8, -29, -16, 11, -5, 4, -13, -5, 15, -42, 9, -6, -4, -6, -16, 2, 11, -11, 1, -11, -3, 14, -3, -6, 1, 15, 0, 3, -5, 8, -20, -3, -12, -40, -20, -1, 1, 6, 15, 0, 21, -3, -7, 7, -7, -1, 8, 1, 7, -19, -14, 4, -15, 0, -9, -10, -7, 7, -9, -2, 2, 0, 24, -8, 1, -26, -20, 0, 2, -5, 12, -10, 0, -9, -32, -4, 1, -15, -13, 2, -14, 0, 4, -4, -16, 9, -21, -8, 4, 23, 0, 2, 0, 7, -16, -33, 7, 4, 13, 3, -4, -3, -16, -19, 2, -2, -7, -2, 2, 0, 3, 9, -5, -7, -6, -7, 7, 0, -5, -19, -9, -4, 6, 1, -12, -2, 13, -11, 3, 4, -17, 0, -7, 2, 1, -24, -7, -45, 21, -11, 1, 14, -2, -7, 0, -13, -10, -12, -7, 14, -13, -7, -15, 19, -13, -40, -16, 8, -7, -12, -5, 14, 19, 0, -21, 4, -12, -29, 4, -57, 14, -14, -14, 2, -12, -5, 4, 17, -18, -1, 8, 25, -36, -12, -8, 39, -3, -20, -18, -19, -14, -3, -1, 7, 0, -10, -6, 3, -8, -10, -8, -26, -14, -15, -5, 15, -10, -23, -14, -20, 1, -13, -4, 10, -43, -4, 5, -5, 3, -23, 5, 2, -28, -14, 2, -13, -17, -10, -12, -4, -7, 2, -6, -30, -20, -1, -3, -11, 0, -1, -2, -5, -17, -14, -7, -11, 0, -13, -13, -23, 1, -2, -12, -8, -5, -4, 0, -13, -11, -8, -11, -7, -39, 15, 10, 0, 11, 6, 3, -24, -4, -9, -6, -12, -19, -9, -4, -14, -1, -4, -15, -13, 8, -5, -10, -27, 12, -27, 2, -27, -3, 4, -6, 0, 3, -11, 16, -14, 19, -17, -6, -13, -7, -6, 7, 5, 2, 7, -2, 10, -13, -5, 0, 3, 0, 5, -11, 2, 8, -8, 1, 21, 8, 1, -19, -3, 17, -5, -3, -29, 1, -15, -9, 4, -10, -6, -8, -14, -20, 3, -11, -1, -39, -19, -7, 8, -13, -12, -5, -4, -11, -9, -5, -9, -8, 3, -10, -12, -3, -27, -15, -30, 11, 6, -10, 3, -9, -17, -9, -12, -30, 2, 7, 10, -8, -8, -13, -23, -2, -9, -15, -15, -8, -9, -9, -7, -24, 0, -13, 7, -4, -16, -11, 19, 0, -1, 9, -10, -8, 6, 2, 2, -23, 1, -5, 2, -38, -27, 1, -11, 
  1, -4, -9, -6, -29, -21, -13, 0, -28, -5, -22, 12, -27, -29, -9, -11, -18, 10, 11, -28, 7, 1, 10, -3, -20, 5, -5, -27, 10, 4, -7, -6, 0, -4, 9, -1, -26, -12, -8, -13, -5, 8, 11, -4, -69, 11, -18, 14, -36, 6, 11, -27, 0, 22, -12, 2, 2, 3, -8, -49, 3, 5, 10, -10, 1, -11, -19, -2, -13, -20, -6, 3, -11, 5, -22, 4, -46, -10, -1, -9, -27, -4, -8, -20, -13, 3, -6, -22, 6, 4, 5, -2, 16, -19, -3, 12, 1, -18, -1, 0, -7, -26, -10, 28, -10, -5, -14, -8, -29, 1, -20, -16, -22, 13, -9, -14, 3, -11, 9, -16, -3, -9, 13, -11, -5, -23, 10, 7, -2, -19, 9, 3, -7, 3, -17, 14, -7, -4, -6, -7, -25, -20, 17, -10, -15, 20, -18, -13, -8, 3, 8, -6, -9, -2, 7, -35, -5, 25, 6, 7, 7, 9, 2, -9, -20, -23, 1, -7, -27, 11, 15, -2, -36, -15, -2, -15, -26, 3, -3, -18, -8, -1, -3, 3, -3, 0, 6, -23, -8, 8, -6, 29, -5, -5, -4, -3, -9, -28, -5, -1, -1, 13, 10, 8, -19, 1, 4, -22, -5, 4, 4, 1, 5, 3, -3, 3, -7, -3, 4, -24, 13, -7, 7, -15, 3, 16, 8, 2, -22, -9, -13, 3, -4, 4, 5, -3, -13, -1, -3, 9, -25, 6, 15, 2, 16, 1, 0, 0, -7, 0, 2, -7, -13, -5, -12, -6, 4, -16, -14, 4, 3, -25, -10, 5, 1, -4, 7, -2, 47, -17, -15, -12, 4, 1, -12, 12, 6, -23, -3, 15, 5, 6, 0, 17, -13, 23, 6, -22, 2, -14, -3, -3, 9, -9, -3, -5, -1, -7, -11, 6, -4, 0, -1, -19, -1, 2, 7, -21, 0, 6, 13, -18, -3, 3, -9, 14, -13, 9, 5, -1, 1, -27, -5, -15, 7, -17, -18, 2, 17, -3, -8, 3, 0, -22, -5, -14, -22, 2, 1, 12, -12, 6, 3, -13, 10, -2, 13, -3, -5, -1, 5, 0, 4, 0, -11, 6, -18, -10, -20, -7, -7, 3, -14, 12, -29, -17, 16, -16, -19, -8, 7, -10, -2, -8, -3, -7, -3, 7, 13, -14, -6, 3, -5, -17, -1, 3, 5, 3, 1, -27, 6, -8, 3, -2, -13, 12, -39, -11, 7, 14, -25, 11, 0, -18, 9, 16, -5, -16, -13, -9, 15, -13, 3, 19, 10, 2, 
  -24, 4, -10, -17, -10, -26, 25, -44, 12, 9, -21, 3, 6, -42, 6, -20, 6, 4, -8, 9, -25, -17, 15, -18, 31, 5, -1, 9, -34, -40, -17, 16, 5, -16, -20, -22, -5, -39, -12, -23, -4, -25, -42, -3, -8, -19, 16, -31, -14, -21, -20, -4, -19, -4, 3, -14, 7, 11, 18, -16, -19, 0, -5, -1, 11, -23, -23, -17, -4, -35, 4, -16, -8, -15, 4, -2, -4, -14, 23, 5, -19, 10, 10, -14, 6, 30, -13, -23, -21, -15, 3, 10, -10, 4, 6, 20, -13, 10, 8, -5, -24, 16, 6, -5, -29, 2, 4, 3, -11, 16, 9, 27, -41, 8, -10, -23, 21, 8, 2, 2, -39, -9, 20, -11, 51, 51, 5, 33, 1, 16, 3, -25, -24, -6, -11, -2, -4, -6, 23, -3, -30, 29, -6, 17, -28, 11, 25, -28, 13, 24, -1, -3, -17, -1, 4, -11, 2, 17, 18, 2, 3, 8, -11, -16, 24, 0, -30, -21, 12, -4, -6, -12, -12, 17, 4, -1, 4, 2, -8, -17, 29, 4, 12, -11, -2, -4, -3, 16, -9, -20, -3, -19, -11, -9, -38, -6, 3, -30, -13, -11, -3, -22, -30, 0, 34, -53, -14, -24, -10, 4, -17, 6, 2, -30, -26, -1, -15, -15, -8, 9, -48, -19, 0, 4, -3, -14, 5, -22, -8, -20, 11, -51, -16, -12, 12, 7, 6, 12, 4, -9, -16, -21, 6, 7, -2, -1, -9, -14, 2, -10, -19, -13, 9, 22, -5, -4, 24, 26, 19, -1, 16, 15, -3, -28, -8, -26, -18, 15, -6, 21, -19, -2, 15, -6, -10, -20, 3, 13, -9, -17, -14, 0, -6, 18, -3, 6, -18, -21, 8, -22, 3, -1, 9, 11, -12, -30, 4, -19, -1, -11, 0, 3, 10, 4, -4, -10, 3, 16, -6, -1, 2, 12, -13, 0, 2, 14, -4, -26, -10, -4, -7, -6, 7, -20, 11, -6, -15, -3, 3, -13, -28, -7, 8, -11, -10, -32, -10, -22, -14, 5, 26, -20, -10, 2, -3, -38, -2, 3, -16, -2, 7, -22, -2, -20, -4, -1, 5, -27, -12, 18, -7, -27, -17, 10, -20, -42, -4, -32, 6, -16, -25, -17, -30, -31, -13, -5, 6, -5, -10, 12, -37, -2, -21, -7, -16, -9, -23, -21, -20, -12, 8, 11, 11, 17, -13, 8, -9, -34, 4, 3, -9, -11, -13, -4, -41, 7, 4, 12, 18, 4, -15, 8, -40, -11, -34, 9, 
  1, 3, -9, -14, -31, -17, -10, -11, -10, 14, 8, 1, 14, -4, -20, 0, -22, 0, 1, 1, -7, 14, -5, 1, -13, -8, 14, 1, -19, 6, -13, -28, 3, -15, -7, -5, -21, -3, 13, 3, -14, 7, -6, 12, -36, 3, -3, 5, -11, 4, 6, -8, 4, 12, 12, -8, 7, 1, -1, -19, 3, 7, 1, 3, 9, 0, -6, -1, -14, -15, 8, -3, -1, -1, -3, -5, -19, -12, 5, 7, -13, -15, -10, 9, -4, -10, 4, -1, -2, -1, 4, -6, 11, -3, -11, 5, -3, -11, -10, -3, 8, -10, -5, 8, -5, 0, 9, -9, 1, 8, -5, -4, -14, 2, 12, 5, 12, -6, 10, -6, -5, -10, 9, -1, 3, 6, 15, 0, -1, -13, 13, -17, -16, -10, 0, 0, 1, 3, -15, 4, -21, -6, 11, -2, -20, -3, -9, 15, -8, -1, -5, -6, 0, -3, 12, -18, -11, 3, 6, -11, -1, -4, -2, 4, -22, -15, 3, -6, -19, -7, 2, 10, -37, 5, -3, -2, -15, -1, 7, -5, -11, -12, -1, 0, -20, 6, 3, -29, -3, 1, -6, 6, 8, 1, 7, 4, -17, -17, -13, -17, -6, -2, 4, 11, -12, -16, -5, -28, -11, 5, 3, -1, 1, 8, 2, -11, -10, 10, -2, -20, -15, 2, -1, -5, -2, 7, -7, 4, -13, -4, 0, -13, -11, -4, -3, -4, -4, -11, 5, 8, -10, 6, 1, -14, 3, -13, -2, -17, -7, -7, -11, -23, 6, -1, -5, 7, 5, 2, -14, -3, -14, -2, 10, 11, -12, 5, 15, 5, -11, 4, -27, -9, -10, 11, -3, 4, -1, -1, 9, -3, -10, -1, 4, -23, -2, 14, -4, -6, -1, -19, -4, -14, -6, 4, 5, -10, -9, -7, 2, -6, -8, -2, -18, 2, -11, -1, 5, -6, -9, -11, 4, 1, -11, 7, 5, -21, 7, 8, 11, -19, -8, -3, -1, -15, -12, -9, -6, -10, -5, 7, 4, 11, -19, -12, 17, -2, -13, 4, 9, -14, 5, -8, 8, -16, -5, 8, -9, -7, -5, 10, 12, -10, 9, 13, 1, 1, -9, -6, -4, -7, -21, -8, -8, 13, -5, 0, 8, -7, 3, -4, 2, -3, 9, 12, 5, -6, -12, -6, 0, -34, 8, 6, -13, -7, -3, -5, 11, 5, -6, -11, 8, -6, -21, 12, -2, 3, -39, 3, -4, 4, -5, 9, 9, -10, 13, 11, 1, -6, 5, 7, -3, 5, 4, 13, 10, -2, 
  -4, 3, -18, 20, 11, -13, 13, 5, 22, -21, -5, -12, 31, -10, -20, -45, -2, 6, -5, 31, -28, -10, 12, -7, 7, -26, -56, -3, -15, 12, -1, 12, -8, 4, 9, -7, 2, 8, 13, -39, 19, 6, -16, 4, 13, 11, 9, -29, 15, -18, -4, -2, 1, -7, 20, -3, 16, 4, -10, 4, 1, -18, 1, 1, 1, -1, 0, 4, 42, -18, 8, -13, 16, -19, -10, -2, 21, -6, -14, -22, 16, -6, -5, 1, 17, -10, -6, 1, 8, 1, -3, 6, -28, -8, 5, -9, 0, -7, -2, 25, 9, -7, -14, 10, 13, -15, -15, 12, -2, -5, 4, -16, 1, 6, -26, -12, -18, -6, 15, -1, 5, -11, -11, 9, -3, 14, -4, -8, -12, -26, -17, 13, -6, 3, -15, 3, -2, -19, -9, -10, -20, -38, -23, 16, 10, 9, -1, -9, -1, -9, -3, -8, -16, 6, 4, 12, -45, 0, 4, -2, 2, -12, -14, 22, -4, 6, -28, -3, 13, -38, -9, -8, 1, -22, -8, -31, 1, 9, 1, -3, 25, 0, 20, 2, -8, -25, 5, 10, -46, -3, -1, -5, -8, 8, 0, -7, 19, -20, -19, 17, 9, -36, 3, -10, 18, -14, -1, -17, 1, 1, -4, 27, 4, -2, -1, -12, 2, -12, 17, 26, -22, -5, 18, -4, -1, -10, -1, -5, 8, 8, 11, 1, -15, -10, 21, 14, 9, 4, 20, -24, 20, -15, -11, 35, -2, -22, -13, -16, 16, 19, -10, 0, 16, -5, 14, -14, -1, 3, 7, 9, 27, 4, 7, -12, 5, 11, 8, 6, -21, 9, -18, 0, 24, -2, 4, -10, -2, -6, 1, -5, 5, -29, -25, 17, -14, -3, -15, -3, -3, -10, -2, 4, 8, -27, -5, -55, 37, 10, -31, -3, 17, -26, -20, -11, 25, 21, -18, 11, -9, -20, -8, -10, 8, -2, 25, 15, -30, -26, -1, 1, -6, -2, -6, 20, 33, -26, -15, 2, 3, -21, 12, 5, 22, -18, -2, -27, 0, 3, -5, 32, 41, -1, -23, -2, -6, -6, -21, 42, -20, -16, -3, -3, -10, -24, 8, -8, 45, -19, -23, -6, 22, -38, -11, 5, 28, -44, -23, -30, 23, -13, -5, 11, -14, -3, 11, -3, 21, 2, 28, 30, -47, -8, 5, -23, -7, -27, -37, -16, 15, -6, -3, -10, 4, -6, 6, -7, -14, -40, 1, 0, 51, 6, 2, 19, -43, -1, 5, -3, 14, -19, -35, 32, -26, -27, -25, -18, 
  -4, -13, -5, 0, -43, -5, 6, 6, -28, -17, 29, 11, -8, 21, 26, -8, -18, 3, 16, -23, 19, 3, -4, -1, -44, -8, 3, -31, 24, 6, 16, -5, 4, -16, 1, -11, -5, 13, 11, 12, -18, -10, 10, 4, -53, 34, -10, 7, 9, 5, -4, -55, -9, -13, -2, -10, -10, 10, 10, -31, 30, 27, -3, 2, 8, 9, -7, -10, -32, 19, 0, 4, -14, -28, 19, -1, -43, 16, 18, 12, -23, -5, -1, -13, -2, -14, -14, 2, -12, -2, 2, -31, 15, 9, 10, -10, 0, 16, -9, 0, 4, 20, 2, 12, -10, 7, 14, 21, -58, 9, -13, 32, 30, 5, -16, -19, -8, -10, -1, 13, -2, 12, -8, -8, -9, -1, 9, -26, -2, -22, -1, -15, -27, 30, 6, 5, -18, -4, 19, 1, -10, 29, -2, 20, -7, -8, 1, -30, 0, 0, 4, 2, 7, 0, -9, -21, 22, -15, 8, -11, -8, -21, 0, 1, -20, -5, 5, -34, -7, 0, 8, 4, -30, 40, 5, -3, 7, 7, 5, -24, -30, 5, -7, -10, -2, -9, -11, -14, 21, 10, 1, 7, -7, -22, 4, 10, -26, 6, -11, -15, 8, -23, 49, -9, -7, 4, -4, 34, -1, -2, -5, -18, -12, -6, -11, 5, -12, -4, 15, -20, 18, -5, -2, -3, -13, 2, -13, 1, -35, -5, -16, -31, -25, 5, -32, 10, -47, 25, -10, 15, -8, -4, -20, -42, -1, 15, -4, -9, -36, 4, -2, 18, -11, -13, -5, 5, -3, -17, 15, -3, 5, -12, 0, -8, -18, 2, -40, 10, -54, 18, 19, 26, -7, 2, 0, -27, -3, 15, 8, -8, -16, -1, -2, -7, 10, -37, 0, -15, -3, -5, 9, -1, -7, -18, -7, -21, -1, 3, 51, -3, -18, 10, -9, 24, 3, 1, 6, -12, -2, -5, -12, -17, 20, 2, -9, -8, -23, -8, 1, -1, -14, 14, -4, -10, -25, -15, 7, -12, -16, -5, 30, -5, -28, 14, -2, 19, 9, -9, -3, -16, -33, 6, -13, -13, -22, -16, -8, -20, 6, 33, -9, -17, 10, -20, -6, -9, -29, 1, -4, -14, -39, 7, 35, -1, -28, 27, 17, 27, -19, 9, -11, -49, 2, 0, -4, -10, -3, 6, 3, -24, 5, -23, 1, -16, 4, 0, 5, 7, -22, 3, -7, -1, -31, 4, 31, -28, -20, -11, -8, -11, 6, -2, 3, -28, -13, 3, -16, 0, -49, -4, 15, -45, 22, -5, -4, -14, 
  -13, -19, -4, -16, -5, 11, 30, -19, 16, -18, 6, 3, 49, -11, -14, -8, 16, -8, -3, 11, -37, 17, 14, -5, 27, -38, -35, 21, -25, 15, 0, 26, 3, 15, 7, 8, 13, -10, 3, -31, 17, 6, -9, 14, 12, 6, 37, -5, -15, -5, 4, -30, 11, 18, 15, -24, 3, 4, 0, -26, 0, 10, 19, -18, 6, 6, -6, -17, 38, 3, -20, -25, -20, -15, 2, 1, 19, -10, 19, -15, 11, -1, -4, 7, 25, -24, 1, 2, 10, 6, 2, 9, -6, 11, 15, -4, -8, -23, 4, 19, 29, -3, -22, -9, 9, -31, -5, 6, 23, -13, 15, -24, 13, 4, -21, 3, -13, -6, 8, 4, 41, 4, 0, 16, -33, 3, 0, 13, -4, -14, -43, 9, 20, -19, -31, -9, 6, -26, -27, 2, 20, -48, -7, -33, 6, 8, -6, 10, -32, -13, 12, 3, -1, -1, 1, 20, -33, -18, 24, 32, -1, -27, -9, 5, 30, -50, -8, 19, 11, -54, -22, -6, -4, -43, 24, -44, 7, 6, -10, 12, 3, 9, 27, 0, 22, -31, 18, 34, -57, -24, -7, 20, 3, -19, -26, 12, 10, -14, 8, 19, -13, -24, -27, 0, 24, -22, -24, -44, -12, -3, -17, 15, -23, -15, 3, -34, -31, -12, -2, 19, -24, -28, 5, 32, -16, -7, -2, 16, -25, 26, -5, -25, -9, 6, 4, 4, 3, -2, 8, -12, 3, 18, -12, 17, -20, -14, -14, -7, -17, 15, -20, 5, -2, -10, 17, 7, -3, 27, 21, -5, 25, 7, -11, -12, -10, -13, 25, -13, 15, 24, 1, -32, 19, -5, -3, -5, 7, -3, -3, -17, 6, -7, 1, 8, 6, 7, 0, -22, -9, 7, -15, -19, 33, -15, -6, -43, 14, -30, -24, 1, 11, -12, 20, -37, 27, -1, -13, 21, -30, -14, -1, 1, -15, 2, 6, 19, -28, -9, -4, -3, 12, -5, -28, 8, 18, -43, -10, 6, -7, -59, -23, -5, -9, 17, 8, -66, -26, 8, -18, -11, -13, 11, -22, -9, -5, -20, -31, 7, -19, -18, 11, -20, -2, -29, -3, -3, 8, 3, -32, 17, 4, -26, -27, 3, -14, -45, -8, -26, 15, 0, -12, -20, -24, -32, 6, 0, 5, -2, 10, 11, -18, -2, -5, -2, 3, -9, -39, 0, -12, 58, 1, 31, 18, -4, -5, 0, -12, 4, -6, 0, 4, 9, 6, -11, -12, 35, 3, -15, 7, -6, -9, 3, 0, 3, -3, 6, 
  -10, 4, 9, 2, -2, 5, 7, -28, 3, 0, 0, 4, 23, -2, 12, -11, -3, 2, -11, 8, -19, -4, 11, -9, 11, -14, 4, 11, -18, -20, -3, 15, 10, 3, 7, -5, -2, 3, 10, -26, -2, -7, -4, 12, 0, -18, 20, -18, 12, 9, -7, -2, -17, 5, 9, -6, 14, -7, 0, 10, -13, -4, 0, 6, 7, 7, 9, -13, -12, -7, -2, 15, -6, 2, 15, 13, 2, 9, 6, 6, -16, 9, 12, -8, -1, -1, -1, -10, -7, -5, -2, 9, 0, -1, 17, 9, 3, 5, -7, 7, -10, -4, 0, 19, 14, -3, 23, 9, -29, 16, 1, 24, -18, 10, -6, -13, 8, 4, 5, -11, -16, 11, 6, -8, 9, 15, 11, -12, -7, 1, -7, -1, 1, -5, -2, 0, -2, 8, -3, 3, 6, 12, -15, 11, -6, -6, -9, -10, -18, 1, -12, -5, 6, 10, -1, 14, 10, -5, -6, 1, 1, 3, 0, 6, -2, -5, -6, -4, 12, 3, 7, -10, -20, 18, 15, -7, -11, 4, 7, -5, 8, -4, 9, 12, 10, -2, 21, -2, 14, -9, 7, 11, 9, -6, 12, 3, 8, 2, -7, 15, -4, -6, 2, 2, -7, 12, 9, 3, -7, -1, 2, -16, -1, 7, -9, -8, 2, 9, 11, -13, -12, -9, -6, 2, 4, 0, -18, 4, 12, -9, 2, 8, 5, -32, 5, 12, 14, -13, 3, -11, 9, 16, 0, -2, -18, -13, 0, -12, -1, -4, -19, 3, -3, 2, 3, 8, 12, -12, 9, -14, 2, -2, 4, -6, -15, -10, 2, 0, -1, -11, 21, -12, 13, -5, -12, -12, -7, -3, 3, -13, 6, 14, 2, 5, -25, -18, 14, -18, 6, -6, -16, -8, -3, -14, 0, -29, 0, -9, -4, 8, -8, -16, -13, -18, 1, 0, 8, -10, -25, -30, 5, 4, -12, 3, 4, 17, -27, -10, -10, -5, -2, -12, -13, 10, 0, -15, -4, -1, -9, -16, 1, -11, 0, -6, -5, -11, -6, -5, -14, -17, -3, 0, -7, 7, 4, -13, -12, 8, -15, 10, -1, -11, 2, -7, -11, -21, 6, -2, -4, -14, 5, -3, -12, -10, 1, -2, -3, -20, 4, 2, -5, 9, -3, -8, 13, 3, -7, 0, 1, 24, -18, -1, -1, -27, -4, -11, -12, -13, -19, -5, -6, 2, -2, -11, 4, -8, -12, -26, -3, -16, -11, -4, -4, 10, -9, -1, 0, -8, 2, 6, -2, -5, -19, -14, -10, -11, 
  -3, 11, -1, 7, -58, 10, -9, 14, -26, 29, -13, -13, -64, -29, -1, 20, -27, -4, -28, -70, -15, -27, -46, -4, -42, 14, 25, -64, -41, -1, -2, -19, -4, -14, 0, -18, -8, 26, -21, 43, 12, 16, -16, -21, -21, -19, 13, 24, -2, 1, -2, -66, 16, 17, -5, 4, 5, 15, 27, -37, -34, -7, -6, -21, 5, 3, -24, -23, -28, 23, -19, 47, -17, 43, 0, 8, -27, -32, 2, 27, 18, 8, -5, -65, 21, -11, -52, -6, 21, 1, 21, -50, -28, -16, -29, 3, -14, -9, 12, -34, 8, 6, -3, 10, 28, 17, -24, -18, -25, -20, 2, -3, 20, -13, -6, -66, 38, -28, -30, -1, 42, 10, 0, -25, -8, -12, -23, -10, -4, -17, 35, -14, 9, 4, -25, -2, -15, 11, -21, 3, -22, -4, 8, 24, 8, -9, -3, -25, 10, -34, -54, 4, -17, 0, 14, -59, -34, -9, -2, -12, -36, -11, -4, -26, -42, 8, -7, 49, -14, 22, -11, -1, 2, -2, -23, 30, 11, -8, -3, -44, -18, -27, -38, -14, 11, 41, -6, -35, -18, -21, -13, 10, 18, -4, 7, 1, -26, 32, 16, 14, -11, 38, -15, 22, 18, -24, 11, 40, -9, -4, 7, -56, -23, -16, -41, 6, -15, 8, 34, -54, -39, 3, 23, 6, -11, -5, 17, -20, -29, 25, -8, 2, -13, 24, -19, -1, -20, -7, -19, 42, -7, -15, -4, -72, -2, -20, -41, 4, -13, 21, 1, -56, -21, -4, 1, 2, -10, 4, 0, -36, -45, 38, 0, 18, -17, 36, -6, -5, -33, -15, -8, 43, -17, -18, 0, -38, 4, -16, -29, 22, -9, 21, 61, -56, -11, 1, -25, -8, -19, -2, -7, -39, -56, 10, -24, 15, -16, 18, -9, 21, -62, 12, -12, 22, -15, -21, -15, -69, 0, -28, -41, 3, -13, -11, 3, -61, -24, -6, -6, -7, -9, -29, -32, -6, -35, 23, -11, 25, 13, 17, -32, -16, -23, -26, -36, -23, -24, -4, -9, -77, -5, -17, -66, -11, -14, -17, -18, -27, -12, -10, 9, 3, 2, -29, 7, 8, 3, -19, 0, 28, -1, 29, -20, -15, -34, -27, 10, -8, -43, -1, -3, -83, -6, -10, -43, 0, -13, -3, -34, -47, -25, 4, -9, 4, 0, -1, 30, -14, 55, 13, 11, 42, 27, 41, 9, 4, 16, 19, 17, 8, -23, -16, -14, -21, -13, 3, -7, -12, -30, 28, 12, -10, 7, 20, 14, -7, 
  -8, -13, -14, -8, -7, 4, 13, -21, 18, -12, 12, -1, -7, -13, -13, -4, 6, -7, -2, 8, -29, -6, -3, -2, 14, -23, -47, -15, -13, -26, 5, 23, 3, -4, -1, 25, -3, -14, 0, -25, 4, -12, -25, 9, -8, 3, 15, -38, -27, 0, -2, 5, -7, 11, -1, 4, -24, 19, -6, -14, -10, -28, 4, -4, -11, -8, -4, 7, 5, -2, -14, -12, -20, 14, -9, 8, -27, -28, 2, -33, -5, -14, 10, -8, -13, 12, -4, -12, -50, 6, -9, -1, -18, -21, 10, -11, -3, -31, -2, 11, -14, -2, -14, 11, -8, 23, -11, 8, -4, 1, -4, -4, -25, 7, -5, -20, 10, -3, -7, -5, -32, 0, 14, -9, 9, -2, 10, -22, -1, 0, 2, 6, 36, 0, -6, -11, 15, -20, 12, -15, 4, 0, -6, -25, -1, -5, -13, 8, 6, -3, 16, 1, -4, 22, 32, 34, -25, 16, 7, 8, -9, -17, -31, 13, 59, -48, -24, -16, 43, -36, -4, -10, 48, -17, 10, -48, 4, -10, -15, 30, 17, -31, 24, -4, 25, -29, 29, 41, -56, -14, 6, -11, 5, -22, -25, -2, 10, 0, -24, -15, 9, 18, -21, -4, 24, -26, -41, -23, 9, -10, -11, 36, 0, -18, -9, -17, 16, 3, -9, 33, -21, -6, 17, 9, -4, -15, -16, -16, 14, 20, 5, -47, -1, -5, 18, 5, 22, 6, -15, -13, 5, 2, -10, 22, -16, -9, -1, -11, -14, 1, 6, 0, 31, -11, -5, -8, 5, 20, 12, 16, 20, -9, 15, -20, 22, 10, 9, 10, 0, 23, 0, 1, 6, -4, 6, 4, -6, 10, 12, -5, 2, -5, -3, 20, 6, -8, -6, -31, 6, 4, 11, 7, 0, 19, 0, -45, 23, 8, 12, -7, 4, 2, -12, 20, 15, -8, 13, 40, -4, -8, 16, 3, 25, -5, 20, 35, 12, 15, 0, -13, 2, 10, 13, 6, 13, 12, -15, 7, -13, 7, 8, -11, 25, 60, 14, 30, 5, -13, -11, 13, 34, 9, 5, -5, -19, -5, 4, 23, 2, 4, 34, -18, -13, -40, -12, -7, 41, 1, -7, -15, 24, 3, 8, 13, 13, -27, 2, -6, 26, -11, -23, 39, 1, -29, 10, -6, 30, 5, 31, 27, -29, -18, -19, -9, 0, -33, -40, -12, -19, -7, -3, 5, 6, -16, -15, -3, -12, -34, -12, 6, 10, -2, -4, 12, -26, 15, 0, -5, -7, 0, -2, 7, -36, -5, -18, 4, 
  2, 6, 5, -6, -6, -2, -9, -10, -3, -1, -7, -5, -18, 4, -1, -2, -4, 10, -7, -15, 17, -1, -7, -13, 8, 5, -8, -4, -9, 8, 4, 8, 9, 7, 0, -6, -14, -12, -5, 3, -1, 1, -2, -11, -7, -7, 0, -6, -12, -10, -7, -7, -7, 27, 2, 5, -16, 9, -2, 3, -10, -10, -6, 2, -9, -9, -11, -8, -11, 1, 6, 5, -15, 0, -4, -5, -2, 5, -6, -3, 4, 0, -6, -11, -7, -5, 9, -18, 3, -6, -3, -19, -2, 1, 3, -2, -1, -6, -1, 15, -1, -9, 7, -6, -9, -8, 5, -7, 3, 3, 2, -12, -4, 3, 8, -9, -7, 10, -4, -9, -4, -10, 8, -9, -15, 4, 8, 10, -10, -5, -12, 8, -13, -8, -8, 4, -8, -10, -9, 3, -14, 3, 22, -7, 1, -8, 5, -6, -5, -1, 7, -15, 5, -6, 1, -26, -8, 4, 1, 12, 4, 14, -8, 9, -3, -6, 5, -5, 6, 5, 11, 0, -3, 5, 9, 4, -11, 4, -3, -1, -2, 3, -9, -5, 3, -4, 1, -16, -6, -7, -11, 6, -3, -5, -13, -3, 1, 4, -2, -10, -16, 4, -6, -3, -6, 7, -2, -12, 1, -4, 5, -10, -10, 8, 3, 5, -17, 9, -9, -10, -12, 12, 3, 5, 1, -14, -4, 1, 1, 1, -6, -9, -11, 5, -3, -5, -15, -14, -13, -4, -3, 6, -1, 3, -3, -7, -3, -9, -8, -7, -13, -8, 6, 5, -1, -10, -7, -3, 4, -14, -8, -1, 6, 12, -11, 10, -8, 0, -11, -3, -3, -17, -5, -15, 6, -1, 6, -6, -4, 5, -10, 11, 10, -5, 0, -9, -4, -4, 7, 0, 0, 0, -5, -10, -13, -7, -2, -13, 0, 10, -11, -1, -3, -7, -12, -5, 6, 1, 4, -5, 6, 1, -13, 0, 12, -3, 4, -15, 1, -14, 5, -10, -5, -3, -5, 1, -14, -9, -1, 6, 0, -4, 3, 5, 6, 3, -14, -6, 6, -7, -4, -4, -4, -7, -8, 14, 2, -12, -3, 1, 5, -8, 10, 8, -5, 4, 6, -14, -1, -6, -18, -4, -2, 9, -13, -9, 11, -13, -4, 9, -1, -8, -3, -9, 5, -12, -7, 8, -8, -14, -11, -2, -2, -9, -6, 18, 12, -1, 3, -1, 11, -11, -11, 12, -11, 20, -14, 11, -2, -13, 1, 0, 2, -3, -2, 17, 3, -7, -9, 3, -8, -7, 11, 20, 9, 6, 
  0, -7, -12, 1, 2, -2, -3, -16, 2, 1, 0, -11, -2, -2, 0, 7, -11, -2, 8, 3, 0, 0, 6, 8, -11, -3, -5, -9, -2, 2, -12, 11, 0, -8, -7, 4, -3, -8, 1, 6, -4, -3, -1, 0, 0, -1, 5, -11, -20, 0, -9, -12, -1, 6, -5, 7, 5, 7, -14, -2, -10, -1, 7, -11, -8, 5, -9, -3, -7, 7, -3, 7, 6, -2, -10, -10, 2, 7, -7, 2, -7, 8, -2, -8, 2, -8, 1, -12, -7, -3, -4, -3, 6, 1, 4, 4, 7, 4, 5, 8, -3, 5, 2, -10, 1, -10, -4, -9, -9, 1, 0, -5, -2, -13, -4, -15, 6, 0, -13, -9, 3, -1, 0, -13, -11, 9, 13, -8, 4, 1, -6, -3, 5, -1, -9, 3, -1, -3, 5, 5, -3, -5, -6, -6, -11, 3, -12, -4, -6, -4, -7, -2, -7, 4, 6, -4, 0, -3, -11, 9, 5, -7, -7, -8, -10, -10, -8, -7, -8, -1, 5, -13, -17, -1, 14, -3, -8, 7, -6, -6, 5, -6, 2, 0, -7, 6, -3, -21, 2, -3, 5, 3, -11, -5, 1, 2, 1, 7, 7, -11, 0, 7, -10, -5, -17, -1, -4, 6, -5, 3, -4, -10, 1, -8, -7, -12, -12, 0, 2, -10, -14, 8, -3, 5, 1, -11, 0, 1, 2, -14, 8, 6, 3, -14, -3, 8, -15, 1, -14, -12, -8, -8, -11, -9, -5, -6, 1, 0, -13, -7, -6, -12, -2, 6, -10, -4, 0, -17, -4, 6, 7, 2, -6, 3, -5, -13, -5, -5, -16, 4, -8, -8, -10, -14, -5, -7, -7, 8, -13, -5, -10, 1, 4, -17, -3, -13, -7, 9, -5, -9, 1, 8, 3, 1, -9, -22, 5, -3, -2, 2, -15, 6, 4, -1, -20, -3, 1, -1, 1, 6, -5, -11, 6, -8, 0, -5, -10, 6, 3, 6, 7, 2, 1, -8, 2, -12, 7, -7, -10, -8, -13, -12, -26, -4, -3, 0, 6, -8, 1, 1, 3, 6, -2, 3, -1, -12, -10, -6, 7, -6, -14, -6, -4, -14, -9, 5, -6, 2, -7, -5, -1, -3, -6, 5, 1, -12, -2, -10, 0, 1, -10, -15, 7, 6, -1, -7, -9, 2, -8, -9, 4, -3, 5, 3, -6, -1, 7, -1, -2, -15, -5, -4, -6, -4, 1, -8, -25, 7, 3, -4, 6, -8, 4, -29, -5, -4, -7, -4, 4, 4, -9, -21, -4, -10, 7, 6, 
  6, -22, -8, 12, -9, -35, -6, -15, -22, 5, 12, -12, -5, -24, 11, -28, -21, 9, 19, -1, 35, 12, 13, -25, -10, 14, 2, -13, 6, -2, -19, -73, 12, -1, 12, 15, 0, -35, 9, 33, 4, -7, -11, -5, -10, -18, -5, -27, -6, 35, 28, -36, -3, -7, 2, -1, -7, 24, -21, -8, -20, -7, 12, -108, -16, 25, -12, 10, -12, 7, -29, 5, -15, 8, -46, 0, 22, 13, -1, 18, -27, -38, 12, -7, 9, -4, -16, 19, 4, 25, -14, -20, -2, 17, 22, -32, -13, 6, 1, 20, -40, -5, 5, 50, -19, 0, -18, 3, -37, -3, -9, 7, -3, 45, -13, -1, -19, 43, -16, 11, -9, 10, -28, -4, -15, -8, 19, -51, 4, 26, 31, 28, -80, -15, -6, 11, -24, 7, -32, 7, 19, 11, -2, 6, -26, -17, -16, -17, 4, -27, -30, 21, -14, 11, 6, -25, -28, -31, -8, -127, -6, -14, 21, -2, 7, -13, -28, 42, -11, -26, -19, 5, -4, -16, -9, 20, -36, 11, -5, -31, -16, -5, -38, 10, -13, 43, -11, -31, -3, -13, -12, 8, 4, 0, -12, -18, 0, 16, -12, 36, 16, 24, -25, 5, -4, -5, 10, 5, 12, -13, 24, 13, -26, 4, 9, 10, -23, 15, -13, 5, 7, 7, 10, -49, -5, 6, 6, -4, -12, -14, -31, 60, 3, 5, -16, -12, 4, -6, -6, 16, -7, -18, -10, 7, -7, -30, -16, -14, -27, 5, 5, -8, -11, -19, -23, -25, -12, 3, -42, 1, -57, 1, -6, 29, -9, -11, 13, 2, -18, 15, -3, 32, -17, 0, 43, -29, -11, 10, -23, 29, -24, -14, -8, -20, -1, 64, 7, 0, -14, 41, 4, 5, -61, -6, 1, 60, -39, -3, -15, -14, -46, -5, -2, 31, -50, -16, -10, -50, -50, -4, -36, -18, -65, 6, 11, -51, -8, 17, 23, 23, 0, -30, 15, -12, -49, 6, -19, 42, -24, -39, 21, 9, -32, -27, -11, 14, -35, -20, 13, -54, 23, -9, 1, 15, -21, -7, 0, -20, 10, -13, 19, -2, -5, 19, 44, -9, -2, -6, -29, 5, -31, 9, -45, 6, -45, -18, -3, -24, -55, -1, -6, -30, -16, 39, -9, 39, -58, 33, -14, -25, -8, -21, -2, -30, -14, -11, -42, 0, -6, -39, 51, 19, -17, -8, -2, -7, -23, -22, -2, 4, -17, 28, 51, 2, 12, 13, -28, -2, -38, 0, 4, -26, -13, 30, 30, -10, 
  33, 32, 41, 2, -68, 5, 46, 47, -65, 42, 47, 2, -25, -16, 1, 36, -96, 80, 12, -66, 50, 29, -56, -30, -94, 41, 54, -29, 7, 57, 20, 24, 8, 15, 17, 3, -19, 21, 43, 62, -23, 86, 120, 4, -76, 24, -10, -4, -55, 50, 37, -90, 52, 31, -7, -13, -36, 19, 21, -75, 21, 92, 29, 22, 20, -2, 13, -7, -39, -4, -6, 46, -46, 36, 12, 8, -66, -14, 13, 27, -41, 22, 15, -31, -5, 10, -24, -5, -9, 21, -17, -51, -17, 34, -13, 46, 23, 37, 28, 0, -26, 3, 7, 26, -21, 70, 24, -9, -43, 2, -10, 5, -16, 97, -5, -54, -2, -12, 10, 16, -4, 41, -5, -15, -20, 31, 5, 99, 56, -14, 25, 1, 2, 0, -5, 53, -32, 22, -11, 22, -19, -1, 26, 41, -33, 28, 24, -31, 9, 28, -23, -11, -33, 21, 18, -28, -15, -11, 3, 80, -3, 54, -4, -19, -25, -35, -5, 59, -47, 55, 60, -9, -6, -3, 33, -6, -9, 46, -13, -36, 10, 10, -39, 34, -33, 33, 38, -60, 6, 44, -10, 18, 5, 51, 28, 9, -25, -24, 32, 31, -17, 17, 26, 11, -7, 1, 12, 19, 0, 44, 27, -20, 24, 14, 1, 52, -40, 30, 31, -28, -22, 25, -3, 39, -3, 31, 10, 8, -39, -25, 14, 61, -33, 9, 58, 3, 1, -18, -8, -5, 6, 28, -12, -12, 31, 45, -57, 23, 0, 32, 10, -26, -12, 33, -17, 51, 17, -3, -16, -23, -31, 17, 19, 38, -44, 43, 58, 1, -37, 6, -16, 16, -26, 45, -9, -17, 36, 26, -75, 32, -17, 46, 32, -61, -3, 57, -23, 100, 28, -15, -10, -11, -58, 6, 53, 47, -65, 11, -32, -3, -52, -27, 15, -7, -2, 24, -9, -29, 3, 4, -37, -31, -23, 42, -23, -28, -13, 50, -11, 95, 22, -33, 3, 3, -16, 23, 28, 8, -10, -9, -4, -3, -14, -32, 7, -27, -43, 69, -23, -32, -21, 21, -30, 13, -13, 44, -11, -26, -32, 20, 12, 53, 6, 0, 0, 11, -13, -21, 13, 29, -46, 48, 6, 13, -67, -9, 22, 7, -81, 62, -1, -26, 11, 38, -19, -41, -7, 63, 57, -32, -19, 60, 7, 23, 36, 15, 34, 21, -19, 0, 23, 64, 19, 61, 76, 10, 9, 20, -14, 3, -35, 67, -1, -17, 65, 86, 13, -1, 3, 18, 117, -20, 14, 34, 24, 14, 
  -1, -9, 1, 17, -14, -15, -2, 5, 10, -26, -9, 6, 45, -10, -37, -23, 38, -4, -6, 19, -26, -12, -2, -14, 64, -27, -24, 7, -11, -14, -11, 7, -5, -12, -9, 30, 0, -11, 2, -32, -16, -14, -4, 3, 22, -15, 25, -49, 1, -15, 2, 14, -4, -15, 0, -20, 2, -20, -9, 22, -16, -25, 8, 15, -1, 18, -7, 3, -17, -10, 3, -20, 10, -11, -5, -13, -29, -3, -1, -28, -8, -7, 6, 24, -10, 10, 2, -10, -19, 6, -8, 21, -17, -8, 1, 4, 5, -5, 13, 18, -20, 1, 0, 7, -25, 6, -8, 6, 12, 4, -14, 26, -27, -9, -8, 1, 5, -3, -10, 5, 31, 21, -11, 52, 11, 16, -8, -17, -7, 1, 5, 13, 63, -28, 9, -7, 18, 9, 2, -18, -6, 4, -26, 14, 3, -7, -8, 21, 6, -17, 25, 1, 5, 21, -4, 28, -11, 20, -9, -19, -5, -19, -19, 29, 38, -38, -3, 0, 44, 7, -4, 8, 38, -9, -18, 7, 5, 7, -2, 16, -6, -11, 33, 5, 6, -5, 6, 57, -42, -47, -4, 13, 8, -11, -9, -6, 40, -12, -1, 5, 19, 6, -3, -7, 39, -17, 5, -3, 15, -6, 3, 28, -1, -12, 1, -5, -4, -4, 8, 34, -39, -36, 10, -3, 1, -37, -10, 0, -3, -12, 2, 15, 3, -10, 13, 4, 31, -13, 0, -17, 10, 5, 1, 26, -16, 2, -4, -4, 14, 7, -6, 35, 13, 12, -1, 11, -5, 11, 13, 18, 24, -25, -4, -21, -5, -2, 5, -10, -33, 9, 0, -5, 23, -5, -3, -11, 11, 1, 19, -13, -17, -17, -6, 13, -7, -3, 0, -34, -4, -11, -5, 1, 49, -12, -5, -48, 5, 13, 39, -5, 0, 15, 7, 29, -13, -28, -7, 41, -2, 15, 26, 9, -25, 6, 0, 40, 22, -16, -2, -5, -4, 38, 18, 21, -10, -5, 4, -25, -9, -5, 24, 1, 7, 31, 28, 29, 8, 1, -9, 19, 20, 11, -6, 11, -26, -2, 12, -7, -20, -9, 2, -3, -6, 0, -5, -3, 32, -21, 7, -15, 50, 6, 14, 1, -4, -4, 9, -12, 30, -4, -11, 8, 7, 6, 19, 6, 15, 4, 23, 32, -28, -21, -2, -13, -20, -3, -14, -10, -17, -32, -5, -11, 25, 0, -18, 5, -13, -66, -6, -7, -6, -2, 4, 45, -28, -13, 13, -8, 5, -2, 10, 47, -13, 6, -23, -9, 
  2, -21, 3, 0, -9, -7, 9, 5, -1, -1, -10, -4, 6, -29, 23, -16, -6, 3, -8, -1, -26, -9, -6, -10, -5, 0, -1, -26, -25, -5, 0, 33, 13, 7, 12, 0, -1, -16, 20, 6, -19, 7, -24, -9, -19, 10, 2, -5, -33, -9, 6, -10, -8, 14, -1, 6, -3, -3, 8, 7, -26, 15, 6, -4, 5, 12, 4, -9, -18, -5, -4, 0, 10, -7, 6, 3, -4, -19, -2, -21, -34, -3, -2, -1, 17, -33, -15, -4, -34, 1, 10, 1, -42, -11, 9, -12, -13, -22, -2, 5, -8, 5, -4, 16, -25, 13, 3, -11, -48, -36, 34, 5, -48, 2, -14, -34, -7, -4, -5, -4, -41, 7, 6, -18, -39, -19, -3, -15, -19, -21, -25, 2, 9, -6, 15, -9, -4, -6, 3, 1, 1, -33, -33, -5, -27, 7, -17, -8, -29, 12, -1, -7, -26, -5, -2, 9, -25, 6, -12, 40, 2, 1, -21, -9, 29, -23, -7, -33, 18, 1, -13, 3, -2, -31, 11, -41, 23, 12, -7, 7, -3, -12, 18, 4, -6, -10, 4, 10, -53, -15, 0, 7, 5, -12, -8, 14, 11, -14, -17, -11, -21, -14, -22, 4, 6, -33, 8, -22, -20, 9, -12, 13, -13, -23, -8, -13, -21, -8, -6, 13, -50, -20, 20, 47, 8, -21, -23, 0, -12, -5, -10, -4, -5, 9, 6, 10, 9, -32, 8, 8, -32, 2, -5, -4, -21, -3, -20, -3, -2, 2, -20, 8, -3, -21, -17, -6, 4, -5, 3, 10, 33, -17, 11, -33, -4, -1, 19, 0, -9, -4, 15, -17, 5, -1, -2, 5, 18, 10, 18, -7, -6, -2, -3, 9, -19, -32, -5, 11, 4, -22, -10, 1, 16, -30, -4, -73, 7, 25, 14, -7, -14, -21, -17, -15, -27, 6, 14, -5, -2, -11, 12, 12, -12, -4, 8, 26, -32, -39, -1, 33, 5, -16, -1, 1, 3, -25, 2, -27, -19, 5, 3, -15, 2, 5, -15, -3, -4, -11, 1, -27, 21, 11, -9, -2, -19, -16, -29, 6, 13, -20, -9, 18, -19, -10, 9, -5, 30, -11, 11, -29, 21, -16, -3, -3, 38, -19, -18, -14, -9, -10, 6, -3, -13, -21, 4, -9, -1, -10, 9, 21, -32, -25, -30, 9, 8, -22, -28, -18, -25, -34, 0, -19, -2, -3, -24, 17, 6, -31, -6, 34, -10, 15, 11, 19, -42, -1, -10, 3, -3, -16, -4, 5, -22, -39, -6, -18, 
  9, 3, -12, -14, 2, -12, -11, -3, -10, 5, -5, -8, -6, 5, -4, 3, -2, 3, -10, -16, 7, -3, 1, -10, -3, 7, -5, -12, 0, -12, 1, -6, 3, -7, -4, -5, -16, -13, -2, -6, -1, -1, 1, 2, -16, -1, 6, -13, -19, -1, -10, 10, 1, 4, -12, 2, 3, 4, -7, 9, -5, 2, -10, -4, 5, -2, -6, -10, 8, 3, -1, -2, -10, 8, -4, -10, 10, 4, 0, -17, -14, 7, 2, -7, -13, -8, -4, -5, -13, 1, 7, -18, 3, 1, -3, 6, -6, 4, 9, 11, -11, -7, -6, -5, -20, -4, 2, -15, -12, -12, -3, -6, -15, 0, 2, 4, 6, -6, -9, 0, -15, -14, -5, 1, -13, -16, 3, -1, 3, -8, 0, 2, 5, 5, -13, -4, -10, 3, -8, 3, -25, -12, -2, -10, -14, 5, 4, -8, 4, -6, 0, -12, -9, -3, 10, -7, 1, 9, -1, 3, -10, 1, 5, 5, 7, 7, 1, -9, 1, -10, -4, -2, -29, -6, -1, -2, -4, -3, -7, 8, 5, -9, -3, 0, -13, 3, 5, 12, 0, -8, 4, 1, 4, 6, -13, 3, 8, -4, 8, -13, -16, -2, -4, -4, 3, -5, -3, -7, -13, -9, 11, -7, 9, -11, -10, -3, -21, -7, -7, -6, 4, 8, 7, 9, 11, -1, -7, -10, 3, -8, 1, 0, 5, -11, -3, -3, -24, 6, -2, 4, -10, 9, 9, -19, 5, -4, -6, 6, -2, -4, -6, -20, 8, -11, -7, -9, 9, 2, -3, 2, -1, -5, -11, 5, -28, -1, -13, 3, -17, 5, -12, 2, -13, -9, 3, -13, 3, -1, -7, 1, -28, 2, 3, -9, -6, 0, 6, -6, 10, -8, -1, -8, 10, -10, 2, -7, -11, -13, -12, -4, -3, -10, -12, -5, -3, 0, -7, 0, 3, -11, -6, -5, 2, 8, 7, -2, -13, -3, -11, -9, 0, 3, -11, 6, -2, -9, -4, -7, -9, -2, 1, 11, -3, -10, -4, 6, -1, 17, 1, 3, -3, -12, 2, -7, -5, 10, 5, -24, -7, 0, 7, -3, -8, -2, -1, -4, -9, -12, -2, 7, 0, -4, 0, -3, -18, 8, -3, 5, -16, -1, -6, -2, -3, -7, -9, 3, -35, -5, 8, -5, 3, -8, -2, 8, 4, 3, -4, 8, -7, 2, 6, -3, -21, 5, -11, 1, -18, -5, -15, 0, -12, -4, 1, -14, -3, 12, -10, 1, -14, 9, -2, -2, -2, -6, 8, 2, 
  -4, 2, -1, -11, -17, 3, -5, -23, -11, -6, 2, 10, -15, -6, -17, 13, -18, 2, -3, -7, -5, 8, 3, 9, 7, 6, 15, -27, 12, 4, -7, -18, 13, -12, 2, 2, -18, -3, 8, -20, -5, 1, -3, 4, -43, -3, 14, 3, -27, -8, 9, -28, -4, 10, 12, -12, -5, -8, 2, -17, -6, -2, 0, -3, 13, 6, -8, -1, -5, 0, -12, -8, -17, -5, -3, -9, -3, -11, 4, 4, -8, -13, 10, -18, 4, 1, -5, -6, 1, 8, -6, -21, 3, 2, -13, -4, -12, -7, 3, -1, 1, -5, -13, 1, -3, -5, -5, -8, -8, -5, -5, -6, -19, -3, -5, -6, 5, -13, 0, -4, -6, -16, 2, 9, -6, -4, 5, 6, 7, -17, 4, -10, -13, -17, -4, -25, 2, -12, -22, 3, -14, -7, 44, 16, -8, 8, 8, 4, -9, -7, 6, -11, 10, -4, 6, -16, -6, 11, -2, 9, 8, 8, 6, 4, -1, 5, 0, -1, -19, 2, -5, 8, -16, 7, -6, -3, -16, -3, 0, 1, 7, -6, -9, -9, -5, 7, 0, -13, 2, 12, 0, -2, 6, 2, 4, 2, -3, 3, -9, -20, -11, 10, -16, 5, -15, 0, 8, -7, -12, -9, -5, -6, 8, -9, -8, -5, -5, 9, 7, -14, 1, -11, 13, -7, 4, 4, -12, 8, -3, 3, 4, -2, -5, 1, -19, 1, 5, 4, 6, 5, -20, -5, -11, -3, 5, 4, -2, -3, -5, -4, -6, -10, 7, -3, -4, 3, -1, -6, -5, 14, -19, -9, 7, 1, -4, 10, 7, -8, 1, -11, 0, -14, 2, 10, 2, -20, -7, -1, 0, -16, -2, -2, -4, -11, 3, 1, 7, -9, -6, -12, -2, 8, -5, -1, -14, -21, -13, 0, 4, 5, -8, -7, -11, -11, 5, 15, 0, -16, -12, -12, -10, -9, -12, 3, 3, -6, -8, -11, 6, -9, -8, -23, 1, -4, -19, -4, 0, -7, -10, 9, 0, -7, -8, -4, 15, -2, -4, 2, 4, 7, 4, -10, 6, -17, 6, 2, 4, -5, 9, 0, 5, 9, -4, -2, -10, 5, 0, -4, -8, 1, -18, 3, -14, -2, -21, -10, 7, -12, -8, -4, 8, -14, -2, -16, 3, -1, 6, -10, -9, -21, 8, -10, 2, -17, 1, -5, -11, 8, -2, -5, 0, -14, -15, -7, 4, -6, -28, 2, -2, 10, -20, 3, 18, -18, -7, 8, -13, -5, -10, 14, 9, -21, 8, 19, 9, -7, 
  -10, -8, 1, -9, -12, 23, 4, 12, -50, 12, 15, 2, -25, 0, 10, 61, -29, 6, 1, -24, -37, -12, 0, -11, -26, 44, 2, -23, 1, 10, 8, -8, -9, 5, -11, -22, 27, 31, -9, -11, -16, 2, -7, -11, -28, -13, -1, 29, -36, 8, -11, -1, 33, -13, -6, 0, -17, 43, 11, 18, -11, 11, 3, -10, 4, 8, -6, -9, -14, 22, -9, 10, 32, 16, 7, -7, -14, 18, 3, 28, -7, -2, 3, 23, -7, 7, -4, 6, -25, 44, 23, -20, -6, -5, 7, -3, -7, -7, -8, 1, 13, 0, -3, -22, -23, -3, -13, 4, -15, 7, 3, 6, 5, -11, -9, 10, -3, 2, -20, -3, -16, -5, -18, -1, -10, 22, -5, 6, -6, 4, -5, -31, -18, 0, 9, 0, -15, 2, 11, -9, 8, -19, 15, 36, -24, -13, 3, -51, -28, -10, -18, -1, -23, -6, -20, 16, -9, 8, 5, -11, -4, -7, -3, -7, 4, -4, 0, -18, -17, 4, -7, -1, -11, 9, 9, 38, -32, 14, 11, 1, -14, 5, -13, -6, -10, 19, -32, -32, -2, 20, -1, -3, -13, -10, 15, -11, 21, 17, 7, -6, -8, 18, 2, 2, 2, -7, 3, 28, -26, 7, 5, 4, 8, 2, 6, 2, -34, 14, 12, -20, -7, 16, 0, -4, 5, 14, 5, -6, -2, 0, -9, -3, -5, 39, 1, -6, -62, -5, -1, 39, -57, 8, 3, -35, 0, 7, -19, -1, -27, 16, 3, -16, -5, 23, -7, -14, 7, -5, 0, -12, -5, 12, 4, -8, -32, 40, -3, -6, -24, -24, 0, 20, -50, -7, 8, -1, -16, 3, -6, -2, -4, 23, -9, -33, -15, 9, 7, -3, -4, 4, -5, -12, -27, -4, -9, 4, -25, 20, 3, -14, -41, -6, 18, 7, -8, 0, -12, -41, 8, 0, -8, -1, -28, 38, 7, -30, 9, -9, -2, -8, -5, 4, 10, -8, -36, -16, 1, 5, -18, -5, -2, 12, -48, -1, -3, 10, -12, -11, -5, -22, -14, 4, -6, -1, -25, 10, 22, -27, 2, -2, 1, 5, -5, -13, -10, 1, -33, 6, 4, -8, -29, 5, -14, -6, -33, -20, 9, 0, -29, -4, -11, -9, -35, 1, -4, 2, -17, 15, -24, -29, -6, 2, 27, -3, 13, 0, 32, 4, -24, 11, 7, -5, -30, 28, -11, -11, -31, -10, 0, 61, -42, 4, -4, -52, 6, -13, -14, -7, -30, 27, 40, -23, 3, 6, 32, -1, 
  0, 9, -3, -5, 2, 1, -16, -22, -5, -4, 2, 5, -16, -20, 8, -1, -10, -11, 7, -20, 8, 2, -1, -12, -8, -4, 14, -2, 4, 9, -6, -10, 9, -13, -11, -9, -16, -9, 9, -9, -5, -5, -5, -4, -15, 0, -10, -3, -11, 5, -11, -15, -11, -9, -4, -1, -3, 7, 0, -12, -9, 5, 11, -10, 1, -8, -4, 0, -6, -17, 5, -15, 1, 9, 4, -2, -16, -11, -6, -5, -1, -11, -6, -2, -13, 0, 7, -3, -14, 3, 2, -22, 1, -3, -12, -4, -7, 4, -7, -8, -9, 6, 2, -1, -10, 6, -6, 1, -17, -7, 5, 0, -3, -7, 4, -6, 0, -9, -13, -16, 7, 6, 12, -9, 2, 4, 0, 0, -9, -7, 5, -5, -12, -9, 2, -4, -3, -12, -7, -13, -3, -21, -7, 1, 3, -9, -11, -2, 1, 1, 12, -3, 6, 3, 11, -9, -14, -1, -11, 8, 3, 5, -5, -10, -2, -8, -14, -12, 9, -8, -5, 9, -13, -1, 1, 5, 1, 0, 2, 4, -2, -2, 5, -12, 3, 6, -8, -12, -14, -3, -1, -10, 8, -9, -3, -3, 8, -10, 2, 2, -10, 3, -12, -5, -22, -7, 2, -7, -8, -10, 8, -12, -12, 0, -12, 0, 5, -6, 0, -16, 4, 7, -11, 6, 1, 11, -4, -3, 0, 3, -2, -2, -5, -1, -4, -7, -19, -6, 2, -1, -19, 2, 1, -7, 3, -9, -13, 1, -6, 11, -15, -14, 1, -10, -12, 8, -7, -17, 14, 0, -8, 4, -4, -12, -3, -10, 5, 8, -20, -3, -4, -12, -2, 8, 9, -16, 3, 1, -5, 0, -11, -1, -10, -5, 7, -13, 3, 10, 4, -5, -4, 6, -3, -7, -6, 2, 6, -7, 3, -2, -17, -16, 3, -2, -13, -1, 11, -9, -2, 4, 11, -8, -4, -1, 0, -1, 3, -5, -13, 8, -9, -13, -12, -1, -3, -2, -2, -15, -9, -6, -5, -6, -13, -5, -7, -6, 8, 3, 4, 4, -1, -1, -5, 7, 11, 7, -2, 6, -12, 6, 1, 0, -14, 1, -7, -8, 7, -16, 11, -9, -5, 1, -6, 7, -14, -2, -6, 0, 0, 3, -10, 0, 10, 3, -11, 1, -8, -9, 1, -28, 0, 11, 6, 2, 5, -2, 11, -6, 3, -11, -1, -13, -10, 5, -12, -11, -17, -2, -3, 2, -13, -12, 3, 5, 9, -8, -8, -13, 2, 18, 5, -7, -3, 9, -11, -10, 
  1, 11, -2, -27, -18, -8, -13, 68, -33, 9, -2, -1, -12, -16, 1, 11, -29, 3, -10, -17, 6, 2, -4, 0, -30, 14, -33, -27, -9, -2, -7, -27, 9, 4, 1, -12, -7, -4, 14, 44, -2, 56, 3, -3, -30, 4, -16, 28, -45, 8, 13, -29, 20, 9, 8, -7, -10, 4, 15, -68, -8, -6, -5, 20, 13, -5, -2, -9, -40, -14, -10, 61, -30, 7, -5, 3, -30, -3, -18, 4, -14, 12, 8, -12, 9, 1, 10, -20, 7, 6, 15, -42, 1, -7, -8, 7, -3, 0, -7, 15, -14, -3, -7, 63, -13, 16, 6, -2, -19, 6, -3, 8, -12, 5, 13, -8, -2, 3, 12, -13, -1, -9, 3, 0, -8, 5, -14, 9, 13, -17, 12, -2, -19, -6, -17, 61, -22, -2, -9, 16, -51, -12, 24, 15, -36, 27, -4, -7, 16, -2, -4, -4, 3, -9, 14, -26, -12, 13, -6, 14, 8, 10, 10, -10, -25, -11, 3, 46, -8, -10, 6, 2, -25, 4, 2, 19, -18, 1, -4, -17, -18, -2, 4, -14, -27, 8, 14, -2, -3, -2, -4, 18, 8, 6, 8, -2, -4, -22, -3, 27, -16, 27, 1, 9, -19, -13, -5, 4, 8, -14, 2, -1, 0, 17, -8, -13, -6, 14, 4, -27, -4, 0, -10, 3, 11, 16, -14, 0, -24, -18, 5, 30, -10, 54, -13, 3, -40, -16, 7, 17, -25, 4, -2, -42, 17, 14, -8, -13, 3, 17, -12, -24, -15, -17, -14, -2, -2, 6, -4, 5, -21, 8, 5, 68, -16, 59, -8, -4, -19, -5, -15, 15, -6, -5, 6, 6, 4, -13, 0, 7, 23, 19, -1, -45, 7, 4, -16, -19, 1, -2, 8, -21, -20, -15, -3, 94, -12, 2, -16, -11, -29, -10, -4, 4, -14, -5, -5, -21, 11, 9, -9, 3, -4, 17, 2, -34, -26, 11, -2, -9, 4, -19, -12, -10, -19, -9, 2, 62, 6, 33, -20, 0, -16, -11, 23, 19, 3, 20, 1, -3, -16, -2, -6, -14, -2, -2, -13, -15, -18, 0, -1, -9, 0, 8, 8, 11, 3, -14, -13, 23, -12, 35, -18, 8, -27, -3, -3, 14, -38, 6, 8, -1, 10, 11, 23, -13, -26, 12, -21, -25, 0, -5, 5, -12, -1, -4, 1, 23, -19, 5, -12, 30, -3, 42, 3, -9, -2, 11, -15, 17, -22, 12, 31, -4, 19, 18, 4, -2, -19, 16, 17, 9, 17, 3, 26, 8, 
  0, -16, -9, 6, 22, -18, 17, -16, 13, -15, -3, -8, 13, -13, -7, 4, -11, -6, 12, 3, 17, -1, 3, -9, -5, -5, 5, 10, -4, -12, -5, -9, -1, 11, 10, -18, -10, 7, 12, -12, -13, 5, -20, 17, -8, 9, 17, -8, -13, 2, -18, 3, -15, -1, 1, -3, -2, -8, 0, 6, 18, -3, -12, -4, 3, -2, 1, 5, -5, 3, 7, -2, 0, 8, 7, 1, 5, 8, 9, 17, -8, -1, 24, -7, 22, 9, -6, -15, -6, 16, 9, 22, -8, 5, 10, -4, 10, 4, 19, -10, 9, 7, -1, 2, -4, -3, 12, 4, -9, 20, 14, 14, -15, 5, -19, -15, 8, -9, 5, 2, -12, 11, -3, 11, 3, 0, 8, -4, -11, 7, -11, -10, -16, -2, -2, -8, -19, 3, -15, -3, -10, -22, 3, -11, -14, 3, 4, -13, -2, 1, -1, -13, -17, 8, -4, -5, -16, -11, 8, -1, -5, -15, -7, -17, 14, 6, -2, -23, 13, -9, -3, 13, -8, -20, 24, -29, -2, -2, 2, -11, 13, -3, 11, 2, 8, 5, 5, 19, -15, -16, -11, 14, -3, -24, -3, -14, -1, -13, -28, 0, -12, -1, -19, -11, 3, -20, 8, 0, -2, -4, -13, -3, -1, -19, -4, -11, 11, 4, 0, 16, -4, -29, -8, -5, -11, -28, -21, -8, -1, -14, -7, -31, 4, -3, -14, 9, 14, -19, 1, -9, 6, 6, -3, 0, 0, -27, -8, -2, -10, 0, 2, 7, -4, -12, -14, -22, -7, 5, 3, 1, 2, -9, -14, -30, -7, -1, 5, -3, -12, -9, -20, -19, -7, -7, -21, -28, -25, -15, 3, -13, -5, -8, 3, 6, -22, -3, -5, -26, -3, -19, -17, -13, 16, -6, -15, -20, -4, -7, -18, -9, -4, -15, -11, -33, -6, -22, -11, 1, -10, -17, 10, -3, -1, -8, 10, 11, -26, -12, 13, -2, -4, -4, -13, 4, 5, -8, -23, 0, -7, 10, -14, -2, 0, -29, -27, -15, 5, -8, -18, -14, -19, -5, -12, -8, -20, 3, -12, 1, -20, -20, -5, -33, -3, -3, -11, -21, 5, -14, 2, -8, 0, -12, -18, 1, -3, -15, -10, -19, -12, 9, 6, -11, -7, -11, 6, 0, -26, 5, 11, 12, -31, 1, -7, -26, 9, -18, -16, -4, -2, -12, -5, -12, -7, -1, -2, 3, -5, -23, -5, -6, 4, 15, 8, -13, -36, 5, 4, 9, -12, -2, -10, -7, -37, -6, -17, 2, 
  20, 11, 15, 0, -33, -19, -4, 37, -29, 5, 7, 2, -52, 8, 4, -16, -51, 14, -9, -61, 25, 18, -4, -5, -36, 10, -4, -32, 6, 43, -7, 1, -3, 20, -9, 5, -27, -22, 20, 38, -12, 22, 25, 9, -66, 31, 3, 14, -42, -1, -13, -53, 23, 18, -7, -23, 8, -5, -1, -35, 14, 40, -7, 9, -6, -10, 0, 4, -22, -15, -2, 46, -23, 17, -14, 10, -39, -24, 0, -2, -2, -20, 4, -17, -2, -29, -6, -15, -10, -13, 1, -52, -5, 5, -6, 14, -3, -5, 15, 9, -6, -27, -10, 95, -9, -26, -12, -8, -23, 6, 30, -11, -30, 4, -19, -18, 4, -3, 4, -3, 5, -3, 21, -1, -33, 8, 1, 8, -5, -21, 24, -20, -18, -8, -5, 54, -16, -4, -13, 11, -37, -14, 43, -24, -19, -17, -17, 0, -22, 15, -14, -8, 1, -10, -9, -24, -19, 16, -2, 14, 4, 10, 4, -9, -58, -19, -10, 79, -46, -8, 28, -7, -27, -1, 22, 4, -55, 7, -9, -34, 25, -8, -14, -20, -7, 6, 0, -45, 0, 54, -11, 27, -4, 15, -6, 13, 1, -33, -8, 14, -4, 13, 7, 6, 13, -2, 14, -19, 12, 4, -8, 3, 15, 9, 8, -1, -17, -5, 6, -6, -26, -16, 0, -3, 2, 25, -19, 9, -6, -37, 20, 16, -12, -10, -13, 4, -9, -28, 24, -51, -7, 1, 17, -22, 4, 6, 7, -4, -2, -3, 18, 0, 6, 1, -11, 13, -2, -5, 7, 0, -53, -33, -2, 42, -27, 6, -3, -5, -52, 3, 0, -6, -31, -10, -5, -50, -1, -20, -11, 22, -13, -7, 13, -41, -21, 36, 3, 11, 4, -11, 1, -3, -41, -9, -1, 59, -49, 5, -32, -13, -66, -15, 25, -4, -33, -6, 10, -53, -4, -6, -11, -12, -22, 9, -17, -32, -28, 9, 2, 17, 3, -35, -19, -12, -33, -26, -20, 34, -36, 17, -41, 23, -16, -30, 16, -11, -28, 18, -13, -49, -30, -19, -39, -9, -41, -6, -19, -34, -17, 11, -11, 22, 13, 5, -4, -3, -48, -38, 1, 62, -40, 2, -34, -7, -41, -31, 15, 0, -76, -20, 2, -22, -6, 26, -1, -3, -25, 0, -13, -44, -13, 22, 17, -16, 1, 17, 28, 10, -38, -11, -21, 63, -35, 11, 14, 8, -14, 30, 4, 20, -37, 21, 0, -56, 57, 15, -25, 20, -40, 9, 56, -17, 16, 51, 18, 2, 
  -12, 3, 0, 0, 30, -11, 13, 25, 28, 6, -12, -3, 50, 1, -6, -33, 43, 8, -27, 32, -8, 8, 9, -13, 34, -23, -38, 31, -20, -11, -4, 20, -1, 3, 0, -18, 20, -20, -9, -26, 28, -21, 1, 11, 24, -22, 61, -18, 6, -7, 5, 3, -14, 4, 8, -34, 4, 2, 11, -5, 19, 1, 8, 2, -8, 31, 21, -24, 38, 7, 13, 0, 0, 2, 21, 4, -6, 8, 5, 28, -3, 4, 2, 3, -7, 26, 1, -1, 13, 23, -13, 18, 30, 17, 0, -15, 6, 19, 35, 6, 2, -29, 7, -1, 22, -4, 23, 4, 16, -18, -7, 9, -20, 8, -18, 0, 20, 4, 7, 12, 17, 12, 19, 11, -8, -19, 3, -1, -9, -35, -34, -19, 12, -27, -2, -15, -11, 0, -26, -6, 14, -35, -27, -12, 0, 5, 2, 27, -20, -6, 16, 3, -18, 5, 7, 40, -35, -29, 0, 8, -3, -27, -10, 7, 20, -28, -20, -22, 4, -40, -31, -4, 28, -50, 15, -23, 1, -4, 0, 17, -15, -10, 19, 25, 23, -20, 41, 41, -29, -29, -4, 15, 7, -17, -12, 2, 14, -16, -29, -14, -19, -10, -8, -1, 42, -18, 18, -20, -4, 1, -10, 26, -22, 3, 10, 0, -28, -9, -18, 22, -29, -35, 14, 57, -5, -11, -28, 12, 0, 7, -6, -31, 6, -3, -11, 6, 3, 7, 11, -4, -4, -1, 12, 32, 8, -2, 2, -5, 17, 12, -12, -11, 11, 1, -6, 34, -6, 4, 38, 1, 24, -28, -1, -17, -1, -4, -15, -9, -43, 19, -32, -12, 2, -2, -13, -7, -4, 7, -4, -8, -24, 0, -28, 1, -23, 23, -23, -5, -16, -23, -3, -24, -3, -23, -15, -58, 16, 27, -1, 5, 10, -11, 30, -28, 4, -4, -13, 29, -24, -27, 15, 3, -20, 9, -18, 16, -17, -8, -21, 3, 0, -5, -29, 2, 2, -40, -32, -20, 10, 11, -9, -14, 5, -13, -9, 4, -2, -7, -3, 1, 25, -5, 5, 6, -31, 20, -10, 22, -16, -7, 16, -12, -2, -50, 1, -2, 23, -9, -19, -14, 9, 13, -50, 5, -8, -42, -1, -23, 14, -4, -12, -2, -11, -24, 15, 6, 7, 13, 18, 21, -54, 15, -24, -13, -10, -24, -21, -35, -7, 4, 8, -10, 5, -7, -14, 4, -15, -25, -8, 16, -2, -11, -7, -4, -19, 1, 14, 28, -5, -21, -18, 41, -30, -19, -30, 1, 
  15, 17, -4, 8, -33, -12, 18, -4, -17, 2, -8, 8, -5, -17, -21, -8, -20, 11, 15, -23, 0, -5, -11, -19, -5, 16, 1, -32, -1, 17, 6, -11, 2, 11, 8, 1, -11, -18, 5, -10, -9, 11, 12, -7, -83, 13, -10, -7, -43, 8, -1, -39, 14, 10, -9, -4, 8, 2, -7, -19, 3, 12, -11, 9, 7, -1, 3, 15, -1, -29, -1, 0, -15, 5, -7, 10, -43, -20, 6, -7, -10, -12, 2, 0, 12, -15, 2, -11, 11, -4, -3, -21, -5, 0, 7, -7, 3, 0, -3, -1, -4, -23, 1, -8, -1, -4, 4, -5, 14, -15, 4, -2, -15, 4, 1, 1, 9, 9, 0, -5, 11, 4, 10, 28, -28, 15, 1, -7, 2, 1, 15, 4, -18, -27, 9, -11, -16, 8, -3, 12, 1, -22, 43, -17, -30, -6, -14, 0, -10, 14, 12, -13, 2, 5, 15, -21, -11, 18, 7, 4, 4, 7, 11, 0, -46, -15, 8, -6, -25, 4, 22, -6, -44, 6, 5, 11, -34, 3, -5, -5, 23, 9, -5, -7, -9, 7, -1, -33, -7, 13, 8, 26, 0, -10, 3, -6, -23, -34, 3, 4, -16, 7, 10, 6, -32, -10, -1, -13, -10, 4, -10, -8, 1, 26, -2, 3, -14, 12, -3, -27, -6, 3, 7, -19, -5, 1, 9, 24, -19, -11, -9, -3, -4, -8, -7, 8, 33, -18, -6, 2, -15, -5, 7, 21, 18, 11, -9, 3, 2, 3, -13, 14, -11, 4, -2, 6, 4, -3, 14, 23, -11, -2, 0, 5, -10, -5, -6, 3, 19, -34, -15, -11, 8, 6, 5, 5, 4, -3, -12, 4, 30, -3, 14, -25, -13, 24, 0, -18, 3, -13, -1, 1, -25, -20, -8, -12, -17, -11, -14, -8, -20, -12, 8, -12, -33, 5, -4, 15, 9, -8, 2, -8, -1, 10, -1, -13, -24, -1, -7, 0, 6, -12, -22, -7, -13, -30, -1, 10, -7, -13, -6, 6, -4, -20, -2, 0, -4, 18, 17, 25, -16, -19, 2, -6, 12, -6, 1, -5, -11, -9, 7, -7, 0, 15, 2, 15, -32, -13, -5, -23, -14, 2, -18, -3, -33, -8, 17, -27, -27, -13, -9, -13, -11, -1, -10, -24, 2, -1, 1, -31, 1, -9, -2, -23, 3, 18, -6, -5, -35, -8, 11, 4, -9, -7, 8, 0, -60, 9, -3, 19, -46, 13, 22, -36, 7, 14, -6, -32, 10, 15, 17, -13, -6, 11, -1, 13, 
  -7, 17, -18, -5, -2, -16, 10, 8, 38, -1, -2, -12, 21, -18, 17, -22, 1, -3, 0, 12, -20, 4, 23, -31, 15, -47, -51, 24, -28, -5, -4, 0, -8, 3, -12, 6, 35, -37, -26, -23, 12, -14, -28, -1, 8, -25, 9, -34, -27, -3, -15, -3, -25, 7, 19, -30, -4, 23, 9, 0, -45, -19, -4, -11, -6, -5, 8, -20, 40, -44, -22, -2, 10, 33, -30, 4, -1, -55, 16, 8, 5, -2, -9, 16, -20, -10, 4, 3, 7, -9, -4, 24, -37, 7, 3, -5, -6, -27, -7, 28, 3, -24, -12, 0, 6, -8, -10, 15, 3, -17, 18, 0, -27, 6, -4, -4, -21, 2, 0, 0, 12, -22, 28, 17, 16, 6, -22, 8, 2, -2, -9, 12, 10, -23, -13, -13, -4, 6, -16, 6, 8, -16, -8, -45, 4, 0, -27, 1, -19, -5, 9, -8, 9, 2, 22, 30, -55, -7, -7, -1, 0, -20, -4, -11, 34, -62, -15, -15, 29, -14, -16, -14, 3, -46, -1, -6, 8, 10, -19, 18, 8, 5, 13, 3, 24, 0, 19, 19, -36, -14, -8, 21, 5, -7, -6, -9, 14, -23, -8, -22, -4, -6, -30, -10, 71, -39, 0, -21, -11, 5, -10, 47, 4, -13, 15, -20, 19, -14, 12, 23, -43, -6, 11, 42, -4, 20, 4, 2, -11, -14, 8, -26, -8, -22, 14, 7, -7, 13, -6, 0, 0, -12, -10, 12, 30, -15, -21, -11, 44, 24, 16, 2, 21, 20, 9, -8, -7, 10, 36, -12, 33, -29, 7, -5, 1, -7, -1, -1, -15, -6, 7, -39, 4, 4, 4, 30, 50, -17, 22, -5, 5, 15, -12, 1, -26, 12, -9, 16, 3, 4, 9, 0, 25, -28, 9, -57, 12, 11, -37, -14, 19, -17, 25, -25, -4, 8, -20, 43, -13, -29, 14, -1, -9, -4, 21, 31, -8, -8, 14, 13, 0, 4, 17, 8, 12, -34, -13, 6, -6, -50, 2, 14, 10, -40, 4, -34, -26, 9, -12, -15, 57, -23, -16, 18, -23, -24, 2, 3, -23, -20, -3, 22, -7, -9, -12, -7, 27, -46, 7, 1, 28, -26, -22, 5, -27, -64, -16, -12, 4, 5, 1, 15, -10, -18, 2, -4, -2, 2, -7, 22, -44, 12, 9, 43, -5, -9, -8, -15, 0, -37, -13, 1, -7, -27, 15, 5, -27, -10, 11, -9, 13, 8, 9, 5, -4, 7, -8, 0, 1, -9, -34, 38, -13, -47, -21, 3, 
  -9, -9, 4, 9, -18, -20, 4, 1, -18, -4, -5, -12, 0, 2, 7, 0, 7, 1, -7, -15, -1, -13, -7, 3, -12, -14, 8, 1, 3, -6, 4, 3, 6, -8, -4, -2, -10, -5, 6, -2, -9, -12, -3, 0, -2, -5, 6, -1, -3, -10, 8, -20, -5, -2, -6, 7, 2, -16, -14, -4, -1, 11, -12, 5, -12, -15, -1, 5, 2, 5, -6, -5, -14, -6, -10, 0, 1, 1, 8, 1, 11, 3, 3, 0, 1, -7, -10, -10, -16, 0, -10, -15, -6, 2, -5, 9, -6, -14, 5, 4, 5, -9, 7, -5, 7, -6, 4, 12, -4, -16, -1, -13, -8, -10, -3, -14, 4, -9, -7, 7, -11, 5, -1, 1, -4, 8, 2, 0, -8, -4, -12, -3, -15, 2, 7, -3, 0, -14, 4, -1, -6, -9, 7, 9, -14, -13, -4, -2, -2, 2, -13, 6, -2, -2, 3, 6, 2, -2, -2, -2, -11, -5, -9, -8, -10, 3, 2, -6, -1, -11, 1, -3, 11, -3, -5, 3, -12, -11, 1, -17, -3, -1, 2, 3, 17, -13, -10, -17, 6, -12, -9, 0, -11, 1, 3, 0, -2, -7, -6, -9, -18, -9, 2, -13, -13, -13, -7, 6, 4, -6, 4, -8, 4, -5, -8, 1, -12, 3, 7, -18, -14, 1, 9, 2, -8, -5, -3, -8, 0, -18, -2, -10, -7, 5, -4, -2, -11, 8, 0, -14, 2, 7, -2, -10, 1, -13, -20, 8, 17, 1, -7, -8, -2, -7, 10, 1, -11, -8, -8, -3, -11, -3, -1, -18, 8, -6, 5, 5, -24, -5, -6, -4, 3, -3, 2, 0, 5, 4, 4, 12, 6, -14, 3, -12, -11, -13, 4, -10, 0, 3, -2, 7, -15, -9, 0, -4, 0, 1, -17, -13, 1, -2, 0, 1, -3, 8, -2, -12, -7, 3, -11, -4, -3, -11, -12, 5, 6, 2, -7, 11, 6, -9, -1, 6, 2, -19, -2, -2, -7, -14, -15, -3, -16, -2, 0, -8, -15, -11, -13, -17, -12, -4, -14, -9, 3, 8, -10, -6, -7, 1, 8, -5, -4, -4, -2, 1, -16, -3, -2, -10, 9, 0, -13, 0, -9, 1, 8, -10, 9, -12, -9, -16, 5, 5, -16, -12, -17, 3, -14, -10, -14, -4, -11, 4, 3, -6, 2, 2, 1, -3, -8, 2, 2, 7, -13, 4, 7, 9, 7, -6, 4, -9, -1, 6, -4, 12, -4, 14, -12, 8, 7, -12, -6, 5, -12, 5, 
  -9, -22, -2, 1, -7, -28, 8, -13, 26, 13, -13, -2, 59, -26, -2, -30, 22, 1, -23, 22, -53, -5, 5, -8, 22, -11, -38, -4, -36, -12, 3, 6, 9, -27, -20, -20, 20, -13, -13, -3, 2, -13, -37, -3, 18, -38, 19, -12, 0, -21, -8, -6, -37, -3, 2, -27, 9, -8, 12, 6, -27, 9, -10, 18, -9, 6, 14, -8, -9, -17, 11, -13, -10, -6, 12, 4, -18, 8, -1, 3, -7, -29, 7, -5, 2, 17, 6, 6, -16, 19, 1, 17, 4, 25, 3, -14, -19, 11, 15, 18, -13, -20, -6, -6, 2, 26, 12, 4, -7, 21, 10, -17, -16, 18, 0, -12, 26, 4, 9, -3, -14, 2, 40, 11, -11, 29, -6, -8, 7, -5, 10, -17, 16, -30, -5, 6, -5, 5, -12, -10, -12, 8, 12, 13, -28, 10, -1, -1, -11, -1, 11, 9, -12, 20, 12, 5, 13, -2, -10, -30, 0, 1, 15, -5, 13, -21, -18, -19, -4, -11, 19, 4, 12, 5, -23, 5, -16, -9, 3, -3, 12, -26, 1, 7, 5, -10, 42, 17, 16, 4, -16, 0, 16, -13, 15, 12, 8, -27, -19, 10, -5, 6, -15, 1, 21, -1, -20, 0, -16, 13, -7, -5, 23, -9, -3, -9, -18, 22, 30, 3, -24, -10, 14, -11, 4, -21, -17, 10, 8, -15, -12, -3, -8, -5, -4, 6, 0, -19, 8, -19, -6, -11, -8, 21, 4, -12, -7, -3, -6, 13, 3, 11, 3, -10, 12, -26, -2, 12, 12, 16, 15, -24, -8, -28, 15, -41, -20, 0, -25, 10, 14, -24, -6, 11, 5, -10, 25, 16, 7, -12, -12, 9, -29, 7, -31, -8, 2, -28, 12, -25, 0, -3, 7, -25, -15, -38, 1, 17, -16, -9, -6, -25, 16, 5, -8, 20, -12, 34, -9, 1, 18, 5, 4, 24, 31, 43, -46, -50, -15, 1, -11, 4, -3, 16, 0, -23, -1, -2, -11, 6, -42, -2, 26, -8, -9, 16, 3, -8, -14, 21, -4, -12, 17, 11, -11, 17, -15, 20, -22, -18, -3, -14, 0, -26, -14, 7, 13, -16, -6, -1, 4, 0, -37, -12, 9, -33, -22, -11, 19, 9, 4, 32, 13, -17, 12, -6, -24, -2, 32, 41, -37, -16, 7, -2, -26, -23, -21, -15, -32, -4, -1, 31, -3, -13, -5, 4, -22, -31, -6, 0, 12, 4, -4, 21, -49, 2, 8, -20, 4, 29, 13, 16, -10, -24, -12, -20, 
  15, 5, -4, -11, -22, -25, 38, -43, 13, -13, -35, -19, 46, -10, -7, -48, 29, -31, -2, 41, -4, -9, 29, -34, 50, -17, 2, 16, -33, -36, -15, -15, -2, -2, 22, -16, -8, 18, 34, -22, 8, -3, -40, -21, 4, 3, 25, -2, 14, -19, 23, 25, 25, -1, -14, -41, 12, 5, -20, 9, 7, -24, 11, -6, -6, 9, 7, -10, 2, 32, 15, -18, -10, -7, 27, 25, -20, 13, 26, -13, 3, -9, 32, -2, 76, 45, -21, 4, -15, 12, -11, -12, 4, 1, 0, 2, 13, 15, 14, 2, 2, -7, 13, -30, 15, 5, 12, -10, -12, -4, 22, -4, -3, -5, -6, -17, 17, -4, 9, 22, 1, 5, 2, 7, 16, -8, 10, 7, -7, -22, -53, -9, 28, 2, -9, -2, -9, -37, -45, -6, -10, -35, 4, -36, 24, -1, -10, 5, -8, 3, 13, 5, -16, -4, 9, 23, -22, -9, -12, -5, 6, -21, -18, -3, 11, -39, -31, -11, 24, -49, 3, 11, -25, -7, 13, -34, -3, -4, -21, 6, -33, 7, 6, -5, 34, -5, 47, 50, -50, -12, 3, -27, 2, -21, 10, 9, 19, -29, -36, 9, 15, 8, -47, 12, 14, -29, 17, -45, -9, -9, -17, 16, -23, 0, 2, -35, 27, 0, 22, 38, -32, -31, -16, -11, -6, -20, -17, 19, 23, -14, -52, -5, -1, -4, -17, 10, 0, -13, -37, -43, 9, -22, -11, 49, -28, -11, -13, -9, 3, -16, -32, 6, -29, -6, -3, -15, -8, -7, 26, 0, 32, -14, -2, 6, -32, 1, -9, 15, -17, 2, -15, -27, 28, -7, -15, 4, 11, -12, -2, 0, -10, -6, -20, 9, -52, 1, 1, -39, -3, -13, -8, -13, 23, -28, -22, -20, 27, 10, -53, -6, 6, -73, -2, -29, 29, -18, -25, 27, 6, -45, 9, -9, -11, -14, -9, 39, -58, -31, -8, -8, 4, 3, -4, 10, 30, -9, -21, -24, 3, -3, -37, -10, 10, -11, -6, -33, 5, -15, 8, -8, -6, -19, -12, -5, 13, 5, -29, 8, -53, -18, 5, -20, 3, -7, -6, 0, 6, 5, 1, -7, 25, -26, -25, 21, -6, -43, -15, -12, 17, 1, -8, 32, -8, -19, 12, 22, 17, -3, -3, 36, -67, 19, -20, -7, -4, -20, -35, -16, -10, -2, 25, -10, 20, -24, -43, 7, -19, -58, -4, 20, -14, 21, -7, -6, -33, 23, 15, -1, 2, -6, -7, 27, -58, 2, -16, 0, 
  -6, -3, -4, -15, 4, -19, 16, 32, 46, -29, -27, -1, 42, -42, -19, -67, 38, 2, -8, 43, -24, -14, 9, -5, 60, -27, -27, 1, -35, -6, -9, -16, -11, -16, -2, -3, -8, 0, 6, -43, 6, 0, -9, 11, 19, -13, -4, -27, 6, -3, -8, -1, 3, -18, -5, -14, 2, 1, -1, 5, -12, -1, 7, -8, -6, -3, -4, -25, 41, 0, 8, -15, -15, -7, 12, -7, 25, 5, 0, -22, 5, -6, 11, 7, 14, 1, -3, -14, -7, -11, -7, 1, -3, 13, -1, -11, 2, 16, 11, 6, -28, -8, 3, -14, -8, 19, -4, 13, 0, -11, 8, 28, -29, -1, -7, -18, 1, -8, -9, -4, 14, 8, 20, -2, 29, 23, -3, -40, -3, -1, 0, 3, -4, -15, 8, -12, 0, 14, 18, -5, -10, 4, -4, -26, 21, -5, 8, 18, -6, 6, 10, -4, 6, 10, 6, 32, -8, -2, -3, -10, -5, -19, -21, 5, 32, -32, -25, -7, 24, -10, -11, 5, 12, -5, -10, -13, -1, 10, -14, -16, -1, -2, 0, -6, 10, 1, 8, 14, -36, -26, 2, 9, -4, -16, -9, 12, 2, -34, -5, 14, -2, -9, -30, -10, 43, -52, 0, -7, 25, -5, -8, 27, -6, -11, -15, -8, 19, 15, -19, 20, -49, -11, -6, -6, 9, -5, -30, 4, 19, -4, -8, 27, 7, -13, -5, -6, 37, 0, -8, -11, 12, -9, -17, 31, -6, -9, 5, -7, 5, -26, -13, 9, -5, 7, -4, -13, 2, 18, 17, -20, 8, 11, -2, -1, -6, -31, 16, -13, -27, 28, 4, -28, 10, 6, -10, 9, 12, 1, 2, -17, 6, -10, -34, -15, -17, 3, -1, -23, 9, 6, 3, 2, 16, -1, 2, -48, 26, 4, 8, 3, 34, 15, 6, -7, 4, 3, -10, 17, 11, 6, 16, -5, -7, -8, 22, 20, 17, 19, 7, 4, -3, 11, 21, 3, 44, -28, -10, -16, -5, -20, 1, -2, 50, 0, 16, -42, -3, -8, -18, 40, 22, 1, -1, 17, 9, -20, -8, 25, -34, -14, 2, -24, 6, -25, -19, -16, 17, -35, -7, 1, 29, -39, -22, 1, 16, -48, 9, -40, 21, 5, -16, 29, -23, -15, -2, 0, 2, -18, -17, 27, -48, -3, -3, -24, -6, -17, -22, -20, -11, -22, 9, 11, 4, -27, -17, 4, -2, -35, 1, -1, 13, -8, -17, -1, -9, -8, -15, 5, 3, -23, -41, 28, -11, 8, -11, -13, 
  15, -5, 3, -4, -59, -38, 3, -23, -42, 1, -10, 8, -40, 0, 2, 10, -12, 14, 10, -32, -6, -3, -13, -2, -25, 2, 12, -14, -8, 22, -11, 7, -4, 11, 18, 12, -48, -27, -6, -26, -33, 6, 24, -7, -58, 18, -2, 27, -51, 8, 7, -32, 20, 8, -4, -6, -8, 14, -5, -59, 29, 57, 0, 12, 0, -11, -1, 23, -37, -30, 6, -10, -19, -3, -7, 3, -47, -7, -3, -10, -18, -12, 4, -22, 12, -10, -2, -8, -20, -7, 12, -44, 11, -3, 9, 19, 9, 6, 1, 6, -28, -41, -29, -1, -10, 0, -8, -16, -54, -1, 11, -6, -43, 14, -4, 12, 19, -18, 11, -6, -12, -9, -4, -37, -8, 8, 9, 31, -1, -7, 22, 8, -28, -31, -9, -11, -15, -3, -4, 15, -7, -6, 42, -33, -25, -15, -13, 22, 5, 3, 5, -4, -13, -7, 0, -24, -23, 4, -11, 20, 7, 20, -4, -5, -35, -16, 2, -5, -38, -7, 1, 2, -41, 1, -3, -6, -48, 0, 8, -19, 5, -5, -14, -12, -24, -9, 8, -64, 2, 26, 4, -2, 4, -9, -3, 5, -24, -32, -2, -3, -16, -6, 2, -3, -38, -23, -24, -11, -12, 4, -8, -15, 26, 10, -7, 11, -29, 6, 19, -11, -16, 20, -5, 3, 11, 4, 0, 28, 1, -21, -6, -7, -12, 3, -19, -1, 20, -26, -6, -31, -27, -8, -7, -24, 38, -8, 0, 0, -17, 0, 6, 0, -7, -7, 3, 1, 4, -4, -3, 1, -51, -15, -20, 0, -13, -6, 2, 5, 0, -10, 2, -24, -26, 5, 8, -27, -11, -3, -6, 6, -14, 10, 22, -17, 5, 34, 9, 4, -4, -17, -5, 19, -23, -34, 1, -12, -19, -14, -28, -5, -37, -7, 9, -5, -24, 13, -7, -46, 0, -10, -10, 3, -29, 4, 4, -21, -15, 8, 6, 21, 10, -17, -10, -6, -36, -28, -6, -12, -12, 2, -36, 10, -20, -33, 38, -29, -15, 11, 7, -5, -3, -9, -6, -1, -1, 19, -6, -27, -11, 10, -9, 6, -7, 10, 12, 14, -24, -44, -8, -10, -25, 4, -4, -1, -48, 13, 21, 1, -31, 10, 7, -13, -3, -2, -2, -21, -17, 15, 8, -48, -1, -7, 10, 11, -7, 10, 13, 11, -45, -16, -14, 8, -16, 14, 25, 1, -31, 20, -21, 31, -52, 15, 15, -19, 38, 16, -14, -1, -19, 15, 43, -18, -2, 55, 31, 15, 
  -16, -24, 2, -12, 10, -36, 21, 6, 50, -2, -33, 8, 46, -28, -42, -4, 48, 14, -13, 71, -23, -6, 23, -34, 60, -9, -10, 46, -52, -34, -10, 5, -8, -21, -14, -11, 31, -20, -13, -43, 25, -17, -35, 7, 7, -16, -6, -38, 12, -23, -22, 18, -25, -9, 0, -11, -4, 17, 14, 33, -57, 16, -10, -21, -6, 10, -11, -39, 8, -19, 16, 10, -3, -20, 10, -6, 12, -11, -7, 8, 8, -6, 16, 18, 9, 11, -3, 0, -15, 12, 8, 9, -3, 27, -12, 14, -1, 24, 3, -18, -27, -13, -6, 1, -18, 28, 24, -9, -26, 3, 22, 24, -40, 22, 14, -21, 27, 2, 6, 3, -41, 0, 28, -5, 8, 11, -10, -37, -4, 8, -10, -1, 33, -9, 19, 18, 16, -4, 15, -26, -6, 15, -15, 2, -7, 3, -2, 8, 18, 15, -8, -21, -20, 15, -2, 14, -13, 26, -21, -39, -6, -12, 8, -11, 39, -26, -14, -10, 49, -3, -9, -3, 32, 1, 23, -5, 3, 7, 2, 1, 36, -14, 26, -4, 11, -25, 39, 19, -22, -40, -15, 19, -2, -29, 14, 1, 38, -1, -26, 10, 13, -22, -13, -1, 59, -17, 16, -12, 11, 7, -19, 31, 21, -1, -7, -15, -10, -7, 19, 15, -55, -11, -4, 12, -7, -16, -14, 10, 11, 0, 10, -5, 9, -9, 10, -2, 20, -12, -8, 2, -25, 1, 7, 32, -20, 0, 11, -1, 0, 5, -27, 35, 15, 33, -10, -31, 14, 41, 22, -21, 41, -6, 23, -22, 16, -3, 1, -8, -15, 22, -7, -16, 26, -19, -3, -6, 21, -9, 14, -10, 9, -6, -19, 19, 17, -13, -4, -35, 8, 7, 23, -14, 35, 18, -27, -52, 26, 9, 9, -13, 29, 11, -8, -6, 5, 19, 11, 26, 20, 5, 14, 0, -3, 20, 34, 39, 12, -7, -12, -19, -13, 32, 7, -4, 34, -10, -19, 1, 20, 0, -13, -8, 8, 20, -3, 27, 19, -22, -1, -6, 31, -2, -8, 11, -24, -4, 14, 25, -11, -8, 13, -38, 4, -26, -18, -20, 24, -6, 8, -30, 48, -62, 7, 0, 15, -34, -21, -30, 19, 7, -4, 57, 7, -34, -14, -7, 3, 5, 28, 31, -14, 9, 1, -26, 6, -26, -9, -29, -6, -9, 14, -22, -19, -21, -28, -6, 17, -25, -10, 17, 9, 13, -22, -3, -1, 6, -15, -6, -16, 2, 11, 38, -38, -10, -17, -17, 
  9, 11, 0, -10, 6, 22, -1, -7, -63, 40, -30, -4, -3, -11, -2, 1, -20, -19, 1, -41, -9, -8, 11, -16, -35, 31, 37, 21, 26, 1, -13, -36, -4, -1, -5, -2, -10, 3, -1, 8, 4, 28, -8, 1, 10, 16, 13, 59, -23, 13, 3, 8, -16, 5, 1, -10, -15, 20, -2, -7, -2, -1, 5, -20, -10, -7, 4, 4, -6, 28, 16, 36, 34, 32, 19, 6, 31, 3, 30, 20, -9, 0, -14, -27, -14, -1, 7, 1, -13, 11, -11, 18, -12, -1, 6, -2, -7, -7, -3, 0, -11, 2, -12, 11, 19, -5, 8, 4, 1, 4, -1, 0, 5, -6, -6, 9, -18, 11, -10, 17, -28, -11, -41, 6, -2, -15, 7, -11, -1, -16, 13, -6, 6, -9, -13, 19, 0, 5, -10, 16, 28, -6, 57, 0, 13, 5, 0, 30, -22, -2, 5, -11, 10, -10, -2, 22, -8, -9, -1, -19, 6, 6, 2, -4, 3, -3, 6, -3, 28, 15, 2, 0, 14, -8, 40, 7, 5, 2, 3, -6, -13, 4, -21, -11, -12, 19, 9, 33, 5, 5, -1, -11, -9, 1, 12, 5, 13, 22, 31, 42, -12, 11, -10, -2, 1, 4, 10, -6, 21, -15, -9, -12, 6, -11, -26, -9, 11, -10, 40, -6, 2, -5, 9, -7, -12, -4, 1, 3, 10, -11, -10, 32, 28, 41, 11, -1, 21, -4, 15, 1, -17, -5, -16, -19, -31, 8, -23, 7, -4, 1, 4, 1, -9, -4, -5, 12, -4, -2, 4, 0, 2, 9, -6, 74, 8, 25, -8, 7, -6, -17, 2, 19, -34, -6, 7, -21, -14, -5, 10, -15, -38, 0, 22, 17, 1, 0, 12, -19, 2, -16, -2, -5, -22, 10, 0, 59, -11, 33, 1, 9, 6, -3, 1, 42, -29, -2, 5, -15, 14, -3, -3, 2, -25, 3, 17, 2, -19, 5, -11, -9, -12, -8, -3, 0, -50, -9, -11, 56, -44, 15, -8, 1, -50, 6, 23, 20, -93, -6, -17, -45, -43, 29, -2, -10, -42, 1, 3, -44, -9, 2, -6, -13, -11, 24, 3, 6, -18, 3, -3, 23, -24, 62, 6, 3, -30, 36, 1, 8, -42, -5, -14, -35, -35, 38, 3, 6, -19, 41, -43, -23, -2, -5, 2, -10, 6, 15, 15, -2, 2, -9, 8, 47, -11, 23, -13, -10, -18, 40, -17, 14, -56, 7, 18, -27, 32, 9, -3, -1, -4, 8, 0, -17, 7, 4, -10, 10, 
  -1, -14, -5, -9, -13, -3, 6, -3, 4, -14, -13, -11, -7, -18, -8, -11, -7, -9, -13, -1, 5, -13, 8, 2, -5, -5, 2, 4, 3, 6, 0, 7, 2, -2, 4, -2, 5, -22, -14, -5, 1, -13, -11, 5, -7, -1, -1, -8, -20, -6, 4, -6, -5, -3, 2, -11, -8, 5, -13, -13, 2, -11, 1, 1, -7, -4, -13, -2, -8, -7, 6, -4, 10, -1, -2, 2, -7, -7, -2, 1, -26, 3, -13, 4, -2, 3, -11, -2, 2, 7, -1, 10, -12, 1, -14, -11, -7, -2, -3, -11, -10, -17, -12, -6, -12, -5, -4, -5, -12, -2, -6, -10, -9, -3, -6, 2, -5, 3, 1, -1, 6, 8, -11, -10, -15, 8, -3, 3, -6, -4, -1, 0, -13, -5, 6, 5, -22, -9, -6, -11, -11, -13, 4, -5, -14, 6, -1, -9, 0, -3, -8, -10, -9, 7, -6, -1, -12, -6, -1, 2, 5, -7, -2, -5, -12, -14, -14, -8, -9, -1, -3, -3, 0, -16, -7, -15, -24, -9, 3, -2, 8, -3, -7, -7, -11, 6, 3, 0, -13, 5, -9, -8, -12, -3, 7, -11, -13, -4, -9, -8, -6, -14, -4, 5, -7, -15, -3, 1, -10, 7, 8, -11, 3, 2, -8, 0, -13, -6, -15, 6, -19, -11, -5, -8, -7, -1, 0, -3, -5, -6, -7, -11, -12, 5, 7, -3, 4, -16, 8, -14, -6, 0, 4, 8, -5, 6, -14, -3, -13, -13, 5, -2, -15, -4, -5, 3, 2, -13, 2, 7, -7, -12, 5, 3, -4, -8, -2, 10, 5, -8, 0, 2, -1, -6, 0, -3, 7, -7, -3, -10, 6, -1, 7, 3, -19, 4, -14, 1, 5, -7, 0, -5, -11, -22, -14, -8, 1, -6, 7, 7, -9, -17, -4, -9, -28, -3, 6, -8, 7, -4, -10, 8, -1, 7, -7, 5, -12, 2, 5, -8, 3, -10, -4, -5, -3, -20, -8, -14, 0, 2, 3, 4, 7, -17, 0, 6, -4, -2, 6, -1, -6, -13, -3, -7, -14, -14, 4, -1, -13, -6, 2, 1, 1, 3, 8, -10, -6, -5, 0, -8, -9, -2, 5, 10, 3, -8, 4, 4, -10, -1, 7, -9, -8, -4, 8, -6, -6, -2, -12, -11, -9, 7, -9, -11, -2, -8, 5, -11, -21, -15, -10, -1, -5, 8, -8, 6, -6, -7, 12, -10, -14, 7, -9, -10, 6, -9, -2, -9, -2, -4, -6, -17, -1, -6, -12, 0, 
  19, -11, -3, -8, -18, -11, -2, -16, -14, -6, -11, 2, 15, -12, -3, -11, -8, 18, -5, -32, 11, -12, -7, -15, 5, 4, 8, -16, -5, -8, -1, -14, -12, 3, 19, 9, -7, -7, 20, -34, -8, 12, 15, 9, -48, -8, 1, 10, -19, 19, 12, -11, 3, 3, 10, -6, -7, -1, -2, -14, -15, 6, -12, 19, 11, 20, 9, 11, -38, -6, 1, -12, -11, -7, -1, -1, -33, -4, 4, 14, -7, -1, 13, -20, 12, 17, -2, -15, -1, 20, 25, -21, 9, -14, -10, -1, 1, 7, -3, 11, -26, -21, 1, -3, -7, 1, 7, 1, -36, -9, 3, -2, -23, 1, 6, -35, -4, 13, 11, 5, -2, 13, -4, -27, -8, -10, -5, 2, -6, -15, 13, 4, -30, -2, -6, -3, -10, 5, -4, -1, 16, -9, 16, 1, -20, -12, -18, 13, 3, 0, -4, -14, 6, -1, -6, -13, -14, 19, -1, 16, -3, 17, -2, 0, -23, -22, 1, -8, -33, -3, 18, -2, -56, -12, -6, -2, -36, -9, 1, -31, 6, 4, -11, 0, -28, -3, 8, -39, -12, 13, -6, 19, 12, -5, 2, 2, -12, -27, -1, -21, -18, 8, -12, 2, -43, -19, -4, -26, -18, -12, -1, -23, 12, 10, -1, -4, -29, 12, 1, -18, -12, 20, -13, -9, 8, 21, -10, 22, -1, -27, -6, -16, 0, 0, 7, 1, 37, -1, 3, 11, -23, 0, 4, -19, 12, 18, -13, -9, 2, 12, -6, -7, 0, 4, -10, -20, -8, -20, -7, 13, -8, -13, -13, -17, -12, -5, 7, -3, 26, -9, -11, -21, -16, 8, -5, -3, 0, -12, -1, -7, -7, 0, -1, -10, 11, 22, -6, -16, -6, -3, -17, -8, -13, -11, 5, -21, -13, -17, 2, 9, -24, 0, 24, 3, -5, 3, 13, -33, -19, -4, -3, -15, -16, -8, 7, -11, -11, 2, -2, -5, 2, -15, -20, 4, -9, -28, 5, 2, -8, 1, -7, -4, 15, -35, 33, -1, -4, -5, 3, -8, -23, 1, -3, -18, -12, 3, -6, -17, -8, 7, -4, -14, 12, 6, -2, -8, -3, -23, -13, -19, -5, 7, -15, 10, -20, -8, 30, -7, -28, 7, -3, -6, 13, 10, 15, -20, 10, 1, -8, -9, -5, -7, -8, -11, -8, 8, 21, 13, -14, -5, 3, 4, 3, 7, 15, 10, -29, 19, -14, 25, -25, 32, 17, -17, 24, 16, -1, -13, -6, 10, 17, -24, 28, 28, 15, 3, 
  -6, -2, 1, -8, 4, -19, 10, -27, 17, 1, 10, 2, -10, -27, -10, -10, 7, -7, -9, -14, -18, -28, -19, -4, -8, -16, -1, -24, -15, -14, -11, 2, -1, -9, -11, 1, 28, -15, 1, -1, -3, -6, -15, 3, 9, -22, -4, 3, -29, -15, 2, -1, -29, -14, 25, -19, -14, 4, 7, 12, -8, -3, -9, 2, 5, 14, 29, -9, -1, -23, 16, -14, -8, -23, 14, 0, -22, 3, -5, -27, -7, -9, -11, -26, -13, 11, -13, 4, -39, -14, -5, -18, -13, -19, -10, -13, -1, -14, 3, -4, 13, 6, 1, -15, -5, -4, -10, -1, 1, -26, 8, -43, -17, -8, -14, 11, -37, -11, 23, -8, -2, -11, -13, -8, -30, -24, -3, 0, 2, -54, -26, -5, 16, -26, 1, -5, -2, 16, -56, -1, 4, -57, 1, -36, -6, 0, -18, -8, -22, -15, 14, 2, -27, 0, -14, -15, -18, -47, -8, -12, -3, -13, -46, 10, 24, -1, -1, -35, -7, -4, -16, -1, 33, -49, -10, -45, 4, -3, 0, -3, -16, -23, -3, -21, -13, 3, -22, 1, -20, -54, -3, -3, -1, 1, -11, -3, -25, 38, -4, -28, -25, -8, 0, 5, 5, 2, 3, 21, 10, 31, 33, 13, -28, -14, -11, -19, -10, 6, -10, -5, -1, -11, 5, 24, 10, 32, 5, -9, -49, 14, 47, -21, -21, 23, 46, 7, 2, 43, 9, 34, -43, -1, 21, -26, 15, 18, -5, -4, -35, 19, -6, -19, 25, 41, 5, -1, -6, 9, 40, 0, 17, 7, -4, -16, -18, -18, -19, 3, -10, -30, 7, -45, -20, 2, 0, -9, 61, -15, -13, 6, -28, -9, -9, -20, -18, -15, 1, -5, 9, -46, -36, -3, -12, -11, -6, -10, -6, 3, -22, 0, 19, -13, 7, -8, -1, 7, 4, 21, -28, 5, 50, 3, -12, -20, 17, 4, -38, 4, -11, -6, 1, 1, -7, 2, -30, -5, -2, -21, -32, -8, -15, -6, 10, -21, -9, 10, -7, 15, -8, 2, -8, -10, 2, 7, -18, -7, -12, 11, -32, -44, 4, 33, -13, 14, 11, 8, 8, -17, 21, -14, -1, 4, -6, -3, -4, 4, 4, -18, -28, 3, -19, -22, -12, 0, -13, -16, -35, -7, 14, -35, 34, -3, 2, 28, -10, -3, -5, 7, -42, -5, -3, 1, -28, -16, 8, 1, 17, 11, 2, 4, -24, -2, 11, -15, -17, 0, -24, 3, -6, -25, -4, 28, 48, 3, 1, -4, 
  0, 8, 3, -9, -29, -7, -5, -14, -21, 5, 12, 0, -19, -6, -10, 10, -26, 14, 3, -28, 9, -1, -4, -7, -20, 6, 6, -33, 7, 26, -10, -20, 5, -11, -3, -14, -32, -8, 13, 6, -9, 7, -15, -7, -28, -7, 4, 5, -32, 6, 6, -14, 11, 11, 7, -3, -8, 11, -7, -24, -11, -7, -11, -3, 9, 13, 1, 13, -16, -10, -16, -12, -33, 26, -17, 7, -21, -16, -20, 4, -7, -11, 13, 1, 10, 2, -6, -12, -8, 7, 7, -30, -3, 2, -2, -15, 1, -2, -2, 1, 4, 2, -3, -2, 1, 16, -2, 2, -1, -2, 3, -21, -16, -17, -10, -5, 0, 4, -4, -7, 7, -7, -11, -3, -17, -6, 12, -22, 3, -11, 6, -8, -31, -1, -4, 4, -16, 7, -21, -4, -15, 0, 18, 14, -27, -5, -12, 12, -9, -14, -7, -10, 8, 1, 7, -22, 0, 5, 9, -7, -1, 1, 3, 17, -29, -9, -15, 6, -43, 8, -3, 11, -43, -7, 12, -5, -20, 1, 12, -1, 7, 2, -8, -11, -22, 0, -8, -22, 1, -3, -10, 15, 12, -8, 12, -12, -32, -19, 0, -26, -10, 33, -1, 5, -38, -15, 9, -11, -20, -17, 10, -18, 16, -7, -5, -13, -26, 8, 5, -35, 5, 17, -5, -20, 2, 17, -1, 7, -4, -9, -6, -4, -25, 8, 2, -16, -20, -7, -1, -1, -33, -22, -2, -4, 3, 11, -3, -9, -14, 26, 8, -26, 5, 2, -15, -12, -12, 5, 5, 31, 8, -1, 10, -8, -12, 19, -6, 7, 1, -3, -5, -12, -3, -4, -3, -6, 22, -9, -4, -2, -13, 13, 2, -12, -9, -5, -6, -12, 6, -11, 11, 0, 7, -18, -3, -7, -1, -2, -9, 3, -25, 5, 16, 8, -6, -11, 10, -4, 4, -14, 8, 9, -5, 13, 9, -26, -1, -16, 12, 1, 4, -7, 1, -1, -20, -10, -4, -12, -22, 31, -4, 6, -25, -29, 48, 6, -15, -6, -11, 11, -12, -16, -8, -16, -2, 13, 1, -6, -9, -1, 3, -11, 12, 5, 16, 13, -8, -14, -11, -6, -17, -11, -24, 3, -26, 9, 22, 6, -24, -4, -6, -5, 8, 8, 9, 2, -32, 14, -10, -20, -2, 16, -13, -7, 1, -12, 10, 12, -3, -4, -2, -11, -22, 33, -19, 3, -42, 11, -2, 29, -18, 30, 3, -13, 21, 35, 4, -13, -24, 17, 15, -21, 17, -4, 20, -7, 
  2, 5, 5, -8, -3, -7, 10, -26, 12, -7, 0, 3, 33, -29, -3, -37, 59, 7, -9, 38, -40, -22, 10, -26, 22, -3, -16, 9, -18, -23, -3, 20, -8, 0, -8, -14, -3, -16, 0, -44, 23, -2, -52, 2, 25, -26, 29, 6, 17, -2, 9, 10, -29, -14, 26, -6, 18, -3, 4, 26, -2, -2, -7, 11, -6, 10, 18, -22, 22, -1, -10, 6, -5, 10, 10, -3, -22, 15, -5, -11, -37, 0, -9, 10, 8, 20, 9, -1, -22, 26, 6, 7, -4, 34, 7, 26, 3, 2, 10, 4, 2, -14, -17, -2, 13, -6, 30, 8, -35, -12, 0, -9, -23, 4, -12, -18, -1, -8, 16, 7, -12, 9, 9, -13, -20, -18, 2, -24, 1, -23, -7, 0, 35, -24, -9, -17, 17, -21, -30, -4, 38, -47, -14, -39, 12, -17, -8, 4, -27, -12, 18, -8, 19, 12, -16, 48, -52, -4, -6, -8, 6, -32, -13, -7, 40, -4, 0, 6, 18, 6, -7, 3, 8, -25, 13, -26, 21, -5, -7, 10, -7, 6, 18, 0, -12, 12, -7, 3, -26, -8, 6, -2, 12, -7, -5, 6, -3, 8, -21, 15, -4, 4, -14, 1, 3, -14, 9, 29, -9, 7, -1, -9, -20, 4, -21, 2, -38, 4, 4, -4, -22, 10, 11, 13, -3, -14, 0, -15, -7, -6, 12, 15, 5, -4, 22, -10, 10, 10, 36, -5, -18, -27, 1, 0, 4, -15, -5, 1, 23, 3, 7, -14, 20, 35, 1, -12, 0, 17, 24, -16, 18, -18, 0, 7, -7, -3, 1, 4, -54, -5, 8, -36, 15, 6, 14, -13, 17, -6, 23, -29, -5, -4, 8, -1, -13, -37, 6, 0, -1, -23, -12, -19, 15, -42, 7, -59, 22, 13, -9, 4, 23, -29, 3, -28, 12, -10, 5, 43, -30, -2, 10, -13, 8, 6, 8, 19, -35, -2, -11, 19, -15, -5, -8, -2, 25, -32, 5, -7, -17, -32, -1, 7, -3, -14, 43, -28, 1, -6, -16, 5, 9, -18, -13, -12, -5, -2, 13, 21, -23, -10, -12, 0, -7, -1, -4, -5, 21, -35, 5, -32, 9, -33, -14, 3, -1, -35, -5, -30, 2, 10, -15, 9, -9, -6, 18, 0, -22, 10, 4, 21, 1, -9, -24, 8, 20, -6, -20, -16, -17, 14, 10, -9, -4, -26, -17, 7, -39, 1, -7, 21, -2, -6, 13, 5, -19, 7, -1, -6, -11, -1, -5, 33, 18, -52, -23, -10, 
  7, -3, 1, -1, -5, -1, -5, -1, 0, -4, 6, -5, -11, -11, 0, 6, 1, 9, -7, 0, -3, 6, -9, -3, 7, -9, 1, -27, -10, -5, -8, 1, 3, 11, -1, -10, -8, -1, 2, -10, 2, -2, 9, 11, -15, 1, 11, 1, -6, 11, -8, -13, -2, 10, -7, -1, 8, -7, 10, -3, -3, -2, -1, -5, -8, 6, 5, -2, -11, -13, -8, -7, -8, 10, -10, 2, -26, 2, 1, -3, 3, -4, -2, -12, -9, 7, -10, -11, 8, 8, -4, -6, 7, -1, 2, -14, 7, 3, -9, 12, -11, 3, -1, -4, -6, -3, -2, 6, -5, -10, -21, 0, 2, 7, -5, -16, -6, -5, 11, -3, 5, -5, 2, -8, 2, -14, 9, -1, 6, -2, 1, -4, -8, -4, -9, -10, -6, 3, 7, 8, -3, -5, 5, 0, 4, -4, 6, 0, 7, -2, -4, 0, 7, -12, 7, -2, -13, -6, 3, 5, -4, 8, 0, -9, -6, 3, 5, -8, 2, -4, 8, 9, -14, -12, 14, -13, -7, -4, -8, -5, -6, 1, -6, 3, -5, -1, 6, -21, -2, -8, -6, -5, -2, 3, -10, -5, -5, 3, -10, -10, -7, -7, 3, 8, -10, 9, -8, -5, -9, 8, 2, -13, 11, -6, 6, 5, 9, -4, 1, -8, -3, -5, 5, -2, -8, 6, -8, 0, -7, -1, -11, 2, 3, 0, 5, -2, 0, 1, -5, -7, -17, 1, -8, 6, 3, -10, 6, 0, -5, -1, 12, -3, -8, 6, -15, 7, -7, 4, -2, -11, 2, -11, -1, -3, 7, -2, -5, 13, 12, -10, -5, 0, -11, 0, -11, 7, -4, 5, 2, -17, -5, -1, -5, 13, 5, 11, -1, -9, -2, 0, -11, 0, -9, -13, 1, 0, -7, -10, -7, -8, -4, 11, 4, 3, -10, -1, 10, 4, 6, 9, 4, -8, 11, -2, 6, -6, 1, -5, 1, 2, 6, -13, 8, -1, -8, -10, -10, -6, -3, 9, -10, 8, 9, 4, 0, -2, -8, 1, 0, -2, 1, 6, -2, -1, -13, -1, 5, -8, 1, -7, 3, 0, 7, 1, 7, -1, 8, 5, 6, -5, -15, 0, 3, -9, -13, 3, -4, -1, -17, 2, -2, -4, 3, -1, -2, -18, 7, -6, -11, -26, -4, 3, -5, -9, 8, 7, -7, -6, 1, -3, -8, 0, -2, -1, 10, 15, -13, -1, -2, -5, -14, 13, 2, -11, 9, 3, -4, -13, -12, 3, 9, -15, 14, -4, -10, 1, 
  13, -10, 1, 2, -16, -29, -6, 10, -16, -3, -10, 1, -25, -33, 4, -23, -28, 0, 10, -5, -1, -2, -7, -15, -23, 15, 14, -2, -17, 17, 5, -25, 5, -2, 7, -2, -22, -30, -2, 36, -10, -1, -9, -6, -37, -10, 0, -6, -32, -8, 7, -30, -6, 14, 11, -17, -16, 6, 10, -20, -4, 5, -9, -7, 7, 5, -8, 7, -3, -14, -8, 10, -1, 12, -7, -4, -6, -12, 7, -3, -14, 1, -10, -20, 4, -17, 9, -9, 7, -6, -1, 4, 2, -8, -2, -3, -6, 6, -1, -10, -12, -3, -10, 21, -12, 7, -9, -17, -47, 4, -10, -12, -38, 18, -1, -9, 0, 3, 7, -9, -5, 6, 5, -11, -2, 12, 6, 8, -10, 3, 13, -17, -30, -11, -14, 59, -29, -4, -9, 10, -19, -3, 25, -7, -27, 2, -4, -16, 4, 6, 8, -4, -16, -4, 6, -18, -12, 24, -3, 20, -1, -9, 2, 9, -41, -5, 7, 59, -23, -5, 1, -2, -60, -14, 13, -2, -13, 6, 3, -17, -8, 1, 0, -8, -19, -10, -1, -34, 4, 23, -6, 32, 5, -5, 9, -9, -21, -23, -13, 35, -4, 7, 5, -5, -29, -2, 9, -25, -19, 0, 11, -19, -3, 4, 12, -5, -3, 5, 12, -20, 11, 15, -3, -12, 10, -7, -9, 17, -11, -12, -8, 30, -11, -4, 1, 0, -26, -21, -15, -8, -19, -1, 2, -28, 9, 15, 2, -2, -20, -2, -1, -23, -2, -5, -6, -1, 1, -15, -6, 8, -32, -21, -3, 29, -16, 5, -3, 0, -27, -28, -11, -9, -17, 9, -6, -7, 5, -20, 2, 6, -3, 0, 18, -10, -10, 23, 0, -30, -9, 2, -17, -2, 2, -2, 8, 85, -4, -7, -8, -7, -58, 2, 9, 1, -21, 2, 6, -21, 8, -3, 8, -3, -6, -4, 11, -24, -20, -7, 9, -3, 9, -20, -13, 6, -20, -27, -9, 57, 3, 9, -22, 8, -29, -31, 20, -6, -25, 9, 5, -14, 1, -6, 11, -2, -6, 8, -5, -14, -18, -7, -1, -20, 2, 12, -11, 14, -4, -13, -9, 62, -12, 8, -8, 9, -20, 4, 4, -12, 2, -4, -6, -16, 12, 3, 3, -6, -11, -9, -7, -16, -17, -19, 1, -32, 8, -1, 9, 20, -3, -6, 3, 23, 8, 1, -19, -3, -7, 2, -19, 7, -11, 10, 22, -13, 13, 6, -11, -13, -7, -4, 10, 2, -8, 29, 20, 20, 
  -10, -12, -10, -1, -18, -4, -4, -5, -5, -7, 5, -7, -8, 4, 5, -14, -5, 9, -3, -6, 5, -3, -16, -10, -18, 0, -8, 1, -2, 0, -3, -2, 0, 2, -17, 7, -7, -2, -8, 6, -14, -11, -10, -9, -29, -14, 2, 10, 3, 7, 3, -35, -14, 3, 8, -3, -1, 7, 5, -2, 4, -8, -10, 1, 1, 12, -14, 8, -26, -7, 7, 7, -33, -3, 8, -4, -16, -7, 9, -2, -19, -2, -10, -12, 4, 1, -6, -4, -18, 2, 4, -15, 1, -8, 8, 5, -9, -6, -8, 7, 7, -2, 6, 9, 4, 6, 4, 12, -19, 4, -6, -2, -12, -10, -2, 27, -14, -8, -12, 5, -12, 10, 2, 24, 2, -13, -2, 1, -12, -12, 3, -12, -4, -11, -7, -16, 4, 2, -5, -6, 5, -6, -8, -26, -5, 4, -13, 33, 3, 4, 5, 3, 6, -1, 0, 34, -6, 2, -11, 14, -9, -15, -6, 6, 1, 5, -12, -21, -5, -9, -4, -5, -9, -8, -4, 7, -4, -13, -2, 12, 5, -20, 1, -5, -10, -9, -4, -7, -7, -7, -7, 4, -6, -13, -13, 2, -26, -1, 4, -4, -4, 7, -7, -6, 8, -12, -2, 1, -20, 8, 3, 2, 6, -3, -15, -1, 2, 3, 2, -11, -9, 4, 2, 0, -11, -17, 5, -1, -31, -4, 6, -5, -22, -9, -12, -1, 5, -12, -3, -13, -10, -5, 6, -14, -6, -1, 8, -12, -2, 0, 8, -14, -4, -9, 8, -1, -2, -7, 2, 1, 13, -3, -4, -7, 3, 2, -10, 5, -19, -5, 4, 3, -5, 7, 5, -24, -14, -4, 12, -18, -7, 5, -3, 23, -10, -5, -8, 11, -3, 6, -3, -12, -19, 5, -11, -10, -12, -1, -3, -9, 1, 3, -4, 6, -16, -2, 4, -20, 0, -12, 1, -14, -10, 4, -10, -14, -9, -19, -13, 3, 1, -10, -4, -7, 7, -12, -4, -12, -30, -14, 7, 5, -1, -2, 8, 3, 6, -7, 0, -18, -9, -9, -8, 0, 3, 5, 2, 3, -11, -6, 2, 0, -11, 4, -10, 3, -9, -10, 4, -23, -11, 4, -9, 6, -5, 4, -1, -12, 12, -13, -7, -36, 3, 5, -6, 2, -1, -6, 2, 0, -1, -10, 2, -15, 1, -3, 0, -2, -10, -10, 7, -20, -14, -5, 3, -14, -5, -8, 11, -5, 8, -5, -10, -34, 2, 7, -7, -26, -10, -1, -12, 1, 5, 7, -3, -6, 
  19, -7, 22, -6, -37, -29, 22, 11, -27, -12, 1, 12, -27, -16, 7, -19, -39, 19, -3, -10, 23, 2, 18, -19, -30, 10, 8, -29, 13, 10, 1, -16, 5, 9, -5, -7, -41, -30, 12, 23, 1, 7, 46, 9, -51, 33, 4, -7, -41, -6, 2, -49, 24, 34, 9, -19, 5, 4, 15, -13, 18, 20, 4, 1, -2, -10, 33, -1, -29, -30, 36, 41, -17, -10, -5, 5, -45, -3, -6, -15, -24, -15, -4, -23, 6, -19, -6, -17, -4, 4, -6, -26, 9, 5, 6, 28, -8, 0, 4, -7, 18, -35, -2, 30, -10, -17, 7, 6, -25, 10, -8, -22, -2, -1, 7, 2, 1, 12, 2, 11, -8, -15, -20, -7, -30, 2, 9, 6, -11, -8, 25, -13, -32, -21, 0, 35, -23, 12, 8, 12, -20, -19, 36, -11, -42, 1, 13, -3, -11, -16, -12, -8, 2, 1, 11, -37, 3, 27, 1, 19, 2, 20, 7, -1, -69, -31, 14, 75, -56, 4, 9, 5, -69, 15, 15, 7, -53, -13, 9, -39, -8, 24, -9, 4, -17, 6, -9, -44, -13, 8, -10, 1, -2, -4, -5, -11, -26, -25, 4, 16, -18, 9, 28, -3, -45, -2, -6, -19, -22, -12, -10, -19, -4, 17, -3, 8, -17, 0, 8, -23, 20, 14, -9, 3, 0, 22, 19, 0, -41, -19, 14, -8, -16, 1, -6, 16, -10, -23, 1, -22, -29, -1, 7, -36, 14, 15, -8, 15, -24, -11, -1, -25, 7, 17, 5, 7, -11, -4, 4, 3, -48, -36, 9, 54, -15, 20, 21, 13, -20, -22, 4, 12, -39, 4, 6, -27, 7, -1, -9, 10, -22, 2, 22, -29, 10, -2, 7, -9, -10, -16, 20, -4, -14, -20, 11, 18, -33, -13, -17, -6, -72, -7, 20, -1, -3, 21, 6, -30, -3, -7, -3, -9, -28, 9, -9, -24, -26, -17, 8, -13, 0, -19, -13, -7, -4, -13, -2, 48, -11, -14, -18, -3, -31, -39, 32, 0, -32, 6, 11, 13, 16, 4, -8, -7, 2, 17, -5, -20, -22, 19, 16, 4, 13, 0, -17, 1, -29, -35, -9, 84, -50, 10, -4, 0, -54, 2, 6, -26, -43, -23, -4, -20, 11, 1, -2, -22, -9, 0, -8, -57, -29, 13, -11, -23, -11, 13, 29, 5, -26, 0, -1, 28, -15, 18, 23, 15, -51, 11, -17, 6, -44, 14, 19, -52, 22, 10, 0, -1, 0, 4, 27, -22, -7, 60, 22, 7, 
  15, 4, -3, -4, -49, -40, 1, 55, -23, 12, -12, -3, -30, -12, 1, -16, -29, 24, -4, -55, 8, 12, 10, -2, -42, 5, -9, -25, -19, 29, -23, -15, 10, 3, -5, 0, -29, -31, 8, 65, 1, 0, 17, 8, -63, 3, -17, -9, -59, -8, 11, -42, -1, 20, 3, -2, 0, 2, -12, -48, -12, 15, -5, 50, 9, 2, -12, -12, -18, -31, -3, 23, -15, 5, 8, 3, -71, -22, -9, -1, -38, -17, -2, -30, -16, -2, -4, -13, -12, -6, -21, -40, 19, 13, -4, 52, -5, 11, 9, -7, -17, -23, 11, 41, -15, 4, 4, -5, -69, -6, 1, -18, -41, -8, 5, -44, -7, 5, 19, -1, -8, -10, -4, -51, -20, -2, 9, 61, 0, -16, 31, -9, 14, -19, -11, 40, -11, 12, -27, 22, 2, -30, 30, -9, -23, -16, -2, -25, 13, 9, 14, -6, -18, -1, -15, -13, -32, -2, -1, 33, 0, 12, -5, 5, -29, -12, -5, 30, -21, 9, 14, 6, -46, -7, -3, -14, -31, 0, 4, -20, 4, -2, 1, -20, -16, 8, -3, -34, -11, 3, -12, 67, -7, 3, 2, -5, -15, -32, 5, 27, -8, 9, -1, 3, -15, -18, 8, -8, -15, -5, 11, 9, 28, 3, 8, -7, 1, -6, 13, 11, 0, 0, 4, 6, 5, 22, -11, 4, -7, -25, -1, 67, -3, -11, -9, -4, 5, -36, 35, -19, -8, 1, 3, -30, 26, 4, 6, -6, -20, 4, -5, -33, -10, -28, -5, 5, -7, 13, -18, -20, -27, -7, -1, 70, -8, -11, 2, 0, -36, -1, 2, -10, -19, 2, -1, -10, 4, -3, 12, 7, -23, 6, 4, -27, -15, 14, -6, 51, 11, -19, -23, -22, -18, -29, -8, 77, -14, -16, -16, -5, -54, -5, 26, -15, -21, 9, 4, -39, -7, 2, -1, -10, 8, -5, -28, -28, -12, -16, -10, 34, 2, -22, 9, -4, -3, -22, -13, 16, 2, 12, -23, -1, -10, -31, 16, -19, -13, 6, -17, -3, 5, -3, 1, 4, -11, 8, -21, 3, -21, 22, 13, 38, 2, 9, 3, 7, -21, -44, -6, 47, -21, 6, -8, -1, -25, -11, -1, 8, -36, -5, 7, -5, 3, 10, 9, -23, -19, 7, -10, -28, -25, 0, -8, 21, -6, -5, 25, 11, -10, -30, -17, 27, 5, -4, -19, 2, -1, 34, 8, 21, -36, 20, -1, -24, 8, 16, -6, -9, -15, -2, 31, -20, 6, 11, 18, 12, 
  -10, -31, -27, 1, 3, -3, -11, -30, 16, -44, -28, -6, 6, -33, 29, -2, -7, 9, -6, 33, -20, -25, 11, -7, 33, -25, -29, -11, -40, -35, 4, 29, -30, -15, -17, 5, -11, -4, -9, -37, -23, -25, -3, 16, -21, -22, 19, -32, 9, 7, 10, 1, -14, -6, -5, -35, -10, -17, -1, -13, -30, -6, 1, 32, -20, -14, -25, 12, 0, -30, -21, -42, 12, -11, -3, -6, 2, -37, 12, -32, -39, -10, -26, -35, -21, -14, -1, -3, -20, -15, -12, -7, -35, -64, -13, 15, -9, -11, -30, -25, -31, -12, 0, 3, 1, -5, -47, 5, 7, -31, -5, -13, 2, -9, -4, 16, -9, -4, 6, -5, -20, -7, -5, 29, 4, 0, 3, 12, 14, 33, 12, 18, 10, -7, 7, 3, 1, -13, -10, -8, 24, 2, 10, -11, -17, 16, 4, -9, 9, 19, 12, -2, -31, -10, 26, -3, -11, -8, 5, 21, -14, -19, 14, -29, 22, -21, -14, -38, 15, -25, -24, -6, 10, -43, 3, -13, -24, -15, -9, -5, 17, -3, -3, -16, 10, -14, 0, 18, -48, -36, 1, 1, 0, -24, -2, -14, 10, -1, -28, 0, -2, -46, -38, -4, 40, -28, 12, -33, -39, 0, -27, 13, 7, -39, -3, -8, -15, -8, 1, 20, -42, 10, 0, 10, -8, -1, 12, -13, 8, -34, -4, -8, -8, -29, -36, 1, 2, 6, 25, 3, -26, -13, -28, 22, -9, -4, 1, -10, 3, -8, 3, -6, 10, -9, -2, -4, -11, 9, 5, 9, -20, -10, 6, 4, -8, -26, -7, -1, -48, 14, 11, 9, -26, 8, 5, -5, 3, 26, -25, 3, -31, 0, 0, -36, -8, 3, 2, 22, -2, -5, 17, 6, -25, -5, 3, -4, -18, -27, -9, 3, -10, 8, 17, 17, -24, -4, -6, -24, 4, -11, -18, 2, -32, 14, 56, -28, -3, 11, 17, 9, 4, 20, 20, 19, -13, -50, -28, -15, -10, -11, -14, 4, -35, -28, -2, -21, -51, -6, -6, -24, 3, -4, -26, -7, -81, 4, 46, -2, -26, 10, 6, -2, -25, -48, -39, -7, -14, -26, -16, 14, -1, -18, -36, -12, -15, -60, 16, -34, -19, -1, -24, 2, -37, -19, 6, -9, -8, -34, 9, 7, -63, -23, -2, 8, -7, -50, -42, 6, 16, -29, -8, 22, -18, 8, -7, -6, -6, -53, 9, 27, -16, -11, 1, 5, -48, 8, 31, -6, 3, 21, -39, 12, -19, -25, -19, -1, 
  -13, -15, 0, -2, -8, -21, 4, 5, 2, -5, 1, 1, -5, -7, 3, -5, -15, -13, -11, -12, -13, -19, -6, -1, -6, -14, 10, 5, -5, -6, -12, -8, 9, -6, -13, -6, -2, -10, -13, -8, -3, -4, -5, -10, 7, 13, -6, -2, -3, 0, 8, -2, 1, 1, 2, 11, -9, 5, 7, -10, -7, -3, 4, -4, 13, 0, 3, -5, -1, -3, -12, -3, -13, 3, 2, 0, -10, -11, -10, -7, -14, -3, -9, 3, -4, 9, 5, 0, 11, 4, 11, -10, 8, -11, -11, -3, -8, -5, -12, 5, -6, -8, 5, -11, -3, 1, -13, 4, -4, -7, 0, -4, 0, 7, -6, 1, -1, 6, -1, -3, -16, -1, -6, 3, -7, -10, 6, -5, 1, 7, -3, 0, 3, -14, 3, 0, -6, -8, -14, -1, -5, -14, 11, -2, 1, 2, -3, -5, -14, -7, -3, -6, -10, 3, 9, 1, 5, -5, -2, -2, 0, 4, -14, 5, -1, -2, 8, -8, -15, 1, -7, -1, 3, -12, -9, -11, -5, -10, 11, -6, 6, 0, -9, -1, -4, -14, 1, -6, -12, 6, -10, 10, -11, -3, -9, 1, 4, -18, -11, -6, 3, -1, -11, -12, -7, -12, 11, 2, -1, -11, -15, 4, -1, 10, -2, -5, -4, -13, 2, -1, 1, 5, 0, -2, 3, -2, -6, 9, 0, -6, 0, 1, 3, -3, -15, 2, -6, -7, 11, -15, 0, -2, -11, -29, -12, 6, 5, 0, -4, 2, -4, 5, -15, -8, 5, -13, -13, -8, -7, -11, -10, -8, 1, -2, 6, -1, -11, 0, -10, 2, 10, -2, 2, 6, 5, 3, -9, -3, 6, 0, -2, -11, 3, -5, -2, -11, -12, -8, -13, 3, -4, -4, -11, -5, -14, 4, -13, -4, -2, -2, -2, -3, 1, -2, -18, 1, -5, -2, -3, 1, 5, -6, -6, -6, -10, -4, -7, -2, 4, -5, -3, -5, 5, 4, 8, -1, -1, -3, -4, -7, -6, -5, -11, -13, -2, -3, -14, -1, -2, -9, -6, -9, 6, -3, -9, 2, 7, -7, 1, -9, -11, 4, -13, -3, -3, 4, -14, -2, 1, -4, -9, 4, -3, -6, 7, -1, 4, -1, -20, -4, 5, -7, -6, -2, 6, -6, -5, -3, -6, 1, -3, -2, 5, 6, -2, -13, -8, 4, -14, -3, -12, -11, -8, 3, 5, 2, 5, -2, 4, -8, 3, 7, -12, -5, -12, 3, -11, 2, -14, 1, -11, 4, -14, -8, -11, -6, 
  -1, 4, -8, 5, -43, -11, 15, 6, -52, 30, 9, -2, -24, 9, 0, 25, -28, -6, -10, -39, 7, 5, -7, -12, -17, 12, 9, -38, 1, 18, -15, 4, -9, -4, -9, -5, -56, 5, 1, -3, -29, 42, 31, 9, -58, -10, 3, 38, -54, 4, -4, -43, -8, 8, 3, -1, -22, -5, 1, -47, -22, 8, 8, -5, -3, -6, -17, 9, -42, -3, -1, 6, -36, 29, -17, -1, -40, 8, 1, 22, -17, -1, -3, -24, -18, 18, -15, 6, -5, 12, 3, -58, 19, 0, -6, -4, 6, -15, -8, 7, -16, -19, -3, 29, -16, 62, -10, -8, -49, -1, 12, 41, -29, 5, -19, -37, 0, 10, -1, 16, -2, -1, 1, -54, -16, -4, 2, 7, -7, -29, 1, -8, -29, 6, 7, -4, -34, 31, -21, 15, -10, -15, 16, 8, -32, -3, 2, -45, 4, 15, 10, 9, -11, 3, -8, 1, 2, -16, 0, -6, 4, -11, 1, 7, -40, 8, -8, 16, -25, 25, -1, 9, -45, -7, 0, 41, -21, -1, -12, -11, 9, 1, -28, -6, -4, 1, -9, -18, 8, -12, -10, 6, 2, -11, -7, 8, -40, -24, -4, 10, -35, 31, 9, 4, -26, 16, -6, 19, -31, 1, -13, -17, 15, 8, -17, -1, -17, -8, 12, -48, 37, 5, 1, 9, 11, 1, 7, 7, -28, 9, -3, 15, -23, 17, 5, -5, -53, 0, 13, 32, -29, -5, 8, -27, 20, 4, -3, 5, -6, -4, 10, -40, -14, -8, 8, 3, 1, -5, 3, -4, 2, -19, -8, -3, -12, 40, -22, -9, -10, -23, 9, 37, -8, 3, -6, -15, -5, -5, -13, -9, -28, 4, -10, -56, -11, 6, 10, -6, -3, -17, -9, 0, 3, -37, -12, 8, -4, 45, -28, -1, -8, 13, -11, 37, 12, 5, -10, -16, 4, 6, -1, 0, -15, 6, 10, -19, -11, 3, 0, -5, -9, 2, -23, -3, -46, -9, -7, -2, -19, 61, -42, 1, -2, -38, -17, 21, -14, 11, -5, 2, -9, -5, -10, 10, -19, 6, -4, -20, -2, -2, 3, 8, 1, 1, -9, 11, -43, -30, 0, 12, -39, 66, 53, -13, -67, -25, 5, 19, -48, -10, 0, -44, 3, -33, -27, 5, -29, 4, -7, -71, 0, 23, 3, 2, -7, -9, 2, -13, -34, -1, 3, 17, -18, 36, 39, 3, -11, 65, 6, 10, -37, -4, 1, -49, 45, 8, -37, 0, -27, 15, 9, -34, -8, 4, 0, 2, 
  -8, 2, 10, -16, -10, 10, -1, 49, -15, -11, -2, -3, -23, -19, -20, -7, 2, 11, 6, -18, 7, 10, 0, 1, -15, -12, -1, -13, -10, 3, -4, -27, -6, 3, -6, -1, -9, 1, 4, 18, -6, 7, 1, 3, -53, -9, 12, 5, -11, 11, 18, -36, -8, 24, 7, -6, -12, 21, 2, -21, 2, 1, -4, 6, 4, 12, 3, 9, -15, -8, -8, 14, -3, 2, -11, -6, -31, -1, 16, 5, -9, -19, -10, -29, 2, 0, 7, -15, -12, -3, -1, -23, -2, -5, 4, -2, -2, -6, -12, 5, 7, -6, 7, 57, -9, -16, 3, 9, -31, 3, 30, -15, -23, -13, -4, -12, 6, 8, -3, -4, -8, -19, 1, -33, -11, -5, -6, 14, 3, 4, 8, -6, -9, -8, 5, 29, -18, 5, -2, 12, -12, 9, 40, 16, -25, -8, -6, -20, 7, -8, 9, -3, -10, -1, -4, -28, -16, 1, 5, -8, 8, 15, 3, -19, -10, -3, -10, -2, -3, 4, 10, 12, -5, 6, 7, 18, -3, 3, -10, 14, 1, -2, -3, 5, 2, -1, 1, -26, 3, -8, 0, 7, 8, -3, 6, -8, -7, 2, 1, -4, -4, -7, -2, -5, -4, -5, 6, -10, -12, -8, 10, -3, 2, 12, 9, -15, 9, 0, 3, -25, -7, -2, 9, -14, 4, -9, -12, -2, 17, 7, -15, -10, -16, -11, -4, -3, -9, -19, 15, 14, -19, -11, -3, -14, 6, -5, 0, 1, -11, 5, -4, -30, 6, 5, -3, 1, -8, 4, -1, 0, -7, -3, -7, 32, -16, -1, 7, 10, 6, 3, 15, -8, -7, -13, -3, 3, 4, -4, -2, -1, -8, 2, 11, -9, -2, 1, -10, 1, -7, -23, 0, -6, -5, -8, -11, 27, 7, -12, 3, -8, -9, -9, 40, -7, -11, 4, -4, -1, -7, -5, 5, -11, -12, -1, 5, -10, -11, -10, 13, 5, -1, -21, -9, -5, -26, -10, 7, 25, 5, -1, 8, 11, -12, -11, 25, -23, -18, 1, -11, -18, -6, -13, -5, -14, 1, 3, -8, -17, -1, 10, 15, 1, 9, 12, 14, -6, 7, 5, -12, 27, -19, -10, -2, 7, 2, 5, 14, 5, 2, 4, 11, -25, -7, 14, 10, 5, 7, 6, 5, -24, 6, -6, -1, -12, 6, -5, 17, -1, 1, -2, 3, 6, -16, 1, -4, 14, -6, 22, -7, -1, -13, -8, 13, -19, 15, -2, -8, -13, 11, 2, 15, -9, -3, 15, 1, -7, 
  -2, -6, 0, -1, 6, -4, -9, -12, 3, -10, -5, 4, -4, -4, 3, 10, 4, -3, 5, 2, 5, 7, 1, 3, -8, -5, 5, 1, 7, 6, -10, 2, -2, -10, -5, -21, 2, 3, -11, -12, 10, -8, 8, 2, -1, -8, 31, 3, -8, 5, -5, 6, -7, -15, 2, -11, -10, -9, 9, -7, 3, -3, 4, 1, -3, -10, -9, -3, -9, -11, -2, -5, -1, -6, -4, 6, 12, -9, 26, 10, 6, 11, 1, -8, 7, 7, -6, -16, -16, -9, -3, 11, -2, 5, 2, 5, 2, 9, -9, 5, -9, 2, -16, -5, -6, 7, 1, 0, -5, 1, 23, -12, 5, -9, 2, 8, 7, 3, 8, -12, -7, 7, 7, 16, -8, -9, -11, 13, -12, -9, -5, 6, -7, -3, -7, -2, 5, -12, -10, -2, -8, 0, 17, -14, -7, 3, -5, -14, -3, -7, -13, -16, 0, 7, 2, 2, 1, -2, 4, -2, 1, -24, -11, 14, -12, -7, -1, -18, 9, 4, -12, 7, -15, -2, 13, -12, -12, -8, 4, -6, -11, -12, 0, -11, 0, -4, -10, -2, -8, -10, -9, 4, -2, -7, -9, 8, -5, -13, -13, -13, -13, -5, -5, -4, -9, -4, 19, -10, -3, -15, -10, -3, 5, 6, -3, -4, -3, -15, -13, 17, -3, -10, 13, 11, 0, -14, -13, -7, -6, -8, -14, 8, 5, 3, -5, 4, -14, -3, -5, 3, 9, 5, 5, 13, -10, -13, -2, -11, -18, -9, -10, -3, -3, 1, -8, -11, -8, 3, -11, -2, -7, 4, 0, 1, 3, 4, -4, -3, -22, -14, -7, -6, -15, 2, -7, -10, -7, 8, -4, -11, 8, -4, 1, -12, 4, 2, 6, 9, -15, -3, -6, 5, 4, 3, -5, -15, -9, -3, -11, -11, 9, -8, -17, -4, 2, 3, -8, -1, -13, -6, -8, 1, -5, -11, -10, -5, -2, -10, -1, 5, 3, -9, -16, 5, 6, 2, 3, -3, 4, -6, 4, 8, -7, 1, -11, -17, 5, -6, -4, 3, 3, -13, 6, -9, -8, 1, 1, 16, -12, -12, -5, 3, -5, -15, 8, -6, -8, -13, 0, -17, -19, -15, -3, -10, -2, -2, 6, -10, -9, 4, -4, -3, -5, -11, -13, -1, -2, -2, -11, -11, -2, 4, 7, -6, -11, 3, -8, 7, -22, -12, 9, -7, -2, -6, -7, -12, -3, 11, 6, -11, 9, -7, -6, 12, 1, 4, -3, -3, -9, -8, -3, -5, 4, -5, 1, 7, 
  -11, -4, -7, -1, -15, 3, 6, -13, -15, -2, 3, -3, -26, -10, 1, 4, -22, 7, 0, -48, 6, -10, -9, -10, 7, 0, 6, -6, -10, -1, -11, -10, 0, -9, 0, -1, 6, -7, 6, 3, 3, -7, -11, -7, -16, 3, -8, -5, -8, 4, -2, -23, -4, 7, -3, 6, -6, -3, 4, -3, 1, -14, 1, -5, 5, -8, -12, -3, -5, -3, -6, 2, -12, 1, 4, 7, -18, -8, -7, -14, 1, -2, -4, -3, -2, -5, 1, 6, -7, 2, -4, 13, -5, -1, -13, 2, 3, 1, -7, -2, -10, -10, 4, -12, 4, -9, -11, -19, -23, -4, 3, -12, -2, -4, -8, -14, 1, 7, -4, 0, -10, 5, 2, -13, 3, 7, -1, -3, 4, -6, 2, -4, -6, -12, -12, -2, -5, 1, -7, -14, -8, -11, -8, -9, -10, -6, -9, -7, 0, 4, -3, -9, 4, -3, 3, -15, -13, 7, -15, -2, -9, 5, 6, -4, -11, -1, -2, 13, -14, -13, 6, 2, -15, -10, -5, 9, -2, 1, 0, 4, -9, -7, 8, -7, -11, -5, 2, -13, 7, 1, -14, -7, -2, -9, 1, -3, -25, 6, -5, -8, -11, 4, -7, -6, -13, 3, -9, 5, -3, 6, -3, -9, -2, -12, -10, -1, -7, 7, 0, -19, 2, 6, -8, -4, 4, -4, -14, -7, -13, 1, 0, -11, -11, -3, -5, 7, 9, -11, 3, 6, -13, 8, 2, -15, -11, -11, -1, -16, -5, 0, -2, -21, 6, -8, -6, 10, 4, 0, -11, -2, -25, 5, -3, -18, -4, -4, -12, -8, -24, 1, 7, 3, -29, -10, -9, -2, -3, 7, -16, 4, 6, -1, -2, -18, 4, -14, 0, -8, -10, -8, -5, -5, -8, -2, 7, 11, -14, -8, -4, -6, -17, -8, -6, 1, -11, 6, -2, -20, -8, 5, 3, -1, 7, -12, -9, -10, 1, -8, 7, -8, 7, -21, -10, -10, -14, 3, 6, -9, 4, 1, -14, 5, -25, -3, 10, -17, 7, -10, -2, -11, -2, -9, -7, -2, -4, -1, 6, -2, 4, 1, 8, -11, -12, -6, 0, -10, -4, -1, -13, 3, 1, -10, -13, -1, 1, -15, 8, -4, -35, -2, 0, 0, -10, -4, 5, 2, -13, 2, -7, -3, -6, 0, -1, -12, -2, 4, 6, 3, -8, -4, -3, -8, -12, -14, -10, -17, 5, -14, 4, -10, -3, -2, -5, -16, 4, -2, -4, -8, -5, -4, -3, -12, -9, 6, -14, -9, 
  -4, -23, 3, 2, 6, -12, 6, 15, 40, -14, -33, 2, 21, -23, -4, -19, 31, -9, -8, 40, -54, -5, 6, -13, 46, -4, -22, 17, -41, -35, -4, 14, -4, 10, 0, -23, 5, -3, -3, -7, 19, -17, -30, 24, 40, -39, -2, -24, 17, 4, 5, 11, -16, -10, 11, -9, 13, 20, -39, 28, -37, -9, -13, -4, -10, 18, 8, -13, 34, -4, 17, -15, -13, 5, 13, 7, 7, 20, 10, 3, -5, 18, 23, 12, -4, 14, 10, -21, -3, 9, -9, 9, 6, 15, 3, 1, 11, 7, 12, 18, 22, -15, 13, -10, 10, 6, 14, 10, -7, 7, 17, 17, -15, 15, 2, -35, 16, -12, 4, -5, -9, -7, 29, -2, 23, 37, -10, -24, 4, -10, 3, -8, 39, -30, -7, -31, 19, 3, -2, -14, 13, -12, 11, 25, 25, 11, 14, 14, 1, 3, 2, -17, -6, 19, -11, 29, -9, -16, -1, -4, 15, -5, 3, 3, 53, -14, -8, -4, 12, -21, 25, -10, 21, 2, 35, -5, -6, 4, 13, 17, 29, 7, 0, 7, 27, 11, 41, 28, 24, -3, 0, 13, 9, 5, 29, -17, 33, 1, 0, 39, 0, -16, -2, -12, 36, -13, 9, 4, 9, 10, 5, 24, 22, 20, -5, -9, 15, 1, 23, 34, -17, -4, -4, 8, -3, 13, -23, -2, 17, -20, 6, 24, 14, 10, 0, 4, 6, -14, -4, -8, 22, 1, -18, 12, 2, -4, -4, 10, 19, 10, -5, 3, 5, 30, 8, -7, 9, -1, 25, 12, 15, -9, -2, -9, -19, -11, 2, 22, -27, 11, 0, 2, 2, -3, -23, -13, 4, -6, 5, -6, 5, -6, -5, -24, -13, 5, 7, -23, -5, -13, 1, -5, 34, -19, -8, -45, 5, 34, -45, 8, 33, -56, -16, -11, -2, 1, -11, 37, -37, -30, 8, 14, 27, 18, 21, 9, -51, 6, -8, 4, 15, -33, -23, 11, 22, -29, -7, -13, -3, -12, -27, -9, 13, -26, -10, 6, 11, -5, -17, 10, 9, -33, 1, -12, -6, 22, -18, 18, -41, 0, -8, -8, -7, -4, 11, -18, 27, -26, 0, -9, 17, -21, -23, -11, 2, -10, 1, -18, -14, 16, -11, 30, 4, -5, 5, -5, 26, 14, 53, 21, -7, 27, -9, -4, -5, 2, 13, -19, -15, -10, -3, 9, -5, -23, -3, -12, -8, -5, -6, 17, -12, -4, 2, 21, -19, 7, -13, -25, 1, -2, -32, 12, 15, -23, -35, 3, 
  21, 7, -20, -8, -52, 8, 10, 20, -33, 28, -22, 1, -30, 7, 22, 20, -10, -2, 15, -48, 13, 18, -3, -10, -48, 21, -49, -33, -10, 26, -10, -2, -3, 11, 1, -2, -63, 25, 2, 17, 5, 56, 15, -4, -50, 36, -25, 63, -3, -5, -6, -60, 10, 10, 8, 12, 4, 10, 7, -67, 22, 24, 2, 5, 11, -8, 12, 0, -19, 0, 3, 16, -15, 28, 6, 15, -64, 0, 6, 41, 12, -1, 5, -34, 1, -12, -1, 3, -10, 0, 11, -48, 17, -16, -10, -2, 1, 0, -5, 0, -43, 10, -3, 33, 4, 24, -8, -6, -51, 10, -16, 13, 9, 11, 11, -18, 12, 8, 0, 10, 13, -4, -2, -11, -18, -19, 6, 2, -6, -17, 3, 9, -42, 13, 7, 12, -16, 11, -1, -7, -20, -8, 24, 23, 15, -14, 4, -14, -1, 0, 20, 1, 9, 7, -2, -35, 11, 17, -10, 10, 14, -7, -10, -8, -70, 27, 17, 38, -31, 24, -5, 8, -74, 10, -13, 16, 10, -18, -2, -43, -11, 2, 3, 1, -24, 10, -21, -49, 9, 0, 11, 12, -2, 4, -7, -2, -30, 21, 8, 28, 3, 32, 23, 5, -53, 26, 12, 6, 2, -3, 6, -37, 5, 0, 13, 6, -21, 14, -4, -29, 14, 10, 3, -17, 6, 9, 8, 0, -47, 2, -3, 37, -20, 18, -11, -15, -57, 0, 17, 18, 6, -3, 6, -16, 21, 26, 1, 4, -15, 27, -8, -31, 14, -3, -13, 3, -6, 1, -3, -6, -7, -10, -23, 46, -19, 57, 11, 5, -53, -13, -5, 21, 30, 0, 13, -22, 1, 2, 3, 0, 26, 16, 15, -35, 6, 21, 4, -6, -5, 3, -2, -8, -21, -16, 14, 28, 19, 13, -16, 7, -16, -5, 22, 27, 24, -6, 5, -21, -10, 5, 1, 6, -20, 23, -14, -37, -16, 11, 7, -26, -3, -9, -11, -20, -7, 4, -1, 6, 13, 6, -38, 2, -17, -20, 31, 11, 8, 1, 6, -11, -20, -4, -10, 7, -4, 10, -18, -17, 5, -12, 27, -6, 2, 8, -1, 5, -32, 2, 5, 57, -41, 26, 33, 11, -48, 14, 2, 40, -3, 5, 3, -49, 9, 18, -7, 1, -20, 14, -10, -48, 0, 14, -7, -15, 2, 31, 18, 11, -5, 24, 8, 33, 11, 34, 34, 19, 3, 14, -5, 57, 4, 7, 1, -56, -8, 16, -17, 13, -11, 25, 40, -26, 19, 10, 9, 18, 
  -14, 4, -9, 15, 1, -17, 10, -21, -2, -26, -21, -12, 23, 21, 7, -22, 23, 5, 15, 34, -33, 3, -1, -2, 38, -13, -16, -20, -18, -36, -10, 28, -9, 31, 12, 1, 5, -1, 10, -33, -19, 8, -26, 24, -7, 7, 28, -11, -17, -3, 3, -4, 9, 11, -8, -8, -7, 7, 21, -3, -6, -30, -1, 23, 3, -10, -21, 22, -18, 0, -3, -21, -1, 6, 7, 15, -17, -27, 6, -36, -5, -22, -18, 6, 19, 11, -26, 2, -51, -16, -29, -13, -25, 41, -5, -8, -14, -31, -6, 35, -12, -5, -34, 7, -11, -27, -25, 1, -14, -30, 16, -31, -36, 11, -35, 0, -13, -45, 7, 13, -23, 7, 10, 12, -7, -38, 22, 25, -12, -23, -45, 12, 35, -20, -23, 2, 20, -30, -21, 1, 4, -53, 4, -43, -4, 6, -26, -9, -42, -14, 9, 5, -29, 7, 9, 9, -16, 9, -1, 30, -7, -43, -47, 15, 15, -22, -17, -29, 17, -49, -9, 5, 28, -43, -18, -25, 15, 15, -24, -2, -7, -25, 21, 17, 21, -24, 13, 21, -40, 10, 20, 4, -3, -17, -23, -3, -12, -27, -17, 12, 11, -40, -16, 2, 0, -49, -7, -49, 6, 9, -19, 10, -30, -15, -12, -7, -45, -14, 29, -15, -36, -9, 23, 50, 10, -14, -34, 10, 6, 15, 18, 11, -8, 0, 20, 13, -21, -5, 26, -24, -8, -27, 21, 28, 4, -3, -13, -7, 15, 18, -37, 13, 34, 1, 7, 8, 4, -7, 28, 30, 74, 18, 19, 15, 15, -18, 2, 17, -11, -17, -10, -47, 20, -13, -1, 23, 26, -10, 6, -20, 23, -1, 11, 31, -23, 1, 2, 9, 13, -46, -17, 25, 36, -17, -9, -58, 19, -18, -22, 0, 39, -19, 17, -29, 15, -2, -9, 39, -34, -17, 16, 24, -3, -9, 0, 46, -14, -42, -18, 29, -2, -2, -18, 10, 4, 7, -4, 0, -15, -6, -23, 9, 46, 31, 24, -34, -36, -21, -19, -2, 20, 28, -16, 0, -20, -32, -40, 11, -14, -15, -3, 24, 8, -31, 10, 23, 3, 13, 9, 0, 1, -33, -36, 7, 27, -37, -5, -32, 27, -12, -16, 0, -22, -16, 8, 31, 13, 7, 12, 28, -54, -20, 11, 4, 20, -27, 12, -2, -25, -19, 4, -4, 7, -31, -19, 12, -24, -22, -1, 9, -8, -6, -2, 4, -12, 16, -7, 18, -23, 9, -25, 12, -15, 8, 3, -21, 
};
const TfArray<2, int> tensor_dimension11 = { 2, { 64,416 } };
const TfArray<1, float> quant11_scale = { 1, { 0.0099964598193764687, } };
const TfArray<1, int> quant11_zero = { 1, { 0 } };
const TfLiteAffineQuantization quant11 = { (TfLiteFloatArray*)&quant11_scale, (TfLiteIntArray*)&quant11_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data12[32] = { -3724, -3346, -3574, -5204, 3352, -1082, -4366, -323, 2543, -1819, -2112, -3153, 2391, -2076, -5956, -849, 1238, -3787, -3489, 3457, -2509, -3571, 948, -2397, -20, -4650, -5796, 4612, -2813, -4720, -6007, -4353, };
const TfArray<1, int> tensor_dimension12 = { 1, { 32 } };
const TfArray<32, float> quant12_scale = { 32, { 2.9660785003216006e-05, 3.7367408367572352e-05, 3.4823806345229968e-05, 2.7537003916222602e-05, 5.6805085478117689e-05, 5.7150631619151682e-05, 3.0604209314333275e-05, 5.170223448658362e-05, 4.8402343963971362e-05, 4.424530197866261e-05, 5.3399642638396472e-05, 2.7103698812425137e-05, 6.4743573602754623e-05, 7.6154152338858694e-05, 5.0606289732968435e-05, 6.0568883782252669e-05, 4.5792075979989022e-05, 3.7374375096987933e-05, 4.6247452701209113e-05, 5.5382130085490644e-05, 4.669537884183228e-05, 4.5193257392384112e-05, 5.2999774197814986e-05, 4.4460095523390919e-05, 5.5357457313220948e-05, 3.9364345866488293e-05, 4.3610165448626503e-05, 5.052185952081345e-05, 6.5739863202907145e-05, 3.7314617657102644e-05, 3.1863866752246395e-05, 4.3703130359062925e-05, } };
const TfArray<32, int> quant12_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant12 = { (TfLiteFloatArray*)&quant12_scale, (TfLiteIntArray*)&quant12_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data13[32*1*3*16] = { 
  /* [0][0][][] */ 34,13,-65,-41,-47,-33,-1,-96,6,-2,-110,-27,36,-127,-11,30, -27,5,14,-55,-60,-113,58,-68,-39,-56,-102,-105,15,-77,23,-66, -33,-93,-13,-63,-80,-31,-99,23,29,-59,-83,-89,20,-30,-34,-12, 
  /* [1][0][][] */ 10,-37,10,18,-70,-92,-45,51,-82,-117,-13,3,-64,-79,-27,-30, 45,-68,-9,-61,-9,-90,45,32,18,91,-16,-36,-44,-118,1,-96, 36,16,-53,-17,36,-90,-67,-92,-31,-23,127,-30,-42,-99,54,-55, 
  /* [2][0][][] */ -73,-1,37,-45,-59,-4,-67,39,18,-25,18,-103,-19,-117,26,46, 23,-89,33,-6,-70,-62,7,-127,-60,23,-9,-60,-44,-60,-55,-124, 31,-10,-88,-48,-70,-58,-89,-27,-35,-78,-126,-73,-68,-39,-54,-75, 
  /* [3][0][][] */ -7,-116,-78,-16,42,-119,11,-63,-18,-71,-67,5,-54,-51,-92,-65, -11,78,-24,-37,28,-5,-13,-38,-38,-21,-28,-12,-69,18,-124,-122, -32,-125,-111,-121,-3,-14,40,-104,-113,-127,-53,-61,-43,85,-86,-62, 
  /* [4][0][][] */ -7,-48,-42,-63,43,-80,46,-43,-52,-48,11,-22,-42,-13,-24,-42, -1,-17,-105,-77,73,14,-41,-69,-67,-6,18,-54,-40,9,-61,3, -43,-25,-77,-87,106,33,-43,-122,-26,-39,57,-62,-44,-38,-127,-61, 
  /* [5][0][][] */ -35,-59,-25,-8,-113,44,43,24,-23,-3,-96,18,-18,55,-26,52, 1,-10,24,-53,-119,32,54,22,1,-82,-127,35,-26,23,44,16, -9,-43,20,3,-93,30,5,33,-30,-23,-44,17,-33,18,-19,10, 
  /* [6][0][][] */ 58,-52,-52,-93,5,-31,-9,8,16,11,-75,-18,-65,93,-92,-111, -54,-41,-119,-16,-54,8,-127,12,21,-87,-121,15,-80,-90,24,4, 49,-79,6,-51,-3,23,-54,-117,-92,45,-28,-34,-5,-98,1,-83, 
  /* [7][0][][] */ -9,-101,-47,40,-103,3,2,-35,39,-28,-27,74,33,32,-56,-91, 39,3,-45,21,-123,45,87,-80,24,10,-105,110,121,122,-15,-68, 33,55,-97,127,-83,48,-19,-65,81,-8,-98,110,2,34,-12,-57, 
  /* [8][0][][] */ 27,4,-103,-20,-71,-65,-13,-10,-74,-65,-37,7,-49,-127,-40,-49, -43,-72,-68,-51,99,47,-35,-70,-13,-75,-22,-54,-91,-100,-95,-62, 16,16,-22,-59,0,-28,-52,-56,-36,-37,10,-50,-94,-3,-68,18, 
  /* [9][0][][] */ -49,25,65,-41,-30,-98,-1,127,21,37,-64,-65,14,-40,18,97, -46,-14,104,2,32,7,-41,-17,29,-18,10,-47,15,-51,89,25, -23,-60,101,-21,-18,-87,10,39,-75,41,14,12,28,-101,108,30, 
  /* [10][0][][] */ -51,-30,-113,-64,-2,-7,-40,33,-22,56,-21,-5,-14,-16,-64,-42, 67,-79,-48,-4,20,33,-69,30,-41,-1,-67,-61,-7,-48,41,-10, -41,-56,-20,-12,-28,-15,-57,-23,10,-47,-39,-29,-64,-7,-57,-127, 
  /* [11][0][][] */ -13,-28,-102,32,-60,-127,-32,-97,34,26,-96,-99,-48,88,-75,-15, 26,47,-55,-46,-9,-69,45,-58,-9,18,-98,-44,-72,26,-66,16, -50,-57,-58,19,-44,74,-5,-14,-18,7,23,-90,-22,-12,-7,-78, 
  /* [12][0][][] */ -57,-43,-127,-71,35,44,-95,-116,-47,-105,76,-1,-21,1,-83,-48, -40,-32,-58,-83,59,66,-55,-66,-45,-81,42,-75,-44,56,-38,-90, 1,52,33,-25,-13,20,33,2,-84,-90,23,-41,-10,64,20,-39, 
  /* [13][0][][] */ -56,-25,4,-8,-17,23,-50,4,7,-47,-67,-48,-33,-76,28,10, -5,7,24,1,-17,19,-17,21,-45,-9,-127,-52,-24,-48,-12,-61, -31,-30,4,-25,4,31,-9,-35,-7,-29,-114,-17,-5,-10,-20,10, 
  /* [14][0][][] */ -45,40,-13,-36,2,42,-6,-77,-25,-3,4,2,28,-41,-52,-81, -13,-67,-5,-64,-27,-71,-71,-75,-10,-1,-45,-64,24,11,-127,-115, -27,-16,-23,-55,-48,-47,10,-18,-56,35,-40,-41,-18,34,-27,43, 
  /* [15][0][][] */ 10,-7,51,-57,-79,-88,-37,7,-27,40,-50,-54,-39,-61,-23,42, 6,-6,21,-39,-71,-44,-31,54,-57,-63,-59,-80,24,-60,38,76, -3,-10,-86,-66,-61,-75,-43,31,-80,-68,-127,-40,-42,-99,44,73, 
  /* [16][0][][] */ -51,-53,-55,-115,65,68,81,-28,-55,-73,50,-14,-54,-87,17,-127, -85,-110,-105,-69,-19,26,-28,-28,-75,-70,16,-37,-112,-57,-34,-53, -11,7,-65,-59,17,30,-51,-102,-25,-16,-5,18,-25,-91,-126,-41, 
  /* [17][0][][] */ -62,-26,-82,-7,19,-76,-67,-113,-64,13,-118,-69,-29,-102,2,6, 35,-22,-1,10,-45,-13,-69,11,25,-27,-69,-88,-8,-127,-101,-26, 12,-3,-46,16,-101,-97,-36,3,-54,-75,-35,-24,-47,-50,-78,-21, 
  /* [18][0][][] */ 18,-8,30,-85,-32,-25,-30,-77,9,-29,-127,-70,-38,-80,6,-26, 24,-54,-43,-52,-4,11,-30,20,-13,-35,-21,-27,-4,-17,-73,-12, 29,-26,0,-31,-19,-63,39,18,20,-33,-48,-11,-18,-64,-45,23, 
  /* [19][0][][] */ -16,-127,-93,-108,51,78,1,-127,-35,-100,77,-75,-58,-13,-96,1, 17,75,-75,-92,30,52,-34,-54,-14,-93,3,-74,-2,-27,-63,2, 14,15,48,19,-7,-17,-14,-28,-51,-26,-38,-111,-25,22,-54,12, 
  /* [20][0][][] */ -99,-10,-105,-28,-9,-62,-112,-24,-3,4,-127,-85,35,-68,46,94, -64,-61,-17,-71,-23,20,30,25,-65,92,48,-57,-4,4,-70,14, 25,33,-68,-113,99,61,-9,-46,1,-11,37,-24,-5,-23,-51,0, 
  /* [21][0][][] */ -82,-48,-73,-8,-62,34,-86,-27,-54,-20,-75,-7,-65,-76,-77,66, -72,-80,8,-47,-6,-35,4,3,-35,15,-52,-6,-56,-127,52,-40, -83,23,-22,-76,-35,7,-13,1,2,3,-35,-79,-43,-87,-99,-9, 
  /* [22][0][][] */ -31,-1,-54,-44,-54,2,-16,-9,-22,-63,-6,-64,-63,-71,-44,-127, 40,6,-53,-68,31,-50,-85,-72,-2,-24,-43,-32,-28,-116,-73,-111, 36,-13,-41,-83,-97,-100,-34,-24,-81,-23,-51,-47,-60,21,-85,-8, 
  /* [23][0][][] */ -34,-127,-94,5,-45,18,-8,-90,-3,-50,-25,6,-72,61,-118,-77, 7,-29,-3,-103,-64,-17,14,-26,-15,-36,-5,25,-67,41,-21,-1, -19,-47,-86,-15,-75,39,-45,-101,-18,-34,-39,4,-24,-61,-117,27, 
  /* [24][0][][] */ -72,-9,-100,-76,7,62,-86,-26,19,13,18,-49,15,-70,-38,-103, -18,5,-71,34,81,77,-127,-68,-60,-60,18,-22,-94,-31,-42,-2, -59,-92,-52,-26,37,-54,-41,-45,1,3,-38,-28,6,-107,-123,-64, 
  /* [25][0][][] */ -36,36,10,-31,-50,-106,6,-39,-9,-4,-88,-28,-63,35,-23,-46, 26,19,-61,6,22,20,-74,-94,-18,-40,-69,-24,-12,2,-6,96, 5,-50,-44,-4,-58,-127,19,14,-42,-1,-63,-16,-37,-87,-17,34, 
  /* [26][0][][] */ 34,26,6,-56,-41,-55,-60,-33,-12,115,19,0,-67,-22,-4,127, 8,21,-11,-32,66,76,0,-50,-33,-80,-3,-42,-61,-56,-41,-56, 20,-32,-10,-46,-43,-124,-47,-83,-41,-36,-83,-9,45,-97,-91,-92, 
  /* [27][0][][] */ 40,41,-56,-127,13,-21,-1,-61,-39,-72,-14,-61,-103,28,-95,-19, 5,-77,-72,-122,24,60,-81,-79,-18,-64,31,-78,-25,-65,-117,8, 20,-51,-13,-22,19,3,-12,-32,-61,-89,33,-100,-26,24,-71,49, 
  /* [28][0][][] */ -48,-27,-23,-37,-38,-111,-45,27,-27,-22,-66,-71,-17,-68,-46,-46, 40,39,-69,4,2,-47,-4,-46,-15,-21,-127,-46,-40,-62,14,-92, -3,12,35,-37,22,15,-30,24,3,-45,-105,-28,-1,-42,24,-59, 
  /* [29][0][][] */ 70,123,-102,-70,-18,-101,-127,72,-76,-37,99,-88,-18,-27,-120,-44, -79,-82,-30,-66,20,-92,-67,14,38,92,-7,-99,-6,-120,12,-81, -65,-72,-69,-66,5,2,-52,-88,-11,-81,-36,0,59,-52,75,-78, 
  /* [30][0][][] */ 36,10,-100,15,27,-36,-79,-65,-24,31,-81,-95,54,-41,84,-83, -62,26,-10,-85,-12,-40,-5,-121,-7,-8,-68,-32,-103,9,-47,41, -19,-50,-26,-18,-101,0,-65,-7,26,-13,-22,31,26,-40,-127,-25, 
  /* [31][0][][] */ -12,50,-51,-76,-47,-27,-4,-127,26,-42,2,-12,-33,-28,-82,-27, -45,-2,-19,-77,-36,-7,-84,-43,-49,-124,29,5,13,-17,-63,-29, 41,-64,-29,6,-12,-73,21,2,-35,-4,-20,-38,25,-27,7,-25, 
};
const TfArray<4, int> tensor_dimension13 = { 4, { 32,1,3,16 } };
const TfArray<32, float> quant13_scale = { 32, { 0.002492052037268877, 0.00313955033197999, 0.0029258409049361944, 0.0023136152885854244, 0.0047726728953421116, 0.0048017050139605999, 0.0025713169015944004, 0.0043439394794404507, 0.0040666880086064339, 0.0037174199242144823, 0.0044865529052913189, 0.0022772096563130617, 0.0054396521300077438, 0.006398350466042757, 0.0042518600821495056, 0.0050889011472463608, 0.0038473773747682571, 0.0031401354353874922, 0.0038856375031173229, 0.0046531185507774353, 0.0039232713170349598, 0.0037970656994730234, 0.0044529568403959274, 0.0037354663945734501, 0.0046510454267263412, 0.003307329723611474, 0.003664056770503521, 0.0042447661980986595, 0.0055233589373528957, 0.0031351146753877401, 0.0026771514676511288, 0.0036718675401061773, } };
const TfArray<32, int> quant13_zero = { 32, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant13 = { (TfLiteFloatArray*)&quant13_scale, (TfLiteIntArray*)&quant13_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data14[16] = { -4415, -3341, -5491, -671, 2052, 789, -8135, -8067, -443, -5622, 3045, 858, -145, -643, -10888, -2245, };
const TfArray<1, int> tensor_dimension14 = { 1, { 16 } };
const TfArray<16, float> quant14_scale = { 16, { 6.0988568293396384e-05, 6.2369443185161799e-05, 3.7459922168636695e-05, 6.7578657763078809e-05, 8.6922402260825038e-05, 9.7681084298528731e-05, 3.6621178878704086e-05, 3.6391349567566067e-05, 6.2240280385594815e-05, 4.2395720811327919e-05, 6.6016000346280634e-05, 7.4507988756522536e-05, 7.583729166071862e-05, 0.00011395560431992635, 3.2059906516224146e-05, 7.1087597461882979e-05, } };
const TfArray<16, int> quant14_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant14 = { (TfLiteFloatArray*)&quant14_scale, (TfLiteIntArray*)&quant14_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data15[16*1*3*8] = { 
  /* [0][0][][] */ -24,19,64,63,-67,4,-68,39, -54,-2,1,-3,-66,21,-9,-61, -23,16,12,31,-127,-29,-19,19, 
  /* [1][0][][] */ -127,57,-3,43,-21,-64,-105,23, -123,10,-21,-3,53,63,24,62, -13,63,29,-75,-114,-53,-31,-7, 
  /* [2][0][][] */ -78,-20,-63,2,-33,-52,-18,45, 127,-52,67,57,9,-111,-35,102, -100,-3,38,-83,-59,-4,127,-14, 
  /* [3][0][][] */ -35,-127,38,-18,120,-8,-77,41, -23,-85,-21,56,34,-27,-66,12, -100,-60,-20,-17,90,-9,10,23, 
  /* [4][0][][] */ -71,56,-36,-22,-84,-38,-1,22, -97,74,-18,-30,-88,29,-8,-9, -34,127,39,-17,-67,50,-31,2, 
  /* [5][0][][] */ -31,100,23,27,-26,-51,-100,47, -73,79,-14,-22,-10,32,-79,-19, -3,127,18,15,-14,3,-2,24, 
  /* [6][0][][] */ 83,-27,24,66,-127,-6,-23,8, 41,-101,42,-89,-41,5,-57,52, -32,-106,-92,83,-59,40,-77,-88, 
  /* [7][0][][] */ 8,25,-9,-110,-126,127,112,47, 89,52,74,101,44,90,-74,52, 16,-6,-92,-24,71,49,114,28, 
  /* [8][0][][] */ -12,-127,52,40,8,-25,8,31, -89,-110,-63,36,96,-27,-87,59, -68,-58,39,30,29,29,-47,-21, 
  /* [9][0][][] */ 127,-65,48,66,-75,58,72,46, -87,-23,-27,-74,-22,42,-38,27, -80,-115,-51,79,-46,34,-58,79, 
  /* [10][0][][] */ -85,109,-21,28,-62,-25,11,-5, -126,95,-8,-3,-101,-50,-68,26, -124,127,-21,40,-85,38,-6,70, 
  /* [11][0][][] */ -121,-72,-31,45,62,10,-31,-33, -84,-127,21,10,106,-68,-25,20, -71,-72,-40,29,10,-59,-79,-26, 
  /* [12][0][][] */ -88,-4,-36,49,30,-12,-5,-2, -28,-25,-57,-31,-127,29,-62,-11, -30,-24,35,13,109,-56,-60,27, 
  /* [13][0][][] */ -6,-42,-18,-19,-38,24,-121,-23, 30,-31,-25,-1,-54,-29,-127,-25, -8,-6,31,-4,66,-35,-114,26, 
  /* [14][0][][] */ 41,-71,72,-39,-48,65,27,-104, -50,66,96,31,-53,16,127,-86, 89,-124,-7,118,-37,-99,61,-106, 
  /* [15][0][][] */ 79,-19,-16,-26,-4,-18,4,42, 12,-43,23,-23,-15,-32,23,18, -47,-127,29,-48,-90,-5,22,27, 
};
const TfArray<4, int> tensor_dimension15 = { 4, { 16,1,3,8 } };
const TfArray<16, float> quant15_scale = { 16, { 0.0039183530025184155, 0.0040070707909762859, 0.0024067002814263105, 0.0043417485430836678, 0.0055845328606665134, 0.0062757492996752262, 0.002352813258767128, 0.0023380473721772432, 0.0039987722411751747, 0.0027238121256232262, 0.0042413519695401192, 0.0047869398258626461, 0.0048723439686000347, 0.007321343757212162, 0.0020597635302692652, 0.0045671886764466763, } };
const TfArray<16, int> quant15_zero = { 16, { 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant15 = { (TfLiteFloatArray*)&quant15_scale, (TfLiteIntArray*)&quant15_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int32_t tensor_data16[8] = { -25019, 32348, -8717, -8508, 4332, -10093, -17824, -6401, };
const TfArray<1, int> tensor_dimension16 = { 1, { 8 } };
const TfArray<8, float> quant16_scale = { 8, { 1.5066743799252436e-05, 2.2581678422284313e-05, 5.8966670621884987e-06, 5.8974369494535495e-06, 2.0738203602377325e-05, 5.9385070017015096e-06, 1.6679698092048056e-05, 5.5306454669334926e-06, } };
const TfArray<8, int> quant16_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant16 = { (TfLiteFloatArray*)&quant16_scale, (TfLiteIntArray*)&quant16_zero, 0 };
const MODEL_SECTION(EI_MODEL_SECTION) ALIGN(16) int8_t tensor_data17[8*1*3*80] = { 
  /* [0][0][][] */ 84,10,12,23,-107,-46,27,-68,-89,-23,9,-121,17,-49,-80,-78,-120,-79,5,-47,48,61,38,11,23,-6,32,-3,75,18,-66,-7,-76,-97,-4,-37,-16,-45,-9,1,-52,-21,-107,-61,-76,-103,-51,-46,-38,-37,-3,32,-45,24,-4,10,57,52,13,34,-14,34,-15,-42,1,44,96,70,84,-10,-12,63,-39,-43,-9,-14,41,19,15,65, 124,3,47,24,2,-53,-10,-51,-103,21,-25,-117,17,-47,-59,-77,-127,-77,43,-17,56,50,36,15,18,-13,10,50,63,48,-62,-54,-79,-98,-31,-30,-23,10,8,5,-73,-46,-68,-51,-11,-74,-105,-48,17,-48,-8,48,-9,-12,-6,-46,52,47,65,-19,68,26,-26,-1,37,112,78,113,93,38,42,68,-26,-31,-9,-9,62,-7,87,95, 117,11,-12,69,-24,1,67,-24,-18,32,41,-31,-1,-8,6,-58,-116,-84,34,-12,22,88,21,21,42,11,41,81,102,35,11,-41,-85,-77,15,-12,-19,-37,-30,-45,-32,-40,-49,-108,-28,-70,-96,-87,-36,15,-26,49,0,-21,19,-50,35,55,3,-2,9,48,20,-45,53,90,87,95,74,58,10,10,36,27,12,-16,61,24,52,35, 
  /* [1][0][][] */ -50,45,73,127,32,57,19,52,-15,-22,-42,-18,14,-41,-12,-36,-17,34,26,19,11,-57,-62,-14,20,-44,-57,-29,-89,-37,7,-12,-15,14,-16,-13,-43,-46,-28,-29,12,-14,-9,10,2,25,16,18,9,-2,5,-15,15,-23,-41,-76,-62,-40,-35,-20,0,-17,-52,-22,-12,48,57,16,-15,-12,-40,-20,-40,4,1,-35,-30,-13,-19,-46, 24,37,92,105,24,45,49,43,-23,-31,-27,12,18,-37,-35,-46,-2,57,18,-8,-15,-24,-97,-9,13,1,-47,-4,-84,-67,10,7,4,-28,-37,-9,-8,-25,-46,6,-1,17,-10,18,26,-22,16,-18,-2,17,9,-35,28,-12,-33,-98,-81,-14,-4,-22,-39,-37,-29,-19,20,69,33,22,-12,-37,-35,-46,-29,-51,-16,-47,-40,-1,-36,-38, -25,45,114,103,75,47,5,30,11,-5,6,-25,10,-6,-5,-22,-7,51,-10,-11,9,-9,-45,-24,1,-21,-38,-17,-91,-72,-9,38,-25,-3,-38,-28,-54,-4,-30,-25,-9,6,-12,16,21,-5,-22,-33,14,-12,22,-29,14,-25,1,-99,-84,-36,-28,5,-11,-50,-43,-15,-25,64,79,29,-15,-29,-8,-25,-59,-4,0,-34,-26,1,-18,-38, 
  /* [2][0][][] */ 31,67,-117,-60,-108,-111,17,26,-84,-11,12,-107,17,-127,-91,29,26,-99,36,1,60,-41,-34,-25,-1,-105,-105,-120,-37,-126,-101,-2,-113,30,68,-85,19,-102,-44,-66,4,-31,-24,-79,-14,-24,9,-80,50,-107,71,-110,-78,-8,67,26,-122,-87,35,43,-15,53,-68,-35,-83,70,-70,-28,-109,-114,-84,39,-116,-3,-57,-80,-126,16,-120,-83, 18,-107,-97,-46,31,-46,72,67,27,-94,-115,-62,-4,10,0,25,-109,-111,63,-125,14,1,-105,-13,48,-121,-25,-89,-24,39,8,-59,-24,-111,35,-75,-18,74,-81,-89,9,31,-107,-49,-68,26,-55,-19,58,18,-44,-44,17,34,-45,24,44,38,-35,-89,-14,-91,-88,59,-47,-12,0,-50,-60,-83,63,0,-56,-16,13,-42,35,-91,-87,63, -59,-6,16,-8,60,-6,-107,58,32,31,-62,13,-27,-87,21,-38,43,27,53,-95,-29,-58,40,11,-73,-46,-32,-123,28,21,-110,0,61,51,-2,-74,18,-55,-71,-19,14,-70,-1,33,-16,10,5,62,5,-71,-16,-67,21,-56,-107,-53,-62,59,0,-17,-103,-62,-29,-66,-4,-92,-25,-118,37,3,-5,20,36,63,27,70,-44,-98,-123,-30, 
  /* [3][0][][] */ -108,-42,-30,-127,53,-84,58,-25,55,-120,-36,-105,-45,0,1,-37,70,2,12,-12,21,43,43,53,7,56,59,-106,71,15,24,39,44,15,24,21,-57,-22,-115,57,-97,-61,-25,-77,21,10,66,-74,70,38,-86,-43,-59,-85,63,-82,79,63,-17,28,44,15,-22,78,-15,-87,46,-81,12,-49,69,87,21,-30,-68,-58,-21,-82,78,-47, 54,-26,55,-118,21,28,-3,-21,-121,-7,69,-97,-118,-1,-119,-8,-2,-21,-62,60,-109,15,-93,-1,-72,-24,60,1,71,-94,71,-76,-23,-33,-82,-25,2,-112,-104,-44,37,-106,-32,25,45,-87,-97,3,-49,-30,-42,9,-105,-6,64,5,74,31,-77,-72,-99,35,37,52,27,-57,-6,-83,-112,70,75,63,-90,-47,-75,79,-16,-85,-85,-55, -94,40,-104,-4,9,23,35,-45,-68,-87,-90,-48,-100,71,36,30,-104,-122,-11,53,-81,-83,-56,12,61,-4,53,-47,-6,48,-48,19,-107,32,1,13,22,-107,28,17,-2,23,53,-121,-81,46,-105,-25,-26,72,-41,-114,-41,-115,56,-26,-80,73,29,36,45,-26,13,-51,83,23,32,-109,-99,85,-95,-109,-80,-71,48,67,5,16,-56,57, 
  /* [4][0][][] */ -52,-110,-98,-87,-104,-46,-67,-45,-30,86,3,-6,5,16,9,89,-10,-52,3,20,-3,18,36,6,-44,-16,-33,-15,66,46,-19,-4,-17,4,59,36,16,29,-46,7,26,25,7,-38,-40,-6,42,30,33,-31,-52,3,-46,-28,-52,47,-10,-11,-13,-60,0,44,21,-16,-28,-6,-46,-50,-24,11,-44,15,-24,-42,1,8,-11,-44,-70,-27, -57,-114,-111,-106,-88,-61,-56,-51,-39,70,26,-8,17,16,-7,74,-11,-56,31,43,15,34,51,-2,-28,-37,-48,-36,40,77,12,-38,30,29,26,79,56,32,-26,-26,6,22,-32,-11,-32,20,40,21,8,-22,-67,-36,-38,-59,-46,51,-4,3,-7,-69,33,21,30,-13,-15,3,-47,-16,-28,-30,-38,-14,-6,-16,12,28,-13,-63,-50,-21, -70,-80,-122,-127,-59,-65,-53,-52,-6,75,5,-32,-16,-24,44,35,10,-71,11,38,24,49,45,-12,-1,-6,-18,-39,29,66,-12,-21,15,12,53,40,9,31,6,10,32,30,-14,-39,3,15,43,52,20,-28,-34,20,-34,-35,-9,58,-13,-15,-7,-60,35,40,-19,-13,-13,-27,-60,-39,-43,20,-2,5,34,-14,-9,11,-9,-69,-37,-36, 
  /* [5][0][][] */ -55,-4,-28,25,16,-15,-86,-23,-38,32,-62,51,-9,34,-63,-18,-106,3,-26,58,-66,-43,62,-122,-37,-117,-9,16,-89,76,-122,63,-8,-51,49,-3,-29,-71,54,-55,-110,-121,23,32,2,-53,-102,-81,-84,-75,-97,-98,-29,43,-61,-29,-25,-36,74,77,56,-57,30,49,-95,7,-86,53,13,17,-62,-32,-88,28,-73,-34,15,77,-44,-91, 49,-103,80,-34,-8,-9,-46,-57,-5,66,36,13,-42,47,-77,14,57,-66,-10,-108,42,64,-83,14,-51,-92,54,45,1,-51,-10,56,-49,-124,-85,-96,-24,-89,19,71,-24,76,-23,-102,23,61,9,-32,71,-79,13,-93,-55,-113,33,24,70,-117,-1,-93,17,2,60,-7,-105,36,32,-96,14,-61,9,-15,50,-71,-92,48,-31,-30,60,77, -56,38,-17,-55,21,-69,43,-127,-60,-30,52,-10,-57,13,-50,65,-106,-79,39,-61,41,34,-33,-25,65,-123,20,54,-100,-1,-40,-79,-79,-53,-94,38,23,67,46,-100,-98,-62,-124,69,-113,-75,-52,-22,-78,-4,-29,33,-12,56,71,8,50,-91,-73,2,80,-21,-42,0,24,-8,-12,12,20,79,-78,-83,5,-31,-67,-13,-109,40,73,35, 
  /* [6][0][][] */ 120,34,22,43,-57,-20,12,-38,-62,-33,-11,-62,-13,-21,-22,-83,-127,-48,19,-6,24,75,24,3,-17,-2,60,40,74,37,-31,-60,-55,-94,-48,-13,-45,7,-27,-23,-51,-53,-33,-72,-70,-33,-40,-29,-4,1,-28,49,-26,21,14,-31,6,12,51,48,21,-6,-20,-28,-2,104,74,97,56,15,54,66,-25,25,-7,18,66,43,24,52, 123,-21,11,29,-77,-33,32,-34,-16,41,-26,-98,0,-29,-56,-96,-76,-84,22,-14,31,18,44,-10,5,-6,-5,31,55,71,-50,-36,-80,-41,-28,16,-23,-49,-50,2,-38,-55,-61,-58,-83,-87,-66,-51,-33,-39,-44,30,4,-2,-34,-5,-2,14,56,-5,40,54,-7,-36,5,87,111,71,62,50,5,39,-10,14,-4,17,15,27,75,97, 118,4,66,0,-69,-31,65,-36,-40,-28,-11,-66,-13,10,3,-64,-102,-97,18,17,20,84,58,-19,-17,12,57,5,94,60,-22,-47,-57,-93,-12,-3,-6,-36,21,2,-13,-6,-74,-91,-36,-62,-86,-42,-34,-11,-35,24,8,22,-8,3,51,38,31,24,20,-6,-15,-40,-5,43,63,105,97,52,8,32,-13,-21,-5,-17,4,42,49,40, 
  /* [7][0][][] */ 56,-24,31,13,56,7,-100,39,-54,-73,69,-120,38,-117,-56,5,-37,77,-66,-37,-57,15,-112,-47,50,-44,-28,62,75,62,-59,-81,44,75,-23,-90,29,-45,27,-64,-56,-4,-72,-58,-110,-92,16,45,-18,7,65,-118,22,-44,-118,-78,-107,-61,-17,-104,-45,3,32,21,-18,-51,-68,41,30,-66,-121,-41,47,19,63,2,7,22,-43,-5, -1,-61,-69,-66,-89,-61,-29,-9,-46,15,-40,-21,-122,4,2,49,3,48,32,-37,-42,38,41,53,-95,84,9,59,-38,37,15,53,-102,-53,-107,1,-116,-88,28,8,-83,-98,27,-31,-17,-93,23,-24,50,27,-41,53,-127,14,15,-55,21,-102,40,-75,-113,70,-125,-40,-109,48,-98,-33,-106,67,-93,-18,15,35,49,32,-2,54,-50,16, 33,-7,-119,39,-35,1,-7,-114,-48,-93,-71,-13,-118,-47,-86,-87,-115,-81,-22,46,-44,62,-99,-87,-37,-24,21,13,8,14,-61,-66,85,64,-125,-76,68,81,-3,-67,84,-95,46,74,-28,41,-7,-53,-78,-111,5,85,-106,-115,17,23,-11,-62,28,-32,49,39,-64,47,-20,-48,-24,14,-104,-4,-7,1,-8,-100,-44,-107,80,-61,9,-108, 
};
const TfArray<4, int> tensor_dimension17 = { 4, { 8,1,3,80 } };
const TfArray<8, float> quant17_scale = { 8, { 0.0038570864126086235, 0.005780909676104784, 0.0015095467679202557, 0.0015097438590601087, 0.0053089801222085953, 0.0015202577924355865, 0.0042700027115643024, 0.0014158452395349741, } };
const TfArray<8, int> quant17_zero = { 8, { 0,0,0,0,0,0,0,0 } };
const TfLiteAffineQuantization quant17 = { (TfLiteFloatArray*)&quant17_scale, (TfLiteIntArray*)&quant17_zero, 0 };
const TfArray<4, int> tensor_dimension18 = { 4, { 1,1,97,80 } };
const TfArray<1, float> quant18_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant18_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant18 = { (TfLiteFloatArray*)&quant18_scale, (TfLiteIntArray*)&quant18_zero, 0 };
const TfArray<4, int> tensor_dimension19 = { 4, { 1,1,97,8 } };
const TfArray<1, float> quant19_scale = { 1, { 0.015564847737550735, } };
const TfArray<1, int> quant19_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant19 = { (TfLiteFloatArray*)&quant19_scale, (TfLiteIntArray*)&quant19_zero, 0 };
const TfArray<4, int> tensor_dimension20 = { 4, { 1,97,1,8 } };
const TfArray<1, float> quant20_scale = { 1, { 0.015564847737550735, } };
const TfArray<1, int> quant20_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant20 = { (TfLiteFloatArray*)&quant20_scale, (TfLiteIntArray*)&quant20_zero, 0 };
const TfArray<4, int> tensor_dimension21 = { 4, { 1,49,1,8 } };
const TfArray<1, float> quant21_scale = { 1, { 0.015564847737550735, } };
const TfArray<1, int> quant21_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant21 = { (TfLiteFloatArray*)&quant21_scale, (TfLiteIntArray*)&quant21_zero, 0 };
const TfArray<4, int> tensor_dimension22 = { 4, { 1,1,49,8 } };
const TfArray<1, float> quant22_scale = { 1, { 0.015564847737550735, } };
const TfArray<1, int> quant22_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant22 = { (TfLiteFloatArray*)&quant22_scale, (TfLiteIntArray*)&quant22_zero, 0 };
const TfArray<4, int> tensor_dimension23 = { 4, { 1,1,49,16 } };
const TfArray<1, float> quant23_scale = { 1, { 0.011902153491973877, } };
const TfArray<1, int> quant23_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant23 = { (TfLiteFloatArray*)&quant23_scale, (TfLiteIntArray*)&quant23_zero, 0 };
const TfArray<4, int> tensor_dimension24 = { 4, { 1,49,1,16 } };
const TfArray<1, float> quant24_scale = { 1, { 0.011902153491973877, } };
const TfArray<1, int> quant24_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant24 = { (TfLiteFloatArray*)&quant24_scale, (TfLiteIntArray*)&quant24_zero, 0 };
const TfArray<4, int> tensor_dimension25 = { 4, { 1,25,1,16 } };
const TfArray<1, float> quant25_scale = { 1, { 0.011902153491973877, } };
const TfArray<1, int> quant25_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant25 = { (TfLiteFloatArray*)&quant25_scale, (TfLiteIntArray*)&quant25_zero, 0 };
const TfArray<4, int> tensor_dimension26 = { 4, { 1,1,25,16 } };
const TfArray<1, float> quant26_scale = { 1, { 0.011902153491973877, } };
const TfArray<1, int> quant26_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant26 = { (TfLiteFloatArray*)&quant26_scale, (TfLiteIntArray*)&quant26_zero, 0 };
const TfArray<4, int> tensor_dimension27 = { 4, { 1,1,25,32 } };
const TfArray<1, float> quant27_scale = { 1, { 0.018724562600255013, } };
const TfArray<1, int> quant27_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant27 = { (TfLiteFloatArray*)&quant27_scale, (TfLiteIntArray*)&quant27_zero, 0 };
const TfArray<4, int> tensor_dimension28 = { 4, { 1,25,1,32 } };
const TfArray<1, float> quant28_scale = { 1, { 0.018724562600255013, } };
const TfArray<1, int> quant28_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant28 = { (TfLiteFloatArray*)&quant28_scale, (TfLiteIntArray*)&quant28_zero, 0 };
const TfArray<4, int> tensor_dimension29 = { 4, { 1,13,1,32 } };
const TfArray<1, float> quant29_scale = { 1, { 0.018724562600255013, } };
const TfArray<1, int> quant29_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant29 = { (TfLiteFloatArray*)&quant29_scale, (TfLiteIntArray*)&quant29_zero, 0 };
const TfArray<2, int> tensor_dimension30 = { 2, { 1,416 } };
const TfArray<1, float> quant30_scale = { 1, { 0.018724562600255013, } };
const TfArray<1, int> quant30_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant30 = { (TfLiteFloatArray*)&quant30_scale, (TfLiteIntArray*)&quant30_zero, 0 };
const TfArray<2, int> tensor_dimension31 = { 2, { 1,64 } };
const TfArray<1, float> quant31_scale = { 1, { 0.089402571320533752, } };
const TfArray<1, int> quant31_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant31 = { (TfLiteFloatArray*)&quant31_scale, (TfLiteIntArray*)&quant31_zero, 0 };
const TfArray<2, int> tensor_dimension32 = { 2, { 1,2 } };
const TfArray<1, float> quant32_scale = { 1, { 0.26182854175567627, } };
const TfArray<1, int> quant32_zero = { 1, { -40 } };
const TfLiteAffineQuantization quant32 = { (TfLiteFloatArray*)&quant32_scale, (TfLiteIntArray*)&quant32_zero, 0 };
const TfArray<2, int> tensor_dimension33 = { 2, { 1,2 } };
const TfArray<1, float> quant33_scale = { 1, { 0.00390625, } };
const TfArray<1, int> quant33_zero = { 1, { -128 } };
const TfLiteAffineQuantization quant33 = { (TfLiteFloatArray*)&quant33_scale, (TfLiteIntArray*)&quant33_zero, 0 };
const TfLiteReshapeParams opdata0 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs0 = { 2, { 0,1 } };
const TfArray<1, int> outputs0 = { 1, { 18 } };
const TfLiteConvParams opdata1 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs1 = { 3, { 18,17,16 } };
const TfArray<1, int> outputs1 = { 1, { 19 } };
const TfLiteReshapeParams opdata2 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs2 = { 2, { 19,2 } };
const TfArray<1, int> outputs2 = { 1, { 20 } };
const TfLitePoolParams opdata3 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs3 = { 1, { 20 } };
const TfArray<1, int> outputs3 = { 1, { 21 } };
const TfLiteReshapeParams opdata4 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs4 = { 2, { 21,3 } };
const TfArray<1, int> outputs4 = { 1, { 22 } };
const TfLiteConvParams opdata5 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs5 = { 3, { 22,15,14 } };
const TfArray<1, int> outputs5 = { 1, { 23 } };
const TfLiteReshapeParams opdata6 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs6 = { 2, { 23,4 } };
const TfArray<1, int> outputs6 = { 1, { 24 } };
const TfLitePoolParams opdata7 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs7 = { 1, { 24 } };
const TfArray<1, int> outputs7 = { 1, { 25 } };
const TfLiteReshapeParams opdata8 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs8 = { 2, { 25,5 } };
const TfArray<1, int> outputs8 = { 1, { 26 } };
const TfLiteConvParams opdata9 = { kTfLitePaddingSame, 1,1, kTfLiteActRelu, 1,1 };
const TfArray<3, int> inputs9 = { 3, { 26,13,12 } };
const TfArray<1, int> outputs9 = { 1, { 27 } };
const TfLiteReshapeParams opdata10 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs10 = { 2, { 27,6 } };
const TfArray<1, int> outputs10 = { 1, { 28 } };
const TfLitePoolParams opdata11 = { kTfLitePaddingSame, 1,2, 1,2, kTfLiteActNone, { { 0,0, 0, 0 } } };
const TfArray<1, int> inputs11 = { 1, { 28 } };
const TfArray<1, int> outputs11 = { 1, { 29 } };
const TfLiteReshapeParams opdata12 = { { 0, 0, 0, 0, 0, 0, 0, 0, }, 0 };
const TfArray<2, int> inputs12 = { 2, { 29,7 } };
const TfArray<1, int> outputs12 = { 1, { 30 } };
const TfLiteFullyConnectedParams opdata13 = { kTfLiteActRelu, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs13 = { 3, { 30,11,10 } };
const TfArray<1, int> outputs13 = { 1, { 31 } };
const TfLiteFullyConnectedParams opdata14 = { kTfLiteActNone, kTfLiteFullyConnectedWeightsFormatDefault, false, false };
const TfArray<3, int> inputs14 = { 3, { 31,9,8 } };
const TfArray<1, int> outputs14 = { 1, { 32 } };
const TfLiteSoftmaxParams opdata15 = { 1 };
const TfArray<1, int> inputs15 = { 1, { 32 } };
const TfArray<1, int> outputs15 = { 1, { 33 } };
};

TensorInfo_t tensorData[] = {
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 7760), (TfLiteIntArray*)&g0::tensor_dimension0, 7760, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant0))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data1, (TfLiteIntArray*)&g0::tensor_dimension1, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data2, (TfLiteIntArray*)&g0::tensor_dimension2, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data3, (TfLiteIntArray*)&g0::tensor_dimension3, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data4, (TfLiteIntArray*)&g0::tensor_dimension4, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data5, (TfLiteIntArray*)&g0::tensor_dimension5, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data6, (TfLiteIntArray*)&g0::tensor_dimension6, 16, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data7, (TfLiteIntArray*)&g0::tensor_dimension7, 8, {kTfLiteNoQuantization, nullptr}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data8, (TfLiteIntArray*)&g0::tensor_dimension8, 8, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant8))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data9, (TfLiteIntArray*)&g0::tensor_dimension9, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant9))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data10, (TfLiteIntArray*)&g0::tensor_dimension10, 256, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant10))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data11, (TfLiteIntArray*)&g0::tensor_dimension11, 26624, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant11))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data12, (TfLiteIntArray*)&g0::tensor_dimension12, 128, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant12))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data13, (TfLiteIntArray*)&g0::tensor_dimension13, 1536, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant13))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data14, (TfLiteIntArray*)&g0::tensor_dimension14, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant14))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data15, (TfLiteIntArray*)&g0::tensor_dimension15, 384, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant15))}, },
{ kTfLiteMmapRo, kTfLiteInt32, (int32_t*)g0::tensor_data16, (TfLiteIntArray*)&g0::tensor_dimension16, 32, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant16))}, },
{ kTfLiteMmapRo, kTfLiteInt8, (int32_t*)g0::tensor_data17, (TfLiteIntArray*)&g0::tensor_dimension17, 1920, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant17))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension18, 7760, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant18))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 8720), (TfLiteIntArray*)&g0::tensor_dimension19, 776, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant19))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension20, 776, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant20))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 784), (TfLiteIntArray*)&g0::tensor_dimension21, 392, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant21))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension22, 392, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant22))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 784), (TfLiteIntArray*)&g0::tensor_dimension23, 784, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant23))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension24, 784, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant24))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 784), (TfLiteIntArray*)&g0::tensor_dimension25, 400, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant25))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension26, 400, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant26))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 800), (TfLiteIntArray*)&g0::tensor_dimension27, 800, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant27))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension28, 800, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant28))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 800), (TfLiteIntArray*)&g0::tensor_dimension29, 416, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant29))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension30, 416, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant30))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 416), (TfLiteIntArray*)&g0::tensor_dimension31, 64, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant31))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 16), (TfLiteIntArray*)&g0::tensor_dimension32, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant32))}, },
{ kTfLiteArenaRw, kTfLiteInt8, (int32_t*)(tensor_arena + 0), (TfLiteIntArray*)&g0::tensor_dimension33, 2, {kTfLiteAffineQuantization, const_cast<void*>(static_cast<const void*>(&g0::quant33))}, },
};

#ifndef TF_LITE_STATIC_MEMORY
TfLiteNode tflNodes[16] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs12, (TfLiteIntArray*)&g0::outputs12, (TfLiteIntArray*)&g0::inputs12, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata12)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs13, (TfLiteIntArray*)&g0::outputs13, (TfLiteIntArray*)&g0::inputs13, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata13)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs14, (TfLiteIntArray*)&g0::outputs14, (TfLiteIntArray*)&g0::inputs14, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata14)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs15, (TfLiteIntArray*)&g0::outputs15, (TfLiteIntArray*)&g0::inputs15, nullptr, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata15)), nullptr, 0, },
};
#else
TfLiteNode tflNodes[16] = {
{ (TfLiteIntArray*)&g0::inputs0, (TfLiteIntArray*)&g0::outputs0, (TfLiteIntArray*)&g0::inputs0, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata0)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs1, (TfLiteIntArray*)&g0::outputs1, (TfLiteIntArray*)&g0::inputs1, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata1)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs2, (TfLiteIntArray*)&g0::outputs2, (TfLiteIntArray*)&g0::inputs2, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata2)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs3, (TfLiteIntArray*)&g0::outputs3, (TfLiteIntArray*)&g0::inputs3, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata3)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs4, (TfLiteIntArray*)&g0::outputs4, (TfLiteIntArray*)&g0::inputs4, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata4)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs5, (TfLiteIntArray*)&g0::outputs5, (TfLiteIntArray*)&g0::inputs5, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata5)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs6, (TfLiteIntArray*)&g0::outputs6, (TfLiteIntArray*)&g0::inputs6, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata6)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs7, (TfLiteIntArray*)&g0::outputs7, (TfLiteIntArray*)&g0::inputs7, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata7)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs8, (TfLiteIntArray*)&g0::outputs8, (TfLiteIntArray*)&g0::inputs8, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata8)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs9, (TfLiteIntArray*)&g0::outputs9, (TfLiteIntArray*)&g0::inputs9, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata9)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs10, (TfLiteIntArray*)&g0::outputs10, (TfLiteIntArray*)&g0::inputs10, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata10)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs11, (TfLiteIntArray*)&g0::outputs11, (TfLiteIntArray*)&g0::inputs11, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata11)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs12, (TfLiteIntArray*)&g0::outputs12, (TfLiteIntArray*)&g0::inputs12, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata12)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs13, (TfLiteIntArray*)&g0::outputs13, (TfLiteIntArray*)&g0::inputs13, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata13)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs14, (TfLiteIntArray*)&g0::outputs14, (TfLiteIntArray*)&g0::inputs14, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata14)), nullptr, 0, },
{ (TfLiteIntArray*)&g0::inputs15, (TfLiteIntArray*)&g0::outputs15, (TfLiteIntArray*)&g0::inputs15, nullptr, const_cast<void*>(static_cast<const void*>(&g0::opdata15)), nullptr, 0, },
};
#endif

used_operators_e used_ops[] =
{OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_CONV_2D, OP_RESHAPE, OP_MAX_POOL_2D, OP_RESHAPE, OP_FULLY_CONNECTED, OP_FULLY_CONNECTED, OP_SOFTMAX, };


// Indices into tflTensors and tflNodes for subgraphs
const size_t tflTensors_subgraph_index[] = {0, 34, };
const size_t tflNodes_subgraph_index[] = {0, 16, };

// Input/output tensors
static const int in_tensor_indices[] = {
  0, 
};

static const int out_tensor_indices[] = {
  33, 
};


size_t current_subgraph_index = 0;

static void init_tflite_tensor(size_t i, TfLiteTensor *tensor) {
  tensor->type = tensorData[i].type;
  tensor->is_variable = false;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  tensor->allocation_type = tensorData[i].allocation_type;
#else
  tensor->allocation_type = (tensor_arena <= tensorData[i].data && tensorData[i].data < tensor_arena + kTensorArenaSize) ? kTfLiteArenaRw : kTfLiteMmapRo;
#endif
  tensor->bytes = tensorData[i].bytes;
  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  if(tensor->allocation_type == kTfLiteArenaRw){
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
      tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
  tensor->quantization = tensorData[i].quantization;
  if (tensor->quantization.type == kTfLiteAffineQuantization) {
    TfLiteAffineQuantization const* quant = ((TfLiteAffineQuantization const*)(tensorData[i].quantization.params));
    tensor->params.scale = quant->scale->data[0];
    tensor->params.zero_point = quant->zero_point->data[0];
  }

}

static void init_tflite_eval_tensor(int i, TfLiteEvalTensor *tensor) {

  tensor->type = tensorData[i].type;

  tensor->dims = tensorData[i].dims;

#if defined(EI_CLASSIFIER_ALLOCATION_HEAP)
  auto allocation_type = tensorData[i].allocation_type;
  if(allocation_type == kTfLiteArenaRw) {
    uint8_t* start = (uint8_t*) ((uintptr_t)tensorData[i].data + (uintptr_t) tensor_arena);

    tensor->data.data =  start;
  }
  else {
    tensor->data.data = tensorData[i].data;
  }
#else
  tensor->data.data = tensorData[i].data;
#endif // EI_CLASSIFIER_ALLOCATION_HEAP
}

static void* overflow_buffers[EI_MAX_OVERFLOW_BUFFER_COUNT];
static size_t overflow_buffers_ix = 0;
static void * AllocatePersistentBufferImpl(struct TfLiteContext* ctx,
                                       size_t bytes) {
  void *ptr;
  uint32_t align_bytes = (bytes % 16) ? 16 - (bytes % 16) : 0;

  if (current_location - (bytes + align_bytes) < tensor_boundary) {
    if (overflow_buffers_ix > EI_MAX_OVERFLOW_BUFFER_COUNT - 1) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d, does not fit in tensor arena and reached EI_MAX_OVERFLOW_BUFFER_COUNT\n",
        (int)bytes);
      return NULL;
    }

    // OK, this will look super weird, but.... we have CMSIS-NN buffers which
    // we cannot calculate beforehand easily.
    ptr = ei_calloc(bytes, 1);
    if (ptr == NULL) {
      ei_printf("ERR: Failed to allocate persistent buffer of size %d\n", (int)bytes);
      return NULL;
    }
    overflow_buffers[overflow_buffers_ix++] = ptr;
    return ptr;
  }

  current_location -= bytes;

  // align to the left aligned boundary of 16 bytes
  current_location -= 15; // for alignment
  current_location += 16 - ((uintptr_t)(current_location) & 15);

  ptr = current_location;
  memset(ptr, 0, bytes);

  return ptr;
}

typedef struct {
  size_t bytes;
  void *ptr;
} scratch_buffer_t;

static scratch_buffer_t scratch_buffers[EI_MAX_SCRATCH_BUFFER_COUNT];
static size_t scratch_buffers_ix = 0;

static TfLiteStatus RequestScratchBufferInArenaImpl(struct TfLiteContext* ctx, size_t bytes,
                                                int* buffer_idx) {
  if (scratch_buffers_ix > EI_MAX_SCRATCH_BUFFER_COUNT - 1) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d, reached EI_MAX_SCRATCH_BUFFER_COUNT\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffer_t b;
  b.bytes = bytes;

  b.ptr = AllocatePersistentBufferImpl(ctx, b.bytes);
  if (!b.ptr) {
    ei_printf("ERR: Failed to allocate scratch buffer of size %d\n",
      (int)bytes);
    return kTfLiteError;
  }

  scratch_buffers[scratch_buffers_ix] = b;
  *buffer_idx = scratch_buffers_ix;

  scratch_buffers_ix++;

  return kTfLiteOk;
}

static void* GetScratchBufferImpl(struct TfLiteContext* ctx, int buffer_idx) {
  if (buffer_idx > (int)scratch_buffers_ix) {
    return NULL;
  }
  return scratch_buffers[buffer_idx].ptr;
}

static const uint16_t TENSOR_IX_UNUSED = 0x7FFF;

static void ResetTensors() {
  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    tflTensors[ix].index = TENSOR_IX_UNUSED;
  }
  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    tflEvalTensors[ix].index = TENSOR_IX_UNUSED;
  }
}

static TfLiteTensor* GetTensorImpl(const struct TfLiteContext* context,
                               int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_TENSOR_COUNT; ix++) {
    // already used? OK!
    if (tflTensors[ix].index == tensor_idx) {
      return &tflTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_tensor(tensor_idx, &tflTensors[ix].tensor);
      tflTensors[ix].index = tensor_idx;
      return &tflTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_TENSOR_COUNT (%d)\n", MAX_TFL_TENSOR_COUNT);
  return nullptr;
}

static TfLiteEvalTensor* GetEvalTensorImpl(const struct TfLiteContext* context,
                                       int tensor_idx) {

  tensor_idx = tflTensors_subgraph_index[current_subgraph_index] + tensor_idx;

  for (size_t ix = 0; ix < MAX_TFL_EVAL_COUNT; ix++) {
    // already used? OK!
    if (tflEvalTensors[ix].index == tensor_idx) {
      return &tflEvalTensors[ix].tensor;
    }
    // passed all the ones we've used, so end of the list?
    if (tflEvalTensors[ix].index == TENSOR_IX_UNUSED) {
      // init the tensor
      init_tflite_eval_tensor(tensor_idx, &tflEvalTensors[ix].tensor);
      tflEvalTensors[ix].index = tensor_idx;
      return &tflEvalTensors[ix].tensor;
    }
  }

  ei_printf("ERR: GetTensor called beyond MAX_TFL_EVAL_COUNT (%d)\n", (int)MAX_TFL_EVAL_COUNT);
  return nullptr;
}

class EonMicroContext : public MicroContext {
 public:
 
  EonMicroContext(): MicroContext(nullptr, nullptr, nullptr) { }

  void* AllocatePersistentBuffer(size_t bytes) {
    return AllocatePersistentBufferImpl(nullptr, bytes);
  }

  TfLiteStatus RequestScratchBufferInArena(size_t bytes,
                                           int* buffer_index) {
  return RequestScratchBufferInArenaImpl(nullptr, bytes, buffer_index);
  }

  void* GetScratchBuffer(int buffer_index) {
    return GetScratchBufferImpl(nullptr, buffer_index);
  }
 
  TfLiteTensor* AllocateTempTfLiteTensor(int tensor_index) {
    return GetTensorImpl(nullptr, tensor_index);
  }

  void DeallocateTempTfLiteTensor(TfLiteTensor* tensor) {
    return;
  }

  bool IsAllTempTfLiteTensorDeallocated() {
    return true;
  }

  TfLiteEvalTensor* GetEvalTensor(int tensor_index) {
    return GetEvalTensorImpl(nullptr, tensor_index);
  }

};


} // namespace

TfLiteStatus tflite_learn_3_init( void*(*alloc_fnc)(size_t,size_t) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  tensor_arena = (uint8_t*) alloc_fnc(16, kTensorArenaSize);
  if (!tensor_arena) {
    ei_printf("ERR: failed to allocate tensor arena\n");
    return kTfLiteError;
  }
#else
  memset(tensor_arena, 0, kTensorArenaSize);
#endif
  tensor_boundary = tensor_arena;
  current_location = tensor_arena + kTensorArenaSize;

  EonMicroContext micro_context_;
  
  // Set microcontext as the context ptr
  ctx.impl_ = static_cast<void*>(&micro_context_);
  // Setup tflitecontext functions
  ctx.AllocatePersistentBuffer = &AllocatePersistentBufferImpl;
  ctx.RequestScratchBufferInArena = &RequestScratchBufferInArenaImpl;
  ctx.GetScratchBuffer = &GetScratchBufferImpl;
  ctx.GetTensor = &GetTensorImpl;
  ctx.GetEvalTensor = &GetEvalTensorImpl;
  ctx.ReportError = &MicroContextReportOpError;

  ctx.tensors_size = 34;
  for (size_t i = 0; i < 34; ++i) {
    TfLiteTensor tensor;
    init_tflite_tensor(i, &tensor);
    if (tensor.allocation_type == kTfLiteArenaRw) {
      auto data_end_ptr = (uint8_t*)tensor.data.data + tensorData[i].bytes;
      if (data_end_ptr > tensor_boundary) {
        tensor_boundary = data_end_ptr;
      }
    }
  }

  if (tensor_boundary > current_location /* end of arena size */) {
    ei_printf("ERR: tensor arena is too small, does not fit model - even without scratch buffers\n");
    return kTfLiteError;
  }

  registrations[OP_RESHAPE] = Register_RESHAPE();
  registrations[OP_CONV_2D] = Register_CONV_2D();
  registrations[OP_MAX_POOL_2D] = Register_MAX_POOL_2D();
  registrations[OP_FULLY_CONNECTED] = Register_FULLY_CONNECTED();
  registrations[OP_SOFTMAX] = Register_SOFTMAX();

  for (size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].init) {
        tflNodes[i].user_data = registrations[used_ops[i]].init(&ctx, (const char*)tflNodes[i].builtin_data, 0);
      }
    }
  }
  current_subgraph_index = 0;

  for(size_t g = 0; g < 1; ++g) {
    current_subgraph_index = g;
    for(size_t i = tflNodes_subgraph_index[g]; i < tflNodes_subgraph_index[g+1]; ++i) {
      if (registrations[used_ops[i]].prepare) {
        ResetTensors();
        TfLiteStatus status = registrations[used_ops[i]].prepare(&ctx, &tflNodes[i]);
        if (status != kTfLiteOk) {
          return status;
        }
      }
    }
  }
  current_subgraph_index = 0;

  return kTfLiteOk;
}

TfLiteStatus tflite_learn_3_input(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(in_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_3_output(int index, TfLiteTensor *tensor) {
  init_tflite_tensor(out_tensor_indices[index], tensor);
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_3_invoke() {
  for (size_t i = 0; i < 16; ++i) {
    ResetTensors();

    TfLiteStatus status = registrations[used_ops[i]].invoke(&ctx, &tflNodes[i]);

#if EI_CLASSIFIER_PRINT_STATE
    ei_printf("layer %lu\n", i);
    ei_printf("    inputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].inputs->size; ix++) {
      auto d = tensorData[tflNodes[i].inputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");

    ei_printf("    outputs:\n");
    for (size_t ix = 0; ix < tflNodes[i].outputs->size; ix++) {
      auto d = tensorData[tflNodes[i].outputs->data[ix]];

      size_t data_ptr = (size_t)d.data;

      if (d.allocation_type == kTfLiteArenaRw) {
        data_ptr = (size_t)tensor_arena + data_ptr;
      }

      if (d.type == TfLiteType::kTfLiteInt8) {
        int8_t* data = (int8_t*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes; jx++) {
          ei_printf("%d ", data[jx]);
        }
      }
      else {
        float* data = (float*)data_ptr;
        ei_printf("        %lu (%zu bytes, ptr=%p, alloc_type=%d, type=%d): ", ix, d.bytes, data, (int)d.allocation_type, (int)d.type);
        for (size_t jx = 0; jx < d.bytes / 4; jx++) {
          ei_printf("%f ", data[jx]);
        }
      }
      ei_printf("\n");
    }
    ei_printf("\n");
#endif // EI_CLASSIFIER_PRINT_STATE

    if (status != kTfLiteOk) {
      return status;
    }
  }
  return kTfLiteOk;
}

TfLiteStatus tflite_learn_3_reset( void (*free_fnc)(void* ptr) ) {
#ifdef EI_CLASSIFIER_ALLOCATION_HEAP
  free_fnc(tensor_arena);
#endif

  // scratch buffers are allocated within the arena, so just reset the counter so memory can be reused
  scratch_buffers_ix = 0;

  // overflow buffers are on the heap, so free them first
  for (size_t ix = 0; ix < overflow_buffers_ix; ix++) {
    ei_free(overflow_buffers[ix]);
  }
  overflow_buffers_ix = 0;
  return kTfLiteOk;
}
